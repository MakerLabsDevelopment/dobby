{"ast":null,"code":"// source: ffs/rpc/rpc.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.ffs.rpc.AddrInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.AddrsRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.AddrsResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.BalanceInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.CancelJobRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.CancelJobResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.CidInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ColdConfig', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ColdInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.CreatePayChannelRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.CreatePayChannelResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.CreateRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.CreateResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.DealError', null, global);\ngoog.exportSymbol('proto.ffs.rpc.DefaultStorageConfigRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.DefaultStorageConfigResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.Direction', null, global);\ngoog.exportSymbol('proto.ffs.rpc.FilConfig', null, global);\ngoog.exportSymbol('proto.ffs.rpc.FilInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.FilRenew', null, global);\ngoog.exportSymbol('proto.ffs.rpc.FilStorage', null, global);\ngoog.exportSymbol('proto.ffs.rpc.GetRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.GetResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.GetStorageConfigRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.GetStorageConfigResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.HotConfig', null, global);\ngoog.exportSymbol('proto.ffs.rpc.HotInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.IDRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.IDResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.InfoRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.InfoResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.InstanceInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.IpfsConfig', null, global);\ngoog.exportSymbol('proto.ffs.rpc.IpfsHotInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.Job', null, global);\ngoog.exportSymbol('proto.ffs.rpc.JobStatus', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ListAPIRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ListAPIResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ListDealRecordsConfig', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ListPayChannelsRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ListPayChannelsResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ListRetrievalDealRecordsRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ListRetrievalDealRecordsResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ListStorageDealRecordsRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ListStorageDealRecordsResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.LogEntry', null, global);\ngoog.exportSymbol('proto.ffs.rpc.NewAddrRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.NewAddrResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.PaychInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.PushStorageConfigRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.PushStorageConfigResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.RedeemPayChannelRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.RedeemPayChannelResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.RemoveRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.RemoveResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ReplaceRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ReplaceResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.RetrievalDealInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.RetrievalDealRecord', null, global);\ngoog.exportSymbol('proto.ffs.rpc.SendFilRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.SendFilResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.SetDefaultStorageConfigRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.SetDefaultStorageConfigResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ShowAllRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ShowAllResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ShowRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ShowResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.StageRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.StageResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.StorageConfig', null, global);\ngoog.exportSymbol('proto.ffs.rpc.StorageDealInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.StorageDealRecord', null, global);\ngoog.exportSymbol('proto.ffs.rpc.WatchJobsRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.WatchJobsResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.WatchLogsRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.WatchLogsResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.ffs.rpc.AddrInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.AddrInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.AddrInfo.displayName = 'proto.ffs.rpc.AddrInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.IpfsConfig = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.IpfsConfig, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.IpfsConfig.displayName = 'proto.ffs.rpc.IpfsConfig';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.HotConfig = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.HotConfig, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.HotConfig.displayName = 'proto.ffs.rpc.HotConfig';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.FilRenew = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.FilRenew, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.FilRenew.displayName = 'proto.ffs.rpc.FilRenew';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.FilConfig = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.FilConfig.repeatedFields_, null);\n};\n\ngoog.inherits(proto.ffs.rpc.FilConfig, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.FilConfig.displayName = 'proto.ffs.rpc.FilConfig';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.ColdConfig = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.ColdConfig, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ColdConfig.displayName = 'proto.ffs.rpc.ColdConfig';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.StorageConfig = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.StorageConfig, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.StorageConfig.displayName = 'proto.ffs.rpc.StorageConfig';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.IpfsHotInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.IpfsHotInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.IpfsHotInfo.displayName = 'proto.ffs.rpc.IpfsHotInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.HotInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.HotInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.HotInfo.displayName = 'proto.ffs.rpc.HotInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.FilStorage = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.FilStorage, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.FilStorage.displayName = 'proto.ffs.rpc.FilStorage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.FilInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.FilInfo.repeatedFields_, null);\n};\n\ngoog.inherits(proto.ffs.rpc.FilInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.FilInfo.displayName = 'proto.ffs.rpc.FilInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.ColdInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.ColdInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ColdInfo.displayName = 'proto.ffs.rpc.ColdInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.CidInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.CidInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.CidInfo.displayName = 'proto.ffs.rpc.CidInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.BalanceInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.BalanceInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.BalanceInfo.displayName = 'proto.ffs.rpc.BalanceInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.InstanceInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.InstanceInfo.repeatedFields_, null);\n};\n\ngoog.inherits(proto.ffs.rpc.InstanceInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.InstanceInfo.displayName = 'proto.ffs.rpc.InstanceInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.Job = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.Job.repeatedFields_, null);\n};\n\ngoog.inherits(proto.ffs.rpc.Job, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.Job.displayName = 'proto.ffs.rpc.Job';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.DealError = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.DealError, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.DealError.displayName = 'proto.ffs.rpc.DealError';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.LogEntry = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.LogEntry, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.LogEntry.displayName = 'proto.ffs.rpc.LogEntry';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.PaychInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.PaychInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.PaychInfo.displayName = 'proto.ffs.rpc.PaychInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.ListDealRecordsConfig.repeatedFields_, null);\n};\n\ngoog.inherits(proto.ffs.rpc.ListDealRecordsConfig, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ListDealRecordsConfig.displayName = 'proto.ffs.rpc.ListDealRecordsConfig';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.StorageDealInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.StorageDealInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.StorageDealInfo.displayName = 'proto.ffs.rpc.StorageDealInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.StorageDealRecord = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.StorageDealRecord, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.StorageDealRecord.displayName = 'proto.ffs.rpc.StorageDealRecord';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.RetrievalDealInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.RetrievalDealInfo.displayName = 'proto.ffs.rpc.RetrievalDealInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.RetrievalDealRecord = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.RetrievalDealRecord, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.RetrievalDealRecord.displayName = 'proto.ffs.rpc.RetrievalDealRecord';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.CreateRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.CreateRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.CreateRequest.displayName = 'proto.ffs.rpc.CreateRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.CreateResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.CreateResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.CreateResponse.displayName = 'proto.ffs.rpc.CreateResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.ListAPIRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.ListAPIRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ListAPIRequest.displayName = 'proto.ffs.rpc.ListAPIRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.ListAPIResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.ListAPIResponse.repeatedFields_, null);\n};\n\ngoog.inherits(proto.ffs.rpc.ListAPIResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ListAPIResponse.displayName = 'proto.ffs.rpc.ListAPIResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.IDRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.IDRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.IDRequest.displayName = 'proto.ffs.rpc.IDRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.IDResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.IDResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.IDResponse.displayName = 'proto.ffs.rpc.IDResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.AddrsRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.AddrsRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.AddrsRequest.displayName = 'proto.ffs.rpc.AddrsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.AddrsResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.AddrsResponse.repeatedFields_, null);\n};\n\ngoog.inherits(proto.ffs.rpc.AddrsResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.AddrsResponse.displayName = 'proto.ffs.rpc.AddrsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.DefaultStorageConfigRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.DefaultStorageConfigRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.DefaultStorageConfigRequest.displayName = 'proto.ffs.rpc.DefaultStorageConfigRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.DefaultStorageConfigResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.DefaultStorageConfigResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.DefaultStorageConfigResponse.displayName = 'proto.ffs.rpc.DefaultStorageConfigResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.NewAddrRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.NewAddrRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.NewAddrRequest.displayName = 'proto.ffs.rpc.NewAddrRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.NewAddrResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.NewAddrResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.NewAddrResponse.displayName = 'proto.ffs.rpc.NewAddrResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.GetStorageConfigRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.GetStorageConfigRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.GetStorageConfigRequest.displayName = 'proto.ffs.rpc.GetStorageConfigRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.GetStorageConfigResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.GetStorageConfigResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.GetStorageConfigResponse.displayName = 'proto.ffs.rpc.GetStorageConfigResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.SetDefaultStorageConfigRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.SetDefaultStorageConfigRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.SetDefaultStorageConfigRequest.displayName = 'proto.ffs.rpc.SetDefaultStorageConfigRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.SetDefaultStorageConfigResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.SetDefaultStorageConfigResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.SetDefaultStorageConfigResponse.displayName = 'proto.ffs.rpc.SetDefaultStorageConfigResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.ShowRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.ShowRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ShowRequest.displayName = 'proto.ffs.rpc.ShowRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.ShowResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.ShowResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ShowResponse.displayName = 'proto.ffs.rpc.ShowResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.InfoRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.InfoRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.InfoRequest.displayName = 'proto.ffs.rpc.InfoRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.InfoResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.InfoResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.InfoResponse.displayName = 'proto.ffs.rpc.InfoResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.CancelJobRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.CancelJobRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.CancelJobRequest.displayName = 'proto.ffs.rpc.CancelJobRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.CancelJobResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.CancelJobResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.CancelJobResponse.displayName = 'proto.ffs.rpc.CancelJobResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.WatchJobsRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.WatchJobsRequest.repeatedFields_, null);\n};\n\ngoog.inherits(proto.ffs.rpc.WatchJobsRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.WatchJobsRequest.displayName = 'proto.ffs.rpc.WatchJobsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.WatchJobsResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.WatchJobsResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.WatchJobsResponse.displayName = 'proto.ffs.rpc.WatchJobsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.WatchLogsRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.WatchLogsRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.WatchLogsRequest.displayName = 'proto.ffs.rpc.WatchLogsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.WatchLogsResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.WatchLogsResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.WatchLogsResponse.displayName = 'proto.ffs.rpc.WatchLogsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.ReplaceRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.ReplaceRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ReplaceRequest.displayName = 'proto.ffs.rpc.ReplaceRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.ReplaceResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.ReplaceResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ReplaceResponse.displayName = 'proto.ffs.rpc.ReplaceResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.PushStorageConfigRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.PushStorageConfigRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.PushStorageConfigRequest.displayName = 'proto.ffs.rpc.PushStorageConfigRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.PushStorageConfigResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.PushStorageConfigResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.PushStorageConfigResponse.displayName = 'proto.ffs.rpc.PushStorageConfigResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.RemoveRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.RemoveRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.RemoveRequest.displayName = 'proto.ffs.rpc.RemoveRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.RemoveResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.RemoveResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.RemoveResponse.displayName = 'proto.ffs.rpc.RemoveResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.GetRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.GetRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.GetRequest.displayName = 'proto.ffs.rpc.GetRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.GetResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.GetResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.GetResponse.displayName = 'proto.ffs.rpc.GetResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.SendFilRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.SendFilRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.SendFilRequest.displayName = 'proto.ffs.rpc.SendFilRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.SendFilResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.SendFilResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.SendFilResponse.displayName = 'proto.ffs.rpc.SendFilResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.StageRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.StageRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.StageRequest.displayName = 'proto.ffs.rpc.StageRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.StageResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.StageResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.StageResponse.displayName = 'proto.ffs.rpc.StageResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.ListPayChannelsRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.ListPayChannelsRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ListPayChannelsRequest.displayName = 'proto.ffs.rpc.ListPayChannelsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.ListPayChannelsResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.ListPayChannelsResponse.repeatedFields_, null);\n};\n\ngoog.inherits(proto.ffs.rpc.ListPayChannelsResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ListPayChannelsResponse.displayName = 'proto.ffs.rpc.ListPayChannelsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.CreatePayChannelRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.CreatePayChannelRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.CreatePayChannelRequest.displayName = 'proto.ffs.rpc.CreatePayChannelRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.CreatePayChannelResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.CreatePayChannelResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.CreatePayChannelResponse.displayName = 'proto.ffs.rpc.CreatePayChannelResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.RedeemPayChannelRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.RedeemPayChannelRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.RedeemPayChannelRequest.displayName = 'proto.ffs.rpc.RedeemPayChannelRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.RedeemPayChannelResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.RedeemPayChannelResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.RedeemPayChannelResponse.displayName = 'proto.ffs.rpc.RedeemPayChannelResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.ListStorageDealRecordsRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.ListStorageDealRecordsRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ListStorageDealRecordsRequest.displayName = 'proto.ffs.rpc.ListStorageDealRecordsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.ListStorageDealRecordsResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.ListStorageDealRecordsResponse.repeatedFields_, null);\n};\n\ngoog.inherits(proto.ffs.rpc.ListStorageDealRecordsResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ListStorageDealRecordsResponse.displayName = 'proto.ffs.rpc.ListStorageDealRecordsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.ListRetrievalDealRecordsRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ListRetrievalDealRecordsRequest.displayName = 'proto.ffs.rpc.ListRetrievalDealRecordsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.ListRetrievalDealRecordsResponse.repeatedFields_, null);\n};\n\ngoog.inherits(proto.ffs.rpc.ListRetrievalDealRecordsResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ListRetrievalDealRecordsResponse.displayName = 'proto.ffs.rpc.ListRetrievalDealRecordsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.ShowAllRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ffs.rpc.ShowAllRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ShowAllRequest.displayName = 'proto.ffs.rpc.ShowAllRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ffs.rpc.ShowAllResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.ShowAllResponse.repeatedFields_, null);\n};\n\ngoog.inherits(proto.ffs.rpc.ShowAllResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ShowAllResponse.displayName = 'proto.ffs.rpc.ShowAllResponse';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.AddrInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.AddrInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.AddrInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.AddrInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      addr: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      type: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.AddrInfo}\n */\n\n\nproto.ffs.rpc.AddrInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.AddrInfo();\n  return proto.ffs.rpc.AddrInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.AddrInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.AddrInfo}\n */\n\n\nproto.ffs.rpc.AddrInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAddr(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setType(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.AddrInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.AddrInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.AddrInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.AddrInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getAddr();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getType();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * optional string name = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.AddrInfo.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.AddrInfo} returns this\n */\n\n\nproto.ffs.rpc.AddrInfo.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string addr = 2;\n * @return {string}\n */\n\n\nproto.ffs.rpc.AddrInfo.prototype.getAddr = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.AddrInfo} returns this\n */\n\n\nproto.ffs.rpc.AddrInfo.prototype.setAddr = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string type = 3;\n * @return {string}\n */\n\n\nproto.ffs.rpc.AddrInfo.prototype.getType = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.AddrInfo} returns this\n */\n\n\nproto.ffs.rpc.AddrInfo.prototype.setType = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.IpfsConfig.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.IpfsConfig.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.IpfsConfig} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.IpfsConfig.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addTimeout: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.IpfsConfig}\n */\n\n\nproto.ffs.rpc.IpfsConfig.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.IpfsConfig();\n  return proto.ffs.rpc.IpfsConfig.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.IpfsConfig} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.IpfsConfig}\n */\n\n\nproto.ffs.rpc.IpfsConfig.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setAddTimeout(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.IpfsConfig.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.IpfsConfig.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.IpfsConfig} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.IpfsConfig.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddTimeout();\n\n  if (f !== 0) {\n    writer.writeInt64(1, f);\n  }\n};\n/**\n * optional int64 add_timeout = 1;\n * @return {number}\n */\n\n\nproto.ffs.rpc.IpfsConfig.prototype.getAddTimeout = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.IpfsConfig} returns this\n */\n\n\nproto.ffs.rpc.IpfsConfig.prototype.setAddTimeout = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.HotConfig.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.HotConfig.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.HotConfig} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.HotConfig.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n      allowUnfreeze: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),\n      unfreezeMaxPrice: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      ipfs: (f = msg.getIpfs()) && proto.ffs.rpc.IpfsConfig.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.HotConfig}\n */\n\n\nproto.ffs.rpc.HotConfig.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.HotConfig();\n  return proto.ffs.rpc.HotConfig.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.HotConfig} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.HotConfig}\n */\n\n\nproto.ffs.rpc.HotConfig.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setEnabled(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setAllowUnfreeze(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setUnfreezeMaxPrice(value);\n        break;\n\n      case 4:\n        var value = new proto.ffs.rpc.IpfsConfig();\n        reader.readMessage(value, proto.ffs.rpc.IpfsConfig.deserializeBinaryFromReader);\n        msg.setIpfs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.HotConfig.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.HotConfig.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.HotConfig} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.HotConfig.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getEnabled();\n\n  if (f) {\n    writer.writeBool(1, f);\n  }\n\n  f = message.getAllowUnfreeze();\n\n  if (f) {\n    writer.writeBool(2, f);\n  }\n\n  f = message.getUnfreezeMaxPrice();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n\n  f = message.getIpfs();\n\n  if (f != null) {\n    writer.writeMessage(4, f, proto.ffs.rpc.IpfsConfig.serializeBinaryToWriter);\n  }\n};\n/**\n * optional bool enabled = 1;\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.HotConfig.prototype.getEnabled = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 1, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.HotConfig} returns this\n */\n\n\nproto.ffs.rpc.HotConfig.prototype.setEnabled = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n/**\n * optional bool allow_unfreeze = 2;\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.HotConfig.prototype.getAllowUnfreeze = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 2, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.HotConfig} returns this\n */\n\n\nproto.ffs.rpc.HotConfig.prototype.setAllowUnfreeze = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n/**\n * optional uint64 unfreeze_max_price = 3;\n * @return {number}\n */\n\n\nproto.ffs.rpc.HotConfig.prototype.getUnfreezeMaxPrice = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.HotConfig} returns this\n */\n\n\nproto.ffs.rpc.HotConfig.prototype.setUnfreezeMaxPrice = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional IpfsConfig ipfs = 4;\n * @return {?proto.ffs.rpc.IpfsConfig}\n */\n\n\nproto.ffs.rpc.HotConfig.prototype.getIpfs = function () {\n  return (\n    /** @type{?proto.ffs.rpc.IpfsConfig} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.IpfsConfig, 4)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.IpfsConfig|undefined} value\n * @return {!proto.ffs.rpc.HotConfig} returns this\n*/\n\n\nproto.ffs.rpc.HotConfig.prototype.setIpfs = function (value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.HotConfig} returns this\n */\n\n\nproto.ffs.rpc.HotConfig.prototype.clearIpfs = function () {\n  return this.setIpfs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.HotConfig.prototype.hasIpfs = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.FilRenew.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.FilRenew.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.FilRenew} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.FilRenew.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n      threshold: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.FilRenew}\n */\n\n\nproto.ffs.rpc.FilRenew.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.FilRenew();\n  return proto.ffs.rpc.FilRenew.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.FilRenew} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.FilRenew}\n */\n\n\nproto.ffs.rpc.FilRenew.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setEnabled(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setThreshold(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.FilRenew.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.FilRenew.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.FilRenew} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.FilRenew.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getEnabled();\n\n  if (f) {\n    writer.writeBool(1, f);\n  }\n\n  f = message.getThreshold();\n\n  if (f !== 0) {\n    writer.writeInt64(2, f);\n  }\n};\n/**\n * optional bool enabled = 1;\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.FilRenew.prototype.getEnabled = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 1, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.FilRenew} returns this\n */\n\n\nproto.ffs.rpc.FilRenew.prototype.setEnabled = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n/**\n * optional int64 threshold = 2;\n * @return {number}\n */\n\n\nproto.ffs.rpc.FilRenew.prototype.getThreshold = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.FilRenew} returns this\n */\n\n\nproto.ffs.rpc.FilRenew.prototype.setThreshold = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.ffs.rpc.FilConfig.repeatedFields_ = [3, 4, 5];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.FilConfig.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.FilConfig.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.FilConfig} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.FilConfig.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      repFactor: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      dealMinDuration: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      excludedMinersList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,\n      trustedMinersList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,\n      countryCodesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,\n      renew: (f = msg.getRenew()) && proto.ffs.rpc.FilRenew.toObject(includeInstance, f),\n      addr: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n      maxPrice: jspb.Message.getFieldWithDefault(msg, 8, 0),\n      fastRetrieval: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.FilConfig}\n */\n\n\nproto.ffs.rpc.FilConfig.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.FilConfig();\n  return proto.ffs.rpc.FilConfig.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.FilConfig} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.FilConfig}\n */\n\n\nproto.ffs.rpc.FilConfig.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setRepFactor(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setDealMinDuration(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addExcludedMiners(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addTrustedMiners(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addCountryCodes(value);\n        break;\n\n      case 6:\n        var value = new proto.ffs.rpc.FilRenew();\n        reader.readMessage(value, proto.ffs.rpc.FilRenew.deserializeBinaryFromReader);\n        msg.setRenew(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAddr(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setMaxPrice(value);\n        break;\n\n      case 9:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setFastRetrieval(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.FilConfig.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.FilConfig} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.FilConfig.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getRepFactor();\n\n  if (f !== 0) {\n    writer.writeInt64(1, f);\n  }\n\n  f = message.getDealMinDuration();\n\n  if (f !== 0) {\n    writer.writeInt64(2, f);\n  }\n\n  f = message.getExcludedMinersList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(3, f);\n  }\n\n  f = message.getTrustedMinersList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(4, f);\n  }\n\n  f = message.getCountryCodesList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(5, f);\n  }\n\n  f = message.getRenew();\n\n  if (f != null) {\n    writer.writeMessage(6, f, proto.ffs.rpc.FilRenew.serializeBinaryToWriter);\n  }\n\n  f = message.getAddr();\n\n  if (f.length > 0) {\n    writer.writeString(7, f);\n  }\n\n  f = message.getMaxPrice();\n\n  if (f !== 0) {\n    writer.writeUint64(8, f);\n  }\n\n  f = message.getFastRetrieval();\n\n  if (f) {\n    writer.writeBool(9, f);\n  }\n};\n/**\n * optional int64 rep_factor = 1;\n * @return {number}\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.getRepFactor = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.setRepFactor = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional int64 deal_min_duration = 2;\n * @return {number}\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.getDealMinDuration = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.setDealMinDuration = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * repeated string excluded_miners = 3;\n * @return {!Array<string>}\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.getExcludedMinersList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 3)\n  );\n};\n/**\n * @param {!Array<string>} value\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.setExcludedMinersList = function (value) {\n  return jspb.Message.setField(this, 3, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.addExcludedMiners = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.clearExcludedMinersList = function () {\n  return this.setExcludedMinersList([]);\n};\n/**\n * repeated string trusted_miners = 4;\n * @return {!Array<string>}\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.getTrustedMinersList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 4)\n  );\n};\n/**\n * @param {!Array<string>} value\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.setTrustedMinersList = function (value) {\n  return jspb.Message.setField(this, 4, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.addTrustedMiners = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.clearTrustedMinersList = function () {\n  return this.setTrustedMinersList([]);\n};\n/**\n * repeated string country_codes = 5;\n * @return {!Array<string>}\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.getCountryCodesList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 5)\n  );\n};\n/**\n * @param {!Array<string>} value\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.setCountryCodesList = function (value) {\n  return jspb.Message.setField(this, 5, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.addCountryCodes = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.clearCountryCodesList = function () {\n  return this.setCountryCodesList([]);\n};\n/**\n * optional FilRenew renew = 6;\n * @return {?proto.ffs.rpc.FilRenew}\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.getRenew = function () {\n  return (\n    /** @type{?proto.ffs.rpc.FilRenew} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.FilRenew, 6)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.FilRenew|undefined} value\n * @return {!proto.ffs.rpc.FilConfig} returns this\n*/\n\n\nproto.ffs.rpc.FilConfig.prototype.setRenew = function (value) {\n  return jspb.Message.setWrapperField(this, 6, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.clearRenew = function () {\n  return this.setRenew(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.hasRenew = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional string addr = 7;\n * @return {string}\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.getAddr = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 7, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.setAddr = function (value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n/**\n * optional uint64 max_price = 8;\n * @return {number}\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.getMaxPrice = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 8, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.setMaxPrice = function (value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n/**\n * optional bool fast_retrieval = 9;\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.getFastRetrieval = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 9, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\n\n\nproto.ffs.rpc.FilConfig.prototype.setFastRetrieval = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 9, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.ColdConfig.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.ColdConfig.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.ColdConfig} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.ColdConfig.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n      filecoin: (f = msg.getFilecoin()) && proto.ffs.rpc.FilConfig.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ColdConfig}\n */\n\n\nproto.ffs.rpc.ColdConfig.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ColdConfig();\n  return proto.ffs.rpc.ColdConfig.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ColdConfig} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ColdConfig}\n */\n\n\nproto.ffs.rpc.ColdConfig.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setEnabled(value);\n        break;\n\n      case 2:\n        var value = new proto.ffs.rpc.FilConfig();\n        reader.readMessage(value, proto.ffs.rpc.FilConfig.deserializeBinaryFromReader);\n        msg.setFilecoin(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.ColdConfig.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ColdConfig.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ColdConfig} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.ColdConfig.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getEnabled();\n\n  if (f) {\n    writer.writeBool(1, f);\n  }\n\n  f = message.getFilecoin();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.ffs.rpc.FilConfig.serializeBinaryToWriter);\n  }\n};\n/**\n * optional bool enabled = 1;\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.ColdConfig.prototype.getEnabled = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 1, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.ColdConfig} returns this\n */\n\n\nproto.ffs.rpc.ColdConfig.prototype.setEnabled = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n/**\n * optional FilConfig filecoin = 2;\n * @return {?proto.ffs.rpc.FilConfig}\n */\n\n\nproto.ffs.rpc.ColdConfig.prototype.getFilecoin = function () {\n  return (\n    /** @type{?proto.ffs.rpc.FilConfig} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.FilConfig, 2)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.FilConfig|undefined} value\n * @return {!proto.ffs.rpc.ColdConfig} returns this\n*/\n\n\nproto.ffs.rpc.ColdConfig.prototype.setFilecoin = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.ColdConfig} returns this\n */\n\n\nproto.ffs.rpc.ColdConfig.prototype.clearFilecoin = function () {\n  return this.setFilecoin(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.ColdConfig.prototype.hasFilecoin = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.StorageConfig.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.StorageConfig.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.StorageConfig} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.StorageConfig.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      hot: (f = msg.getHot()) && proto.ffs.rpc.HotConfig.toObject(includeInstance, f),\n      cold: (f = msg.getCold()) && proto.ffs.rpc.ColdConfig.toObject(includeInstance, f),\n      repairable: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.StorageConfig}\n */\n\n\nproto.ffs.rpc.StorageConfig.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.StorageConfig();\n  return proto.ffs.rpc.StorageConfig.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.StorageConfig} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.StorageConfig}\n */\n\n\nproto.ffs.rpc.StorageConfig.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.ffs.rpc.HotConfig();\n        reader.readMessage(value, proto.ffs.rpc.HotConfig.deserializeBinaryFromReader);\n        msg.setHot(value);\n        break;\n\n      case 2:\n        var value = new proto.ffs.rpc.ColdConfig();\n        reader.readMessage(value, proto.ffs.rpc.ColdConfig.deserializeBinaryFromReader);\n        msg.setCold(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setRepairable(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.StorageConfig.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.StorageConfig.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.StorageConfig} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.StorageConfig.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getHot();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.ffs.rpc.HotConfig.serializeBinaryToWriter);\n  }\n\n  f = message.getCold();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.ffs.rpc.ColdConfig.serializeBinaryToWriter);\n  }\n\n  f = message.getRepairable();\n\n  if (f) {\n    writer.writeBool(3, f);\n  }\n};\n/**\n * optional HotConfig hot = 1;\n * @return {?proto.ffs.rpc.HotConfig}\n */\n\n\nproto.ffs.rpc.StorageConfig.prototype.getHot = function () {\n  return (\n    /** @type{?proto.ffs.rpc.HotConfig} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.HotConfig, 1)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.HotConfig|undefined} value\n * @return {!proto.ffs.rpc.StorageConfig} returns this\n*/\n\n\nproto.ffs.rpc.StorageConfig.prototype.setHot = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.StorageConfig} returns this\n */\n\n\nproto.ffs.rpc.StorageConfig.prototype.clearHot = function () {\n  return this.setHot(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.StorageConfig.prototype.hasHot = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional ColdConfig cold = 2;\n * @return {?proto.ffs.rpc.ColdConfig}\n */\n\n\nproto.ffs.rpc.StorageConfig.prototype.getCold = function () {\n  return (\n    /** @type{?proto.ffs.rpc.ColdConfig} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.ColdConfig, 2)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.ColdConfig|undefined} value\n * @return {!proto.ffs.rpc.StorageConfig} returns this\n*/\n\n\nproto.ffs.rpc.StorageConfig.prototype.setCold = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.StorageConfig} returns this\n */\n\n\nproto.ffs.rpc.StorageConfig.prototype.clearCold = function () {\n  return this.setCold(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.StorageConfig.prototype.hasCold = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bool repairable = 3;\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.StorageConfig.prototype.getRepairable = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 3, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.StorageConfig} returns this\n */\n\n\nproto.ffs.rpc.StorageConfig.prototype.setRepairable = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.IpfsHotInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.IpfsHotInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.IpfsHotInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.IpfsHotInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      created: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.IpfsHotInfo}\n */\n\n\nproto.ffs.rpc.IpfsHotInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.IpfsHotInfo();\n  return proto.ffs.rpc.IpfsHotInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.IpfsHotInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.IpfsHotInfo}\n */\n\n\nproto.ffs.rpc.IpfsHotInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setCreated(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.IpfsHotInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.IpfsHotInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.IpfsHotInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.IpfsHotInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCreated();\n\n  if (f !== 0) {\n    writer.writeInt64(1, f);\n  }\n};\n/**\n * optional int64 created = 1;\n * @return {number}\n */\n\n\nproto.ffs.rpc.IpfsHotInfo.prototype.getCreated = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.IpfsHotInfo} returns this\n */\n\n\nproto.ffs.rpc.IpfsHotInfo.prototype.setCreated = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.HotInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.HotInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.HotInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.HotInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n      size: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      ipfs: (f = msg.getIpfs()) && proto.ffs.rpc.IpfsHotInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.HotInfo}\n */\n\n\nproto.ffs.rpc.HotInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.HotInfo();\n  return proto.ffs.rpc.HotInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.HotInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.HotInfo}\n */\n\n\nproto.ffs.rpc.HotInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setEnabled(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setSize(value);\n        break;\n\n      case 3:\n        var value = new proto.ffs.rpc.IpfsHotInfo();\n        reader.readMessage(value, proto.ffs.rpc.IpfsHotInfo.deserializeBinaryFromReader);\n        msg.setIpfs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.HotInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.HotInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.HotInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.HotInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getEnabled();\n\n  if (f) {\n    writer.writeBool(1, f);\n  }\n\n  f = message.getSize();\n\n  if (f !== 0) {\n    writer.writeInt64(2, f);\n  }\n\n  f = message.getIpfs();\n\n  if (f != null) {\n    writer.writeMessage(3, f, proto.ffs.rpc.IpfsHotInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * optional bool enabled = 1;\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.HotInfo.prototype.getEnabled = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 1, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.HotInfo} returns this\n */\n\n\nproto.ffs.rpc.HotInfo.prototype.setEnabled = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n/**\n * optional int64 size = 2;\n * @return {number}\n */\n\n\nproto.ffs.rpc.HotInfo.prototype.getSize = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.HotInfo} returns this\n */\n\n\nproto.ffs.rpc.HotInfo.prototype.setSize = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional IpfsHotInfo ipfs = 3;\n * @return {?proto.ffs.rpc.IpfsHotInfo}\n */\n\n\nproto.ffs.rpc.HotInfo.prototype.getIpfs = function () {\n  return (\n    /** @type{?proto.ffs.rpc.IpfsHotInfo} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.IpfsHotInfo, 3)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.IpfsHotInfo|undefined} value\n * @return {!proto.ffs.rpc.HotInfo} returns this\n*/\n\n\nproto.ffs.rpc.HotInfo.prototype.setIpfs = function (value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.HotInfo} returns this\n */\n\n\nproto.ffs.rpc.HotInfo.prototype.clearIpfs = function () {\n  return this.setIpfs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.HotInfo.prototype.hasIpfs = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.FilStorage.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.FilStorage.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.FilStorage} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.FilStorage.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      proposalCid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      renewed: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),\n      duration: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      activationEpoch: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      startEpoch: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      miner: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n      epochPrice: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      pieceCid: jspb.Message.getFieldWithDefault(msg, 8, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.FilStorage}\n */\n\n\nproto.ffs.rpc.FilStorage.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.FilStorage();\n  return proto.ffs.rpc.FilStorage.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.FilStorage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.FilStorage}\n */\n\n\nproto.ffs.rpc.FilStorage.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setProposalCid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setRenewed(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setDuration(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setActivationEpoch(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setStartEpoch(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMiner(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setEpochPrice(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPieceCid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.FilStorage.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.FilStorage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.FilStorage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.FilStorage.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getProposalCid();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getRenewed();\n\n  if (f) {\n    writer.writeBool(2, f);\n  }\n\n  f = message.getDuration();\n\n  if (f !== 0) {\n    writer.writeInt64(3, f);\n  }\n\n  f = message.getActivationEpoch();\n\n  if (f !== 0) {\n    writer.writeInt64(4, f);\n  }\n\n  f = message.getStartEpoch();\n\n  if (f !== 0) {\n    writer.writeUint64(5, f);\n  }\n\n  f = message.getMiner();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n\n  f = message.getEpochPrice();\n\n  if (f !== 0) {\n    writer.writeUint64(7, f);\n  }\n\n  f = message.getPieceCid();\n\n  if (f.length > 0) {\n    writer.writeString(8, f);\n  }\n};\n/**\n * optional string proposal_cid = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.FilStorage.prototype.getProposalCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.FilStorage} returns this\n */\n\n\nproto.ffs.rpc.FilStorage.prototype.setProposalCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional bool renewed = 2;\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.FilStorage.prototype.getRenewed = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 2, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.FilStorage} returns this\n */\n\n\nproto.ffs.rpc.FilStorage.prototype.setRenewed = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n/**\n * optional int64 duration = 3;\n * @return {number}\n */\n\n\nproto.ffs.rpc.FilStorage.prototype.getDuration = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.FilStorage} returns this\n */\n\n\nproto.ffs.rpc.FilStorage.prototype.setDuration = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional int64 activation_epoch = 4;\n * @return {number}\n */\n\n\nproto.ffs.rpc.FilStorage.prototype.getActivationEpoch = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.FilStorage} returns this\n */\n\n\nproto.ffs.rpc.FilStorage.prototype.setActivationEpoch = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional uint64 start_epoch = 5;\n * @return {number}\n */\n\n\nproto.ffs.rpc.FilStorage.prototype.getStartEpoch = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.FilStorage} returns this\n */\n\n\nproto.ffs.rpc.FilStorage.prototype.setStartEpoch = function (value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * optional string miner = 6;\n * @return {string}\n */\n\n\nproto.ffs.rpc.FilStorage.prototype.getMiner = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.FilStorage} returns this\n */\n\n\nproto.ffs.rpc.FilStorage.prototype.setMiner = function (value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n/**\n * optional uint64 epoch_price = 7;\n * @return {number}\n */\n\n\nproto.ffs.rpc.FilStorage.prototype.getEpochPrice = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 7, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.FilStorage} returns this\n */\n\n\nproto.ffs.rpc.FilStorage.prototype.setEpochPrice = function (value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n/**\n * optional string piece_cid = 8;\n * @return {string}\n */\n\n\nproto.ffs.rpc.FilStorage.prototype.getPieceCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 8, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.FilStorage} returns this\n */\n\n\nproto.ffs.rpc.FilStorage.prototype.setPieceCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.ffs.rpc.FilInfo.repeatedFields_ = [3];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.FilInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.FilInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.FilInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.FilInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dataCid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      size: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      proposalsList: jspb.Message.toObjectList(msg.getProposalsList(), proto.ffs.rpc.FilStorage.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.FilInfo}\n */\n\n\nproto.ffs.rpc.FilInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.FilInfo();\n  return proto.ffs.rpc.FilInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.FilInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.FilInfo}\n */\n\n\nproto.ffs.rpc.FilInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDataCid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setSize(value);\n        break;\n\n      case 3:\n        var value = new proto.ffs.rpc.FilStorage();\n        reader.readMessage(value, proto.ffs.rpc.FilStorage.deserializeBinaryFromReader);\n        msg.addProposals(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.FilInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.FilInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.FilInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.FilInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDataCid();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getSize();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getProposalsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(3, f, proto.ffs.rpc.FilStorage.serializeBinaryToWriter);\n  }\n};\n/**\n * optional string data_cid = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.FilInfo.prototype.getDataCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.FilInfo} returns this\n */\n\n\nproto.ffs.rpc.FilInfo.prototype.setDataCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional uint64 size = 2;\n * @return {number}\n */\n\n\nproto.ffs.rpc.FilInfo.prototype.getSize = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.FilInfo} returns this\n */\n\n\nproto.ffs.rpc.FilInfo.prototype.setSize = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * repeated FilStorage proposals = 3;\n * @return {!Array<!proto.ffs.rpc.FilStorage>}\n */\n\n\nproto.ffs.rpc.FilInfo.prototype.getProposalsList = function () {\n  return (\n    /** @type{!Array<!proto.ffs.rpc.FilStorage>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.ffs.rpc.FilStorage, 3)\n  );\n};\n/**\n * @param {!Array<!proto.ffs.rpc.FilStorage>} value\n * @return {!proto.ffs.rpc.FilInfo} returns this\n*/\n\n\nproto.ffs.rpc.FilInfo.prototype.setProposalsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n/**\n * @param {!proto.ffs.rpc.FilStorage=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.FilStorage}\n */\n\n\nproto.ffs.rpc.FilInfo.prototype.addProposals = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ffs.rpc.FilStorage, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.FilInfo} returns this\n */\n\n\nproto.ffs.rpc.FilInfo.prototype.clearProposalsList = function () {\n  return this.setProposalsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.ColdInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.ColdInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.ColdInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.ColdInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n      filecoin: (f = msg.getFilecoin()) && proto.ffs.rpc.FilInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ColdInfo}\n */\n\n\nproto.ffs.rpc.ColdInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ColdInfo();\n  return proto.ffs.rpc.ColdInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ColdInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ColdInfo}\n */\n\n\nproto.ffs.rpc.ColdInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setEnabled(value);\n        break;\n\n      case 2:\n        var value = new proto.ffs.rpc.FilInfo();\n        reader.readMessage(value, proto.ffs.rpc.FilInfo.deserializeBinaryFromReader);\n        msg.setFilecoin(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.ColdInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ColdInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ColdInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.ColdInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getEnabled();\n\n  if (f) {\n    writer.writeBool(1, f);\n  }\n\n  f = message.getFilecoin();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.ffs.rpc.FilInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * optional bool enabled = 1;\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.ColdInfo.prototype.getEnabled = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 1, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.ColdInfo} returns this\n */\n\n\nproto.ffs.rpc.ColdInfo.prototype.setEnabled = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n/**\n * optional FilInfo filecoin = 2;\n * @return {?proto.ffs.rpc.FilInfo}\n */\n\n\nproto.ffs.rpc.ColdInfo.prototype.getFilecoin = function () {\n  return (\n    /** @type{?proto.ffs.rpc.FilInfo} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.FilInfo, 2)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.FilInfo|undefined} value\n * @return {!proto.ffs.rpc.ColdInfo} returns this\n*/\n\n\nproto.ffs.rpc.ColdInfo.prototype.setFilecoin = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.ColdInfo} returns this\n */\n\n\nproto.ffs.rpc.ColdInfo.prototype.clearFilecoin = function () {\n  return this.setFilecoin(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.ColdInfo.prototype.hasFilecoin = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.CidInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.CidInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.CidInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.CidInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      jobId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      cid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      created: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      hot: (f = msg.getHot()) && proto.ffs.rpc.HotInfo.toObject(includeInstance, f),\n      cold: (f = msg.getCold()) && proto.ffs.rpc.ColdInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.CidInfo}\n */\n\n\nproto.ffs.rpc.CidInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.CidInfo();\n  return proto.ffs.rpc.CidInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.CidInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.CidInfo}\n */\n\n\nproto.ffs.rpc.CidInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setJobId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCid(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setCreated(value);\n        break;\n\n      case 4:\n        var value = new proto.ffs.rpc.HotInfo();\n        reader.readMessage(value, proto.ffs.rpc.HotInfo.deserializeBinaryFromReader);\n        msg.setHot(value);\n        break;\n\n      case 5:\n        var value = new proto.ffs.rpc.ColdInfo();\n        reader.readMessage(value, proto.ffs.rpc.ColdInfo.deserializeBinaryFromReader);\n        msg.setCold(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.CidInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.CidInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.CidInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.CidInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getJobId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getCid();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getCreated();\n\n  if (f !== 0) {\n    writer.writeInt64(3, f);\n  }\n\n  f = message.getHot();\n\n  if (f != null) {\n    writer.writeMessage(4, f, proto.ffs.rpc.HotInfo.serializeBinaryToWriter);\n  }\n\n  f = message.getCold();\n\n  if (f != null) {\n    writer.writeMessage(5, f, proto.ffs.rpc.ColdInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * optional string job_id = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.CidInfo.prototype.getJobId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.CidInfo} returns this\n */\n\n\nproto.ffs.rpc.CidInfo.prototype.setJobId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string cid = 2;\n * @return {string}\n */\n\n\nproto.ffs.rpc.CidInfo.prototype.getCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.CidInfo} returns this\n */\n\n\nproto.ffs.rpc.CidInfo.prototype.setCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional int64 created = 3;\n * @return {number}\n */\n\n\nproto.ffs.rpc.CidInfo.prototype.getCreated = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.CidInfo} returns this\n */\n\n\nproto.ffs.rpc.CidInfo.prototype.setCreated = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional HotInfo hot = 4;\n * @return {?proto.ffs.rpc.HotInfo}\n */\n\n\nproto.ffs.rpc.CidInfo.prototype.getHot = function () {\n  return (\n    /** @type{?proto.ffs.rpc.HotInfo} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.HotInfo, 4)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.HotInfo|undefined} value\n * @return {!proto.ffs.rpc.CidInfo} returns this\n*/\n\n\nproto.ffs.rpc.CidInfo.prototype.setHot = function (value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.CidInfo} returns this\n */\n\n\nproto.ffs.rpc.CidInfo.prototype.clearHot = function () {\n  return this.setHot(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.CidInfo.prototype.hasHot = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional ColdInfo cold = 5;\n * @return {?proto.ffs.rpc.ColdInfo}\n */\n\n\nproto.ffs.rpc.CidInfo.prototype.getCold = function () {\n  return (\n    /** @type{?proto.ffs.rpc.ColdInfo} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.ColdInfo, 5)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.ColdInfo|undefined} value\n * @return {!proto.ffs.rpc.CidInfo} returns this\n*/\n\n\nproto.ffs.rpc.CidInfo.prototype.setCold = function (value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.CidInfo} returns this\n */\n\n\nproto.ffs.rpc.CidInfo.prototype.clearCold = function () {\n  return this.setCold(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.CidInfo.prototype.hasCold = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.BalanceInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.BalanceInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.BalanceInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.BalanceInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addr: (f = msg.getAddr()) && proto.ffs.rpc.AddrInfo.toObject(includeInstance, f),\n      balance: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.BalanceInfo}\n */\n\n\nproto.ffs.rpc.BalanceInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.BalanceInfo();\n  return proto.ffs.rpc.BalanceInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.BalanceInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.BalanceInfo}\n */\n\n\nproto.ffs.rpc.BalanceInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.ffs.rpc.AddrInfo();\n        reader.readMessage(value, proto.ffs.rpc.AddrInfo.deserializeBinaryFromReader);\n        msg.setAddr(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setBalance(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.BalanceInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.BalanceInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.BalanceInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.BalanceInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddr();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.ffs.rpc.AddrInfo.serializeBinaryToWriter);\n  }\n\n  f = message.getBalance();\n\n  if (f !== 0) {\n    writer.writeInt64(2, f);\n  }\n};\n/**\n * optional AddrInfo addr = 1;\n * @return {?proto.ffs.rpc.AddrInfo}\n */\n\n\nproto.ffs.rpc.BalanceInfo.prototype.getAddr = function () {\n  return (\n    /** @type{?proto.ffs.rpc.AddrInfo} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.AddrInfo, 1)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.AddrInfo|undefined} value\n * @return {!proto.ffs.rpc.BalanceInfo} returns this\n*/\n\n\nproto.ffs.rpc.BalanceInfo.prototype.setAddr = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.BalanceInfo} returns this\n */\n\n\nproto.ffs.rpc.BalanceInfo.prototype.clearAddr = function () {\n  return this.setAddr(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.BalanceInfo.prototype.hasAddr = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional int64 balance = 2;\n * @return {number}\n */\n\n\nproto.ffs.rpc.BalanceInfo.prototype.getBalance = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.BalanceInfo} returns this\n */\n\n\nproto.ffs.rpc.BalanceInfo.prototype.setBalance = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.ffs.rpc.InstanceInfo.repeatedFields_ = [3, 4];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.InstanceInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.InstanceInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.InstanceInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.InstanceInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      defaultStorageConfig: (f = msg.getDefaultStorageConfig()) && proto.ffs.rpc.StorageConfig.toObject(includeInstance, f),\n      balancesList: jspb.Message.toObjectList(msg.getBalancesList(), proto.ffs.rpc.BalanceInfo.toObject, includeInstance),\n      pinsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.InstanceInfo}\n */\n\n\nproto.ffs.rpc.InstanceInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.InstanceInfo();\n  return proto.ffs.rpc.InstanceInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.InstanceInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.InstanceInfo}\n */\n\n\nproto.ffs.rpc.InstanceInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value = new proto.ffs.rpc.StorageConfig();\n        reader.readMessage(value, proto.ffs.rpc.StorageConfig.deserializeBinaryFromReader);\n        msg.setDefaultStorageConfig(value);\n        break;\n\n      case 3:\n        var value = new proto.ffs.rpc.BalanceInfo();\n        reader.readMessage(value, proto.ffs.rpc.BalanceInfo.deserializeBinaryFromReader);\n        msg.addBalances(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addPins(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.InstanceInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.InstanceInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.InstanceInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.InstanceInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getDefaultStorageConfig();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.ffs.rpc.StorageConfig.serializeBinaryToWriter);\n  }\n\n  f = message.getBalancesList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(3, f, proto.ffs.rpc.BalanceInfo.serializeBinaryToWriter);\n  }\n\n  f = message.getPinsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(4, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.InstanceInfo.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.InstanceInfo} returns this\n */\n\n\nproto.ffs.rpc.InstanceInfo.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional StorageConfig default_storage_config = 2;\n * @return {?proto.ffs.rpc.StorageConfig}\n */\n\n\nproto.ffs.rpc.InstanceInfo.prototype.getDefaultStorageConfig = function () {\n  return (\n    /** @type{?proto.ffs.rpc.StorageConfig} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.StorageConfig, 2)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.StorageConfig|undefined} value\n * @return {!proto.ffs.rpc.InstanceInfo} returns this\n*/\n\n\nproto.ffs.rpc.InstanceInfo.prototype.setDefaultStorageConfig = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.InstanceInfo} returns this\n */\n\n\nproto.ffs.rpc.InstanceInfo.prototype.clearDefaultStorageConfig = function () {\n  return this.setDefaultStorageConfig(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.InstanceInfo.prototype.hasDefaultStorageConfig = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * repeated BalanceInfo balances = 3;\n * @return {!Array<!proto.ffs.rpc.BalanceInfo>}\n */\n\n\nproto.ffs.rpc.InstanceInfo.prototype.getBalancesList = function () {\n  return (\n    /** @type{!Array<!proto.ffs.rpc.BalanceInfo>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.ffs.rpc.BalanceInfo, 3)\n  );\n};\n/**\n * @param {!Array<!proto.ffs.rpc.BalanceInfo>} value\n * @return {!proto.ffs.rpc.InstanceInfo} returns this\n*/\n\n\nproto.ffs.rpc.InstanceInfo.prototype.setBalancesList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n/**\n * @param {!proto.ffs.rpc.BalanceInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.BalanceInfo}\n */\n\n\nproto.ffs.rpc.InstanceInfo.prototype.addBalances = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ffs.rpc.BalanceInfo, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.InstanceInfo} returns this\n */\n\n\nproto.ffs.rpc.InstanceInfo.prototype.clearBalancesList = function () {\n  return this.setBalancesList([]);\n};\n/**\n * repeated string pins = 4;\n * @return {!Array<string>}\n */\n\n\nproto.ffs.rpc.InstanceInfo.prototype.getPinsList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 4)\n  );\n};\n/**\n * @param {!Array<string>} value\n * @return {!proto.ffs.rpc.InstanceInfo} returns this\n */\n\n\nproto.ffs.rpc.InstanceInfo.prototype.setPinsList = function (value) {\n  return jspb.Message.setField(this, 4, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.InstanceInfo} returns this\n */\n\n\nproto.ffs.rpc.InstanceInfo.prototype.addPins = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.InstanceInfo} returns this\n */\n\n\nproto.ffs.rpc.InstanceInfo.prototype.clearPinsList = function () {\n  return this.setPinsList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.ffs.rpc.Job.repeatedFields_ = [6];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.Job.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.Job.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.Job} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.Job.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      apiId: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      cid: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      status: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      errCause: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      dealErrorsList: jspb.Message.toObjectList(msg.getDealErrorsList(), proto.ffs.rpc.DealError.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.Job}\n */\n\n\nproto.ffs.rpc.Job.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.Job();\n  return proto.ffs.rpc.Job.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.Job} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.Job}\n */\n\n\nproto.ffs.rpc.Job.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setApiId(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCid(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {!proto.ffs.rpc.JobStatus} */\n        reader.readEnum();\n        msg.setStatus(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setErrCause(value);\n        break;\n\n      case 6:\n        var value = new proto.ffs.rpc.DealError();\n        reader.readMessage(value, proto.ffs.rpc.DealError.deserializeBinaryFromReader);\n        msg.addDealErrors(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.Job.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.Job.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.Job} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.Job.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getApiId();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getCid();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getStatus();\n\n  if (f !== 0.0) {\n    writer.writeEnum(4, f);\n  }\n\n  f = message.getErrCause();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getDealErrorsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(6, f, proto.ffs.rpc.DealError.serializeBinaryToWriter);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.Job.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.Job} returns this\n */\n\n\nproto.ffs.rpc.Job.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string api_id = 2;\n * @return {string}\n */\n\n\nproto.ffs.rpc.Job.prototype.getApiId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.Job} returns this\n */\n\n\nproto.ffs.rpc.Job.prototype.setApiId = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string cid = 3;\n * @return {string}\n */\n\n\nproto.ffs.rpc.Job.prototype.getCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.Job} returns this\n */\n\n\nproto.ffs.rpc.Job.prototype.setCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional JobStatus status = 4;\n * @return {!proto.ffs.rpc.JobStatus}\n */\n\n\nproto.ffs.rpc.Job.prototype.getStatus = function () {\n  return (\n    /** @type {!proto.ffs.rpc.JobStatus} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {!proto.ffs.rpc.JobStatus} value\n * @return {!proto.ffs.rpc.Job} returns this\n */\n\n\nproto.ffs.rpc.Job.prototype.setStatus = function (value) {\n  return jspb.Message.setProto3EnumField(this, 4, value);\n};\n/**\n * optional string err_cause = 5;\n * @return {string}\n */\n\n\nproto.ffs.rpc.Job.prototype.getErrCause = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.Job} returns this\n */\n\n\nproto.ffs.rpc.Job.prototype.setErrCause = function (value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * repeated DealError deal_errors = 6;\n * @return {!Array<!proto.ffs.rpc.DealError>}\n */\n\n\nproto.ffs.rpc.Job.prototype.getDealErrorsList = function () {\n  return (\n    /** @type{!Array<!proto.ffs.rpc.DealError>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.ffs.rpc.DealError, 6)\n  );\n};\n/**\n * @param {!Array<!proto.ffs.rpc.DealError>} value\n * @return {!proto.ffs.rpc.Job} returns this\n*/\n\n\nproto.ffs.rpc.Job.prototype.setDealErrorsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 6, value);\n};\n/**\n * @param {!proto.ffs.rpc.DealError=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.DealError}\n */\n\n\nproto.ffs.rpc.Job.prototype.addDealErrors = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.ffs.rpc.DealError, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.Job} returns this\n */\n\n\nproto.ffs.rpc.Job.prototype.clearDealErrorsList = function () {\n  return this.setDealErrorsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.DealError.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.DealError.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.DealError} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.DealError.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      proposalCid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      miner: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      message: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.DealError}\n */\n\n\nproto.ffs.rpc.DealError.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.DealError();\n  return proto.ffs.rpc.DealError.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.DealError} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.DealError}\n */\n\n\nproto.ffs.rpc.DealError.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setProposalCid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMiner(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMessage(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.DealError.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.DealError.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.DealError} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.DealError.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getProposalCid();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getMiner();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getMessage();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * optional string proposal_cid = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.DealError.prototype.getProposalCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.DealError} returns this\n */\n\n\nproto.ffs.rpc.DealError.prototype.setProposalCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string miner = 2;\n * @return {string}\n */\n\n\nproto.ffs.rpc.DealError.prototype.getMiner = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.DealError} returns this\n */\n\n\nproto.ffs.rpc.DealError.prototype.setMiner = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string message = 3;\n * @return {string}\n */\n\n\nproto.ffs.rpc.DealError.prototype.getMessage = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.DealError} returns this\n */\n\n\nproto.ffs.rpc.DealError.prototype.setMessage = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.LogEntry.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.LogEntry.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.LogEntry} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.LogEntry.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      cid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      jid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      time: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      msg: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.LogEntry}\n */\n\n\nproto.ffs.rpc.LogEntry.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.LogEntry();\n  return proto.ffs.rpc.LogEntry.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.LogEntry} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.LogEntry}\n */\n\n\nproto.ffs.rpc.LogEntry.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setJid(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setTime(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMsg(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.LogEntry.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.LogEntry.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.LogEntry} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.LogEntry.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCid();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getJid();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getTime();\n\n  if (f !== 0) {\n    writer.writeInt64(3, f);\n  }\n\n  f = message.getMsg();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n};\n/**\n * optional string cid = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.LogEntry.prototype.getCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.LogEntry} returns this\n */\n\n\nproto.ffs.rpc.LogEntry.prototype.setCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string jid = 2;\n * @return {string}\n */\n\n\nproto.ffs.rpc.LogEntry.prototype.getJid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.LogEntry} returns this\n */\n\n\nproto.ffs.rpc.LogEntry.prototype.setJid = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional int64 time = 3;\n * @return {number}\n */\n\n\nproto.ffs.rpc.LogEntry.prototype.getTime = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.LogEntry} returns this\n */\n\n\nproto.ffs.rpc.LogEntry.prototype.setTime = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional string msg = 4;\n * @return {string}\n */\n\n\nproto.ffs.rpc.LogEntry.prototype.getMsg = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.LogEntry} returns this\n */\n\n\nproto.ffs.rpc.LogEntry.prototype.setMsg = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.PaychInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.PaychInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.PaychInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.PaychInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      ctlAddr: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      addr: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      direction: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.PaychInfo}\n */\n\n\nproto.ffs.rpc.PaychInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.PaychInfo();\n  return proto.ffs.rpc.PaychInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.PaychInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.PaychInfo}\n */\n\n\nproto.ffs.rpc.PaychInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCtlAddr(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAddr(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!proto.ffs.rpc.Direction} */\n        reader.readEnum();\n        msg.setDirection(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.PaychInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.PaychInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.PaychInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.PaychInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCtlAddr();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getAddr();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getDirection();\n\n  if (f !== 0.0) {\n    writer.writeEnum(3, f);\n  }\n};\n/**\n * optional string ctl_addr = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.PaychInfo.prototype.getCtlAddr = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.PaychInfo} returns this\n */\n\n\nproto.ffs.rpc.PaychInfo.prototype.setCtlAddr = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string addr = 2;\n * @return {string}\n */\n\n\nproto.ffs.rpc.PaychInfo.prototype.getAddr = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.PaychInfo} returns this\n */\n\n\nproto.ffs.rpc.PaychInfo.prototype.setAddr = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional Direction direction = 3;\n * @return {!proto.ffs.rpc.Direction}\n */\n\n\nproto.ffs.rpc.PaychInfo.prototype.getDirection = function () {\n  return (\n    /** @type {!proto.ffs.rpc.Direction} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {!proto.ffs.rpc.Direction} value\n * @return {!proto.ffs.rpc.PaychInfo} returns this\n */\n\n\nproto.ffs.rpc.PaychInfo.prototype.setDirection = function (value) {\n  return jspb.Message.setProto3EnumField(this, 3, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.repeatedFields_ = [1, 2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.ListDealRecordsConfig.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.ListDealRecordsConfig.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.ListDealRecordsConfig} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.ListDealRecordsConfig.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      fromAddrsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n      dataCidsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,\n      includePending: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n      includeFinal: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),\n      ascending: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ListDealRecordsConfig}\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ListDealRecordsConfig();\n  return proto.ffs.rpc.ListDealRecordsConfig.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ListDealRecordsConfig} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ListDealRecordsConfig}\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addFromAddrs(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addDataCids(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setIncludePending(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setIncludeFinal(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setAscending(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ListDealRecordsConfig.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ListDealRecordsConfig} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getFromAddrsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(1, f);\n  }\n\n  f = message.getDataCidsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(2, f);\n  }\n\n  f = message.getIncludePending();\n\n  if (f) {\n    writer.writeBool(3, f);\n  }\n\n  f = message.getIncludeFinal();\n\n  if (f) {\n    writer.writeBool(4, f);\n  }\n\n  f = message.getAscending();\n\n  if (f) {\n    writer.writeBool(5, f);\n  }\n};\n/**\n * repeated string from_addrs = 1;\n * @return {!Array<string>}\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.prototype.getFromAddrsList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 1)\n  );\n};\n/**\n * @param {!Array<string>} value\n * @return {!proto.ffs.rpc.ListDealRecordsConfig} returns this\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.prototype.setFromAddrsList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.ListDealRecordsConfig} returns this\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.prototype.addFromAddrs = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.ListDealRecordsConfig} returns this\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.prototype.clearFromAddrsList = function () {\n  return this.setFromAddrsList([]);\n};\n/**\n * repeated string data_cids = 2;\n * @return {!Array<string>}\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.prototype.getDataCidsList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 2)\n  );\n};\n/**\n * @param {!Array<string>} value\n * @return {!proto.ffs.rpc.ListDealRecordsConfig} returns this\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.prototype.setDataCidsList = function (value) {\n  return jspb.Message.setField(this, 2, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.ListDealRecordsConfig} returns this\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.prototype.addDataCids = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.ListDealRecordsConfig} returns this\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.prototype.clearDataCidsList = function () {\n  return this.setDataCidsList([]);\n};\n/**\n * optional bool include_pending = 3;\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.prototype.getIncludePending = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 3, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.ListDealRecordsConfig} returns this\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.prototype.setIncludePending = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n/**\n * optional bool include_final = 4;\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.prototype.getIncludeFinal = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 4, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.ListDealRecordsConfig} returns this\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.prototype.setIncludeFinal = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\n/**\n * optional bool ascending = 5;\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.prototype.getAscending = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 5, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.ListDealRecordsConfig} returns this\n */\n\n\nproto.ffs.rpc.ListDealRecordsConfig.prototype.setAscending = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.StorageDealInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.StorageDealInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.StorageDealInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.StorageDealInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      proposalCid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      stateId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      stateName: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      miner: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      pieceCid: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      size: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      pricePerEpoch: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      startEpoch: jspb.Message.getFieldWithDefault(msg, 8, 0),\n      duration: jspb.Message.getFieldWithDefault(msg, 9, 0),\n      dealId: jspb.Message.getFieldWithDefault(msg, 10, 0),\n      activationEpoch: jspb.Message.getFieldWithDefault(msg, 11, 0),\n      msg: jspb.Message.getFieldWithDefault(msg, 12, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.StorageDealInfo}\n */\n\n\nproto.ffs.rpc.StorageDealInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.StorageDealInfo();\n  return proto.ffs.rpc.StorageDealInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.StorageDealInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.StorageDealInfo}\n */\n\n\nproto.ffs.rpc.StorageDealInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setProposalCid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setStateId(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setStateName(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMiner(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPieceCid(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setSize(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setPricePerEpoch(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setStartEpoch(value);\n        break;\n\n      case 9:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setDuration(value);\n        break;\n\n      case 10:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setDealId(value);\n        break;\n\n      case 11:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setActivationEpoch(value);\n        break;\n\n      case 12:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMsg(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.StorageDealInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.StorageDealInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.StorageDealInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getProposalCid();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getStateId();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getStateName();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getMiner();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getPieceCid();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getSize();\n\n  if (f !== 0) {\n    writer.writeUint64(6, f);\n  }\n\n  f = message.getPricePerEpoch();\n\n  if (f !== 0) {\n    writer.writeUint64(7, f);\n  }\n\n  f = message.getStartEpoch();\n\n  if (f !== 0) {\n    writer.writeUint64(8, f);\n  }\n\n  f = message.getDuration();\n\n  if (f !== 0) {\n    writer.writeUint64(9, f);\n  }\n\n  f = message.getDealId();\n\n  if (f !== 0) {\n    writer.writeUint64(10, f);\n  }\n\n  f = message.getActivationEpoch();\n\n  if (f !== 0) {\n    writer.writeInt64(11, f);\n  }\n\n  f = message.getMsg();\n\n  if (f.length > 0) {\n    writer.writeString(12, f);\n  }\n};\n/**\n * optional string proposal_cid = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.getProposalCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.setProposalCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional uint64 state_id = 2;\n * @return {number}\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.getStateId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.setStateId = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional string state_name = 3;\n * @return {string}\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.getStateName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.setStateName = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string miner = 4;\n * @return {string}\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.getMiner = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.setMiner = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional string piece_cid = 5;\n * @return {string}\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.getPieceCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.setPieceCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * optional uint64 size = 6;\n * @return {number}\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.getSize = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 6, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.setSize = function (value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n/**\n * optional uint64 price_per_epoch = 7;\n * @return {number}\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.getPricePerEpoch = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 7, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.setPricePerEpoch = function (value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n/**\n * optional uint64 start_epoch = 8;\n * @return {number}\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.getStartEpoch = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 8, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.setStartEpoch = function (value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n/**\n * optional uint64 duration = 9;\n * @return {number}\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.getDuration = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 9, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.setDuration = function (value) {\n  return jspb.Message.setProto3IntField(this, 9, value);\n};\n/**\n * optional uint64 deal_id = 10;\n * @return {number}\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.getDealId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 10, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.setDealId = function (value) {\n  return jspb.Message.setProto3IntField(this, 10, value);\n};\n/**\n * optional int64 activation_epoch = 11;\n * @return {number}\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.getActivationEpoch = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 11, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.setActivationEpoch = function (value) {\n  return jspb.Message.setProto3IntField(this, 11, value);\n};\n/**\n * optional string msg = 12;\n * @return {string}\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.getMsg = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 12, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\n\n\nproto.ffs.rpc.StorageDealInfo.prototype.setMsg = function (value) {\n  return jspb.Message.setProto3StringField(this, 12, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.StorageDealRecord.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.StorageDealRecord.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.StorageDealRecord} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.StorageDealRecord.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      rootCid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      addr: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      time: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      pending: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),\n      dealInfo: (f = msg.getDealInfo()) && proto.ffs.rpc.StorageDealInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.StorageDealRecord}\n */\n\n\nproto.ffs.rpc.StorageDealRecord.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.StorageDealRecord();\n  return proto.ffs.rpc.StorageDealRecord.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.StorageDealRecord} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.StorageDealRecord}\n */\n\n\nproto.ffs.rpc.StorageDealRecord.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setRootCid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAddr(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setTime(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setPending(value);\n        break;\n\n      case 5:\n        var value = new proto.ffs.rpc.StorageDealInfo();\n        reader.readMessage(value, proto.ffs.rpc.StorageDealInfo.deserializeBinaryFromReader);\n        msg.setDealInfo(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.StorageDealRecord.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.StorageDealRecord.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.StorageDealRecord} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.StorageDealRecord.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getRootCid();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getAddr();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getTime();\n\n  if (f !== 0) {\n    writer.writeInt64(3, f);\n  }\n\n  f = message.getPending();\n\n  if (f) {\n    writer.writeBool(4, f);\n  }\n\n  f = message.getDealInfo();\n\n  if (f != null) {\n    writer.writeMessage(5, f, proto.ffs.rpc.StorageDealInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * optional string root_cid = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.StorageDealRecord.prototype.getRootCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.StorageDealRecord} returns this\n */\n\n\nproto.ffs.rpc.StorageDealRecord.prototype.setRootCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string addr = 2;\n * @return {string}\n */\n\n\nproto.ffs.rpc.StorageDealRecord.prototype.getAddr = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.StorageDealRecord} returns this\n */\n\n\nproto.ffs.rpc.StorageDealRecord.prototype.setAddr = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional int64 time = 3;\n * @return {number}\n */\n\n\nproto.ffs.rpc.StorageDealRecord.prototype.getTime = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.StorageDealRecord} returns this\n */\n\n\nproto.ffs.rpc.StorageDealRecord.prototype.setTime = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional bool pending = 4;\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.StorageDealRecord.prototype.getPending = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 4, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.StorageDealRecord} returns this\n */\n\n\nproto.ffs.rpc.StorageDealRecord.prototype.setPending = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\n/**\n * optional StorageDealInfo deal_info = 5;\n * @return {?proto.ffs.rpc.StorageDealInfo}\n */\n\n\nproto.ffs.rpc.StorageDealRecord.prototype.getDealInfo = function () {\n  return (\n    /** @type{?proto.ffs.rpc.StorageDealInfo} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.StorageDealInfo, 5)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.StorageDealInfo|undefined} value\n * @return {!proto.ffs.rpc.StorageDealRecord} returns this\n*/\n\n\nproto.ffs.rpc.StorageDealRecord.prototype.setDealInfo = function (value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.StorageDealRecord} returns this\n */\n\n\nproto.ffs.rpc.StorageDealRecord.prototype.clearDealInfo = function () {\n  return this.setDealInfo(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.StorageDealRecord.prototype.hasDealInfo = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.RetrievalDealInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.RetrievalDealInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.RetrievalDealInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.RetrievalDealInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      rootCid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      size: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      minPrice: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      paymentInterval: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      paymentIntervalIncrease: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      miner: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n      minerPeerId: jspb.Message.getFieldWithDefault(msg, 7, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.RetrievalDealInfo}\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.RetrievalDealInfo();\n  return proto.ffs.rpc.RetrievalDealInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.RetrievalDealInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.RetrievalDealInfo}\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setRootCid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setSize(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setMinPrice(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setPaymentInterval(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setPaymentIntervalIncrease(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMiner(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMinerPeerId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.RetrievalDealInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.RetrievalDealInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getRootCid();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getSize();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getMinPrice();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n\n  f = message.getPaymentInterval();\n\n  if (f !== 0) {\n    writer.writeUint64(4, f);\n  }\n\n  f = message.getPaymentIntervalIncrease();\n\n  if (f !== 0) {\n    writer.writeUint64(5, f);\n  }\n\n  f = message.getMiner();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n\n  f = message.getMinerPeerId();\n\n  if (f.length > 0) {\n    writer.writeString(7, f);\n  }\n};\n/**\n * optional string root_cid = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo.prototype.getRootCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.RetrievalDealInfo} returns this\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo.prototype.setRootCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional uint64 size = 2;\n * @return {number}\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo.prototype.getSize = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.RetrievalDealInfo} returns this\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo.prototype.setSize = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint64 min_price = 3;\n * @return {number}\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo.prototype.getMinPrice = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.RetrievalDealInfo} returns this\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo.prototype.setMinPrice = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional uint64 payment_interval = 4;\n * @return {number}\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo.prototype.getPaymentInterval = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.RetrievalDealInfo} returns this\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo.prototype.setPaymentInterval = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional uint64 payment_interval_increase = 5;\n * @return {number}\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo.prototype.getPaymentIntervalIncrease = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.RetrievalDealInfo} returns this\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo.prototype.setPaymentIntervalIncrease = function (value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * optional string miner = 6;\n * @return {string}\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo.prototype.getMiner = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.RetrievalDealInfo} returns this\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo.prototype.setMiner = function (value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n/**\n * optional string miner_peer_id = 7;\n * @return {string}\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo.prototype.getMinerPeerId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 7, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.RetrievalDealInfo} returns this\n */\n\n\nproto.ffs.rpc.RetrievalDealInfo.prototype.setMinerPeerId = function (value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.RetrievalDealRecord.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.RetrievalDealRecord.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.RetrievalDealRecord} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.RetrievalDealRecord.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addr: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      time: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      dealInfo: (f = msg.getDealInfo()) && proto.ffs.rpc.RetrievalDealInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.RetrievalDealRecord}\n */\n\n\nproto.ffs.rpc.RetrievalDealRecord.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.RetrievalDealRecord();\n  return proto.ffs.rpc.RetrievalDealRecord.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.RetrievalDealRecord} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.RetrievalDealRecord}\n */\n\n\nproto.ffs.rpc.RetrievalDealRecord.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAddr(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setTime(value);\n        break;\n\n      case 3:\n        var value = new proto.ffs.rpc.RetrievalDealInfo();\n        reader.readMessage(value, proto.ffs.rpc.RetrievalDealInfo.deserializeBinaryFromReader);\n        msg.setDealInfo(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.RetrievalDealRecord.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.RetrievalDealRecord.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.RetrievalDealRecord} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.RetrievalDealRecord.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddr();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getTime();\n\n  if (f !== 0) {\n    writer.writeInt64(2, f);\n  }\n\n  f = message.getDealInfo();\n\n  if (f != null) {\n    writer.writeMessage(3, f, proto.ffs.rpc.RetrievalDealInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * optional string addr = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.RetrievalDealRecord.prototype.getAddr = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.RetrievalDealRecord} returns this\n */\n\n\nproto.ffs.rpc.RetrievalDealRecord.prototype.setAddr = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional int64 time = 2;\n * @return {number}\n */\n\n\nproto.ffs.rpc.RetrievalDealRecord.prototype.getTime = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.RetrievalDealRecord} returns this\n */\n\n\nproto.ffs.rpc.RetrievalDealRecord.prototype.setTime = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional RetrievalDealInfo deal_info = 3;\n * @return {?proto.ffs.rpc.RetrievalDealInfo}\n */\n\n\nproto.ffs.rpc.RetrievalDealRecord.prototype.getDealInfo = function () {\n  return (\n    /** @type{?proto.ffs.rpc.RetrievalDealInfo} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.RetrievalDealInfo, 3)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.RetrievalDealInfo|undefined} value\n * @return {!proto.ffs.rpc.RetrievalDealRecord} returns this\n*/\n\n\nproto.ffs.rpc.RetrievalDealRecord.prototype.setDealInfo = function (value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.RetrievalDealRecord} returns this\n */\n\n\nproto.ffs.rpc.RetrievalDealRecord.prototype.clearDealInfo = function () {\n  return this.setDealInfo(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.RetrievalDealRecord.prototype.hasDealInfo = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.CreateRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.CreateRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.CreateRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.CreateRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.CreateRequest}\n */\n\n\nproto.ffs.rpc.CreateRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.CreateRequest();\n  return proto.ffs.rpc.CreateRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.CreateRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.CreateRequest}\n */\n\n\nproto.ffs.rpc.CreateRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.CreateRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.CreateRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.CreateRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.CreateRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.CreateResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.CreateResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.CreateResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.CreateResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      token: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.CreateResponse}\n */\n\n\nproto.ffs.rpc.CreateResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.CreateResponse();\n  return proto.ffs.rpc.CreateResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.CreateResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.CreateResponse}\n */\n\n\nproto.ffs.rpc.CreateResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setToken(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.CreateResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.CreateResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.CreateResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.CreateResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getToken();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.CreateResponse.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.CreateResponse} returns this\n */\n\n\nproto.ffs.rpc.CreateResponse.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string token = 2;\n * @return {string}\n */\n\n\nproto.ffs.rpc.CreateResponse.prototype.getToken = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.CreateResponse} returns this\n */\n\n\nproto.ffs.rpc.CreateResponse.prototype.setToken = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.ListAPIRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.ListAPIRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.ListAPIRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.ListAPIRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ListAPIRequest}\n */\n\n\nproto.ffs.rpc.ListAPIRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ListAPIRequest();\n  return proto.ffs.rpc.ListAPIRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ListAPIRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ListAPIRequest}\n */\n\n\nproto.ffs.rpc.ListAPIRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.ListAPIRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ListAPIRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ListAPIRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.ListAPIRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.ffs.rpc.ListAPIResponse.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.ListAPIResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.ListAPIResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.ListAPIResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.ListAPIResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      instancesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ListAPIResponse}\n */\n\n\nproto.ffs.rpc.ListAPIResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ListAPIResponse();\n  return proto.ffs.rpc.ListAPIResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ListAPIResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ListAPIResponse}\n */\n\n\nproto.ffs.rpc.ListAPIResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addInstances(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.ListAPIResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ListAPIResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ListAPIResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.ListAPIResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getInstancesList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(1, f);\n  }\n};\n/**\n * repeated string instances = 1;\n * @return {!Array<string>}\n */\n\n\nproto.ffs.rpc.ListAPIResponse.prototype.getInstancesList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 1)\n  );\n};\n/**\n * @param {!Array<string>} value\n * @return {!proto.ffs.rpc.ListAPIResponse} returns this\n */\n\n\nproto.ffs.rpc.ListAPIResponse.prototype.setInstancesList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.ListAPIResponse} returns this\n */\n\n\nproto.ffs.rpc.ListAPIResponse.prototype.addInstances = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.ListAPIResponse} returns this\n */\n\n\nproto.ffs.rpc.ListAPIResponse.prototype.clearInstancesList = function () {\n  return this.setInstancesList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.IDRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.IDRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.IDRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.IDRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.IDRequest}\n */\n\n\nproto.ffs.rpc.IDRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.IDRequest();\n  return proto.ffs.rpc.IDRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.IDRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.IDRequest}\n */\n\n\nproto.ffs.rpc.IDRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.IDRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.IDRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.IDRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.IDRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.IDResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.IDResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.IDResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.IDResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.IDResponse}\n */\n\n\nproto.ffs.rpc.IDResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.IDResponse();\n  return proto.ffs.rpc.IDResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.IDResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.IDResponse}\n */\n\n\nproto.ffs.rpc.IDResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.IDResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.IDResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.IDResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.IDResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.IDResponse.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.IDResponse} returns this\n */\n\n\nproto.ffs.rpc.IDResponse.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.AddrsRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.AddrsRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.AddrsRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.AddrsRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.AddrsRequest}\n */\n\n\nproto.ffs.rpc.AddrsRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.AddrsRequest();\n  return proto.ffs.rpc.AddrsRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.AddrsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.AddrsRequest}\n */\n\n\nproto.ffs.rpc.AddrsRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.AddrsRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.AddrsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.AddrsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.AddrsRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.ffs.rpc.AddrsResponse.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.AddrsResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.AddrsResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.AddrsResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.AddrsResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addrsList: jspb.Message.toObjectList(msg.getAddrsList(), proto.ffs.rpc.AddrInfo.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.AddrsResponse}\n */\n\n\nproto.ffs.rpc.AddrsResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.AddrsResponse();\n  return proto.ffs.rpc.AddrsResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.AddrsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.AddrsResponse}\n */\n\n\nproto.ffs.rpc.AddrsResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.ffs.rpc.AddrInfo();\n        reader.readMessage(value, proto.ffs.rpc.AddrInfo.deserializeBinaryFromReader);\n        msg.addAddrs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.AddrsResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.AddrsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.AddrsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.AddrsResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddrsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.ffs.rpc.AddrInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated AddrInfo addrs = 1;\n * @return {!Array<!proto.ffs.rpc.AddrInfo>}\n */\n\n\nproto.ffs.rpc.AddrsResponse.prototype.getAddrsList = function () {\n  return (\n    /** @type{!Array<!proto.ffs.rpc.AddrInfo>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.ffs.rpc.AddrInfo, 1)\n  );\n};\n/**\n * @param {!Array<!proto.ffs.rpc.AddrInfo>} value\n * @return {!proto.ffs.rpc.AddrsResponse} returns this\n*/\n\n\nproto.ffs.rpc.AddrsResponse.prototype.setAddrsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.ffs.rpc.AddrInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.AddrInfo}\n */\n\n\nproto.ffs.rpc.AddrsResponse.prototype.addAddrs = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ffs.rpc.AddrInfo, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.AddrsResponse} returns this\n */\n\n\nproto.ffs.rpc.AddrsResponse.prototype.clearAddrsList = function () {\n  return this.setAddrsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.DefaultStorageConfigRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.DefaultStorageConfigRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.DefaultStorageConfigRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.DefaultStorageConfigRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.DefaultStorageConfigRequest}\n */\n\n\nproto.ffs.rpc.DefaultStorageConfigRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.DefaultStorageConfigRequest();\n  return proto.ffs.rpc.DefaultStorageConfigRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.DefaultStorageConfigRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.DefaultStorageConfigRequest}\n */\n\n\nproto.ffs.rpc.DefaultStorageConfigRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.DefaultStorageConfigRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.DefaultStorageConfigRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.DefaultStorageConfigRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.DefaultStorageConfigRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.DefaultStorageConfigResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.DefaultStorageConfigResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.DefaultStorageConfigResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.DefaultStorageConfigResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      defaultStorageConfig: (f = msg.getDefaultStorageConfig()) && proto.ffs.rpc.StorageConfig.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.DefaultStorageConfigResponse}\n */\n\n\nproto.ffs.rpc.DefaultStorageConfigResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.DefaultStorageConfigResponse();\n  return proto.ffs.rpc.DefaultStorageConfigResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.DefaultStorageConfigResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.DefaultStorageConfigResponse}\n */\n\n\nproto.ffs.rpc.DefaultStorageConfigResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.ffs.rpc.StorageConfig();\n        reader.readMessage(value, proto.ffs.rpc.StorageConfig.deserializeBinaryFromReader);\n        msg.setDefaultStorageConfig(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.DefaultStorageConfigResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.DefaultStorageConfigResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.DefaultStorageConfigResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.DefaultStorageConfigResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDefaultStorageConfig();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.ffs.rpc.StorageConfig.serializeBinaryToWriter);\n  }\n};\n/**\n * optional StorageConfig default_storage_config = 1;\n * @return {?proto.ffs.rpc.StorageConfig}\n */\n\n\nproto.ffs.rpc.DefaultStorageConfigResponse.prototype.getDefaultStorageConfig = function () {\n  return (\n    /** @type{?proto.ffs.rpc.StorageConfig} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.StorageConfig, 1)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.StorageConfig|undefined} value\n * @return {!proto.ffs.rpc.DefaultStorageConfigResponse} returns this\n*/\n\n\nproto.ffs.rpc.DefaultStorageConfigResponse.prototype.setDefaultStorageConfig = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.DefaultStorageConfigResponse} returns this\n */\n\n\nproto.ffs.rpc.DefaultStorageConfigResponse.prototype.clearDefaultStorageConfig = function () {\n  return this.setDefaultStorageConfig(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.DefaultStorageConfigResponse.prototype.hasDefaultStorageConfig = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.NewAddrRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.NewAddrRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.NewAddrRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.NewAddrRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      addressType: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      makeDefault: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.NewAddrRequest}\n */\n\n\nproto.ffs.rpc.NewAddrRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.NewAddrRequest();\n  return proto.ffs.rpc.NewAddrRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.NewAddrRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.NewAddrRequest}\n */\n\n\nproto.ffs.rpc.NewAddrRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAddressType(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setMakeDefault(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.NewAddrRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.NewAddrRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.NewAddrRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.NewAddrRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getAddressType();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getMakeDefault();\n\n  if (f) {\n    writer.writeBool(3, f);\n  }\n};\n/**\n * optional string name = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.NewAddrRequest.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.NewAddrRequest} returns this\n */\n\n\nproto.ffs.rpc.NewAddrRequest.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string address_type = 2;\n * @return {string}\n */\n\n\nproto.ffs.rpc.NewAddrRequest.prototype.getAddressType = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.NewAddrRequest} returns this\n */\n\n\nproto.ffs.rpc.NewAddrRequest.prototype.setAddressType = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional bool make_default = 3;\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.NewAddrRequest.prototype.getMakeDefault = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 3, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.NewAddrRequest} returns this\n */\n\n\nproto.ffs.rpc.NewAddrRequest.prototype.setMakeDefault = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.NewAddrResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.NewAddrResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.NewAddrResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.NewAddrResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addr: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.NewAddrResponse}\n */\n\n\nproto.ffs.rpc.NewAddrResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.NewAddrResponse();\n  return proto.ffs.rpc.NewAddrResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.NewAddrResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.NewAddrResponse}\n */\n\n\nproto.ffs.rpc.NewAddrResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAddr(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.NewAddrResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.NewAddrResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.NewAddrResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.NewAddrResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddr();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string addr = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.NewAddrResponse.prototype.getAddr = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.NewAddrResponse} returns this\n */\n\n\nproto.ffs.rpc.NewAddrResponse.prototype.setAddr = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.GetStorageConfigRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.GetStorageConfigRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.GetStorageConfigRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.GetStorageConfigRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      cid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.GetStorageConfigRequest}\n */\n\n\nproto.ffs.rpc.GetStorageConfigRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.GetStorageConfigRequest();\n  return proto.ffs.rpc.GetStorageConfigRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.GetStorageConfigRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.GetStorageConfigRequest}\n */\n\n\nproto.ffs.rpc.GetStorageConfigRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.GetStorageConfigRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.GetStorageConfigRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.GetStorageConfigRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.GetStorageConfigRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCid();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string cid = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.GetStorageConfigRequest.prototype.getCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.GetStorageConfigRequest} returns this\n */\n\n\nproto.ffs.rpc.GetStorageConfigRequest.prototype.setCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.GetStorageConfigResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.GetStorageConfigResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.GetStorageConfigResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.GetStorageConfigResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      config: (f = msg.getConfig()) && proto.ffs.rpc.StorageConfig.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.GetStorageConfigResponse}\n */\n\n\nproto.ffs.rpc.GetStorageConfigResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.GetStorageConfigResponse();\n  return proto.ffs.rpc.GetStorageConfigResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.GetStorageConfigResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.GetStorageConfigResponse}\n */\n\n\nproto.ffs.rpc.GetStorageConfigResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.ffs.rpc.StorageConfig();\n        reader.readMessage(value, proto.ffs.rpc.StorageConfig.deserializeBinaryFromReader);\n        msg.setConfig(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.GetStorageConfigResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.GetStorageConfigResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.GetStorageConfigResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.GetStorageConfigResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getConfig();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.ffs.rpc.StorageConfig.serializeBinaryToWriter);\n  }\n};\n/**\n * optional StorageConfig config = 1;\n * @return {?proto.ffs.rpc.StorageConfig}\n */\n\n\nproto.ffs.rpc.GetStorageConfigResponse.prototype.getConfig = function () {\n  return (\n    /** @type{?proto.ffs.rpc.StorageConfig} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.StorageConfig, 1)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.StorageConfig|undefined} value\n * @return {!proto.ffs.rpc.GetStorageConfigResponse} returns this\n*/\n\n\nproto.ffs.rpc.GetStorageConfigResponse.prototype.setConfig = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.GetStorageConfigResponse} returns this\n */\n\n\nproto.ffs.rpc.GetStorageConfigResponse.prototype.clearConfig = function () {\n  return this.setConfig(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.GetStorageConfigResponse.prototype.hasConfig = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.SetDefaultStorageConfigRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.SetDefaultStorageConfigRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.SetDefaultStorageConfigRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.SetDefaultStorageConfigRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      config: (f = msg.getConfig()) && proto.ffs.rpc.StorageConfig.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.SetDefaultStorageConfigRequest}\n */\n\n\nproto.ffs.rpc.SetDefaultStorageConfigRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.SetDefaultStorageConfigRequest();\n  return proto.ffs.rpc.SetDefaultStorageConfigRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.SetDefaultStorageConfigRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.SetDefaultStorageConfigRequest}\n */\n\n\nproto.ffs.rpc.SetDefaultStorageConfigRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.ffs.rpc.StorageConfig();\n        reader.readMessage(value, proto.ffs.rpc.StorageConfig.deserializeBinaryFromReader);\n        msg.setConfig(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.SetDefaultStorageConfigRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.SetDefaultStorageConfigRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.SetDefaultStorageConfigRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.SetDefaultStorageConfigRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getConfig();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.ffs.rpc.StorageConfig.serializeBinaryToWriter);\n  }\n};\n/**\n * optional StorageConfig config = 1;\n * @return {?proto.ffs.rpc.StorageConfig}\n */\n\n\nproto.ffs.rpc.SetDefaultStorageConfigRequest.prototype.getConfig = function () {\n  return (\n    /** @type{?proto.ffs.rpc.StorageConfig} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.StorageConfig, 1)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.StorageConfig|undefined} value\n * @return {!proto.ffs.rpc.SetDefaultStorageConfigRequest} returns this\n*/\n\n\nproto.ffs.rpc.SetDefaultStorageConfigRequest.prototype.setConfig = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.SetDefaultStorageConfigRequest} returns this\n */\n\n\nproto.ffs.rpc.SetDefaultStorageConfigRequest.prototype.clearConfig = function () {\n  return this.setConfig(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.SetDefaultStorageConfigRequest.prototype.hasConfig = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.SetDefaultStorageConfigResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.SetDefaultStorageConfigResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.SetDefaultStorageConfigResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.SetDefaultStorageConfigResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.SetDefaultStorageConfigResponse}\n */\n\n\nproto.ffs.rpc.SetDefaultStorageConfigResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.SetDefaultStorageConfigResponse();\n  return proto.ffs.rpc.SetDefaultStorageConfigResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.SetDefaultStorageConfigResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.SetDefaultStorageConfigResponse}\n */\n\n\nproto.ffs.rpc.SetDefaultStorageConfigResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.SetDefaultStorageConfigResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.SetDefaultStorageConfigResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.SetDefaultStorageConfigResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.SetDefaultStorageConfigResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.ShowRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.ShowRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.ShowRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.ShowRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      cid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ShowRequest}\n */\n\n\nproto.ffs.rpc.ShowRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ShowRequest();\n  return proto.ffs.rpc.ShowRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ShowRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ShowRequest}\n */\n\n\nproto.ffs.rpc.ShowRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.ShowRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ShowRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ShowRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.ShowRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCid();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string cid = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.ShowRequest.prototype.getCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.ShowRequest} returns this\n */\n\n\nproto.ffs.rpc.ShowRequest.prototype.setCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.ShowResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.ShowResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.ShowResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.ShowResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      cidInfo: (f = msg.getCidInfo()) && proto.ffs.rpc.CidInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ShowResponse}\n */\n\n\nproto.ffs.rpc.ShowResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ShowResponse();\n  return proto.ffs.rpc.ShowResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ShowResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ShowResponse}\n */\n\n\nproto.ffs.rpc.ShowResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.ffs.rpc.CidInfo();\n        reader.readMessage(value, proto.ffs.rpc.CidInfo.deserializeBinaryFromReader);\n        msg.setCidInfo(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.ShowResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ShowResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ShowResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.ShowResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCidInfo();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.ffs.rpc.CidInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * optional CidInfo cid_info = 1;\n * @return {?proto.ffs.rpc.CidInfo}\n */\n\n\nproto.ffs.rpc.ShowResponse.prototype.getCidInfo = function () {\n  return (\n    /** @type{?proto.ffs.rpc.CidInfo} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.CidInfo, 1)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.CidInfo|undefined} value\n * @return {!proto.ffs.rpc.ShowResponse} returns this\n*/\n\n\nproto.ffs.rpc.ShowResponse.prototype.setCidInfo = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.ShowResponse} returns this\n */\n\n\nproto.ffs.rpc.ShowResponse.prototype.clearCidInfo = function () {\n  return this.setCidInfo(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.ShowResponse.prototype.hasCidInfo = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.InfoRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.InfoRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.InfoRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.InfoRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.InfoRequest}\n */\n\n\nproto.ffs.rpc.InfoRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.InfoRequest();\n  return proto.ffs.rpc.InfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.InfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.InfoRequest}\n */\n\n\nproto.ffs.rpc.InfoRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.InfoRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.InfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.InfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.InfoRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.InfoResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.InfoResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.InfoResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.InfoResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      info: (f = msg.getInfo()) && proto.ffs.rpc.InstanceInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.InfoResponse}\n */\n\n\nproto.ffs.rpc.InfoResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.InfoResponse();\n  return proto.ffs.rpc.InfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.InfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.InfoResponse}\n */\n\n\nproto.ffs.rpc.InfoResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.ffs.rpc.InstanceInfo();\n        reader.readMessage(value, proto.ffs.rpc.InstanceInfo.deserializeBinaryFromReader);\n        msg.setInfo(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.InfoResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.InfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.InfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.InfoResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getInfo();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.ffs.rpc.InstanceInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * optional InstanceInfo info = 1;\n * @return {?proto.ffs.rpc.InstanceInfo}\n */\n\n\nproto.ffs.rpc.InfoResponse.prototype.getInfo = function () {\n  return (\n    /** @type{?proto.ffs.rpc.InstanceInfo} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.InstanceInfo, 1)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.InstanceInfo|undefined} value\n * @return {!proto.ffs.rpc.InfoResponse} returns this\n*/\n\n\nproto.ffs.rpc.InfoResponse.prototype.setInfo = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.InfoResponse} returns this\n */\n\n\nproto.ffs.rpc.InfoResponse.prototype.clearInfo = function () {\n  return this.setInfo(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.InfoResponse.prototype.hasInfo = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.CancelJobRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.CancelJobRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.CancelJobRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.CancelJobRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      jid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.CancelJobRequest}\n */\n\n\nproto.ffs.rpc.CancelJobRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.CancelJobRequest();\n  return proto.ffs.rpc.CancelJobRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.CancelJobRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.CancelJobRequest}\n */\n\n\nproto.ffs.rpc.CancelJobRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setJid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.CancelJobRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.CancelJobRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.CancelJobRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.CancelJobRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getJid();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string jid = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.CancelJobRequest.prototype.getJid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.CancelJobRequest} returns this\n */\n\n\nproto.ffs.rpc.CancelJobRequest.prototype.setJid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.CancelJobResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.CancelJobResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.CancelJobResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.CancelJobResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.CancelJobResponse}\n */\n\n\nproto.ffs.rpc.CancelJobResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.CancelJobResponse();\n  return proto.ffs.rpc.CancelJobResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.CancelJobResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.CancelJobResponse}\n */\n\n\nproto.ffs.rpc.CancelJobResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.CancelJobResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.CancelJobResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.CancelJobResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.CancelJobResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.ffs.rpc.WatchJobsRequest.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.WatchJobsRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.WatchJobsRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.WatchJobsRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.WatchJobsRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      jidsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.WatchJobsRequest}\n */\n\n\nproto.ffs.rpc.WatchJobsRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.WatchJobsRequest();\n  return proto.ffs.rpc.WatchJobsRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.WatchJobsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.WatchJobsRequest}\n */\n\n\nproto.ffs.rpc.WatchJobsRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addJids(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.WatchJobsRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.WatchJobsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.WatchJobsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.WatchJobsRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getJidsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(1, f);\n  }\n};\n/**\n * repeated string jids = 1;\n * @return {!Array<string>}\n */\n\n\nproto.ffs.rpc.WatchJobsRequest.prototype.getJidsList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 1)\n  );\n};\n/**\n * @param {!Array<string>} value\n * @return {!proto.ffs.rpc.WatchJobsRequest} returns this\n */\n\n\nproto.ffs.rpc.WatchJobsRequest.prototype.setJidsList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.WatchJobsRequest} returns this\n */\n\n\nproto.ffs.rpc.WatchJobsRequest.prototype.addJids = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.WatchJobsRequest} returns this\n */\n\n\nproto.ffs.rpc.WatchJobsRequest.prototype.clearJidsList = function () {\n  return this.setJidsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.WatchJobsResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.WatchJobsResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.WatchJobsResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.WatchJobsResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      job: (f = msg.getJob()) && proto.ffs.rpc.Job.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.WatchJobsResponse}\n */\n\n\nproto.ffs.rpc.WatchJobsResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.WatchJobsResponse();\n  return proto.ffs.rpc.WatchJobsResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.WatchJobsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.WatchJobsResponse}\n */\n\n\nproto.ffs.rpc.WatchJobsResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.ffs.rpc.Job();\n        reader.readMessage(value, proto.ffs.rpc.Job.deserializeBinaryFromReader);\n        msg.setJob(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.WatchJobsResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.WatchJobsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.WatchJobsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.WatchJobsResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getJob();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.ffs.rpc.Job.serializeBinaryToWriter);\n  }\n};\n/**\n * optional Job job = 1;\n * @return {?proto.ffs.rpc.Job}\n */\n\n\nproto.ffs.rpc.WatchJobsResponse.prototype.getJob = function () {\n  return (\n    /** @type{?proto.ffs.rpc.Job} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.Job, 1)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.Job|undefined} value\n * @return {!proto.ffs.rpc.WatchJobsResponse} returns this\n*/\n\n\nproto.ffs.rpc.WatchJobsResponse.prototype.setJob = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.WatchJobsResponse} returns this\n */\n\n\nproto.ffs.rpc.WatchJobsResponse.prototype.clearJob = function () {\n  return this.setJob(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.WatchJobsResponse.prototype.hasJob = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.WatchLogsRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.WatchLogsRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.WatchLogsRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.WatchLogsRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      cid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      jid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      history: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.WatchLogsRequest}\n */\n\n\nproto.ffs.rpc.WatchLogsRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.WatchLogsRequest();\n  return proto.ffs.rpc.WatchLogsRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.WatchLogsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.WatchLogsRequest}\n */\n\n\nproto.ffs.rpc.WatchLogsRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setJid(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setHistory(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.WatchLogsRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.WatchLogsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.WatchLogsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.WatchLogsRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCid();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getJid();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getHistory();\n\n  if (f) {\n    writer.writeBool(3, f);\n  }\n};\n/**\n * optional string cid = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.WatchLogsRequest.prototype.getCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.WatchLogsRequest} returns this\n */\n\n\nproto.ffs.rpc.WatchLogsRequest.prototype.setCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string jid = 2;\n * @return {string}\n */\n\n\nproto.ffs.rpc.WatchLogsRequest.prototype.getJid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.WatchLogsRequest} returns this\n */\n\n\nproto.ffs.rpc.WatchLogsRequest.prototype.setJid = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional bool history = 3;\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.WatchLogsRequest.prototype.getHistory = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 3, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.WatchLogsRequest} returns this\n */\n\n\nproto.ffs.rpc.WatchLogsRequest.prototype.setHistory = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.WatchLogsResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.WatchLogsResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.WatchLogsResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.WatchLogsResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      logEntry: (f = msg.getLogEntry()) && proto.ffs.rpc.LogEntry.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.WatchLogsResponse}\n */\n\n\nproto.ffs.rpc.WatchLogsResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.WatchLogsResponse();\n  return proto.ffs.rpc.WatchLogsResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.WatchLogsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.WatchLogsResponse}\n */\n\n\nproto.ffs.rpc.WatchLogsResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.ffs.rpc.LogEntry();\n        reader.readMessage(value, proto.ffs.rpc.LogEntry.deserializeBinaryFromReader);\n        msg.setLogEntry(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.WatchLogsResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.WatchLogsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.WatchLogsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.WatchLogsResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getLogEntry();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.ffs.rpc.LogEntry.serializeBinaryToWriter);\n  }\n};\n/**\n * optional LogEntry log_entry = 1;\n * @return {?proto.ffs.rpc.LogEntry}\n */\n\n\nproto.ffs.rpc.WatchLogsResponse.prototype.getLogEntry = function () {\n  return (\n    /** @type{?proto.ffs.rpc.LogEntry} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.LogEntry, 1)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.LogEntry|undefined} value\n * @return {!proto.ffs.rpc.WatchLogsResponse} returns this\n*/\n\n\nproto.ffs.rpc.WatchLogsResponse.prototype.setLogEntry = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.WatchLogsResponse} returns this\n */\n\n\nproto.ffs.rpc.WatchLogsResponse.prototype.clearLogEntry = function () {\n  return this.setLogEntry(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.WatchLogsResponse.prototype.hasLogEntry = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.ReplaceRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.ReplaceRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.ReplaceRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.ReplaceRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      cid1: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      cid2: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ReplaceRequest}\n */\n\n\nproto.ffs.rpc.ReplaceRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ReplaceRequest();\n  return proto.ffs.rpc.ReplaceRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ReplaceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ReplaceRequest}\n */\n\n\nproto.ffs.rpc.ReplaceRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCid1(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCid2(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.ReplaceRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ReplaceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ReplaceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.ReplaceRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCid1();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getCid2();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional string cid1 = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.ReplaceRequest.prototype.getCid1 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.ReplaceRequest} returns this\n */\n\n\nproto.ffs.rpc.ReplaceRequest.prototype.setCid1 = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string cid2 = 2;\n * @return {string}\n */\n\n\nproto.ffs.rpc.ReplaceRequest.prototype.getCid2 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.ReplaceRequest} returns this\n */\n\n\nproto.ffs.rpc.ReplaceRequest.prototype.setCid2 = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.ReplaceResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.ReplaceResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.ReplaceResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.ReplaceResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      jobId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ReplaceResponse}\n */\n\n\nproto.ffs.rpc.ReplaceResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ReplaceResponse();\n  return proto.ffs.rpc.ReplaceResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ReplaceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ReplaceResponse}\n */\n\n\nproto.ffs.rpc.ReplaceResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setJobId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.ReplaceResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ReplaceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ReplaceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.ReplaceResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getJobId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string job_id = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.ReplaceResponse.prototype.getJobId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.ReplaceResponse} returns this\n */\n\n\nproto.ffs.rpc.ReplaceResponse.prototype.setJobId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.PushStorageConfigRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.PushStorageConfigRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.PushStorageConfigRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.PushStorageConfigRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      cid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      config: (f = msg.getConfig()) && proto.ffs.rpc.StorageConfig.toObject(includeInstance, f),\n      hasConfig: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n      overrideConfig: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),\n      hasOverrideConfig: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.PushStorageConfigRequest}\n */\n\n\nproto.ffs.rpc.PushStorageConfigRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.PushStorageConfigRequest();\n  return proto.ffs.rpc.PushStorageConfigRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.PushStorageConfigRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.PushStorageConfigRequest}\n */\n\n\nproto.ffs.rpc.PushStorageConfigRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCid(value);\n        break;\n\n      case 2:\n        var value = new proto.ffs.rpc.StorageConfig();\n        reader.readMessage(value, proto.ffs.rpc.StorageConfig.deserializeBinaryFromReader);\n        msg.setConfig(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setHasConfig(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setOverrideConfig(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setHasOverrideConfig(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.PushStorageConfigRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.PushStorageConfigRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.PushStorageConfigRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.PushStorageConfigRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCid();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getConfig();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.ffs.rpc.StorageConfig.serializeBinaryToWriter);\n  }\n\n  f = message.getHasConfig();\n\n  if (f) {\n    writer.writeBool(3, f);\n  }\n\n  f = message.getOverrideConfig();\n\n  if (f) {\n    writer.writeBool(4, f);\n  }\n\n  f = message.getHasOverrideConfig();\n\n  if (f) {\n    writer.writeBool(5, f);\n  }\n};\n/**\n * optional string cid = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.PushStorageConfigRequest.prototype.getCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.PushStorageConfigRequest} returns this\n */\n\n\nproto.ffs.rpc.PushStorageConfigRequest.prototype.setCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional StorageConfig config = 2;\n * @return {?proto.ffs.rpc.StorageConfig}\n */\n\n\nproto.ffs.rpc.PushStorageConfigRequest.prototype.getConfig = function () {\n  return (\n    /** @type{?proto.ffs.rpc.StorageConfig} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.StorageConfig, 2)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.StorageConfig|undefined} value\n * @return {!proto.ffs.rpc.PushStorageConfigRequest} returns this\n*/\n\n\nproto.ffs.rpc.PushStorageConfigRequest.prototype.setConfig = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.PushStorageConfigRequest} returns this\n */\n\n\nproto.ffs.rpc.PushStorageConfigRequest.prototype.clearConfig = function () {\n  return this.setConfig(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.PushStorageConfigRequest.prototype.hasConfig = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bool has_config = 3;\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.PushStorageConfigRequest.prototype.getHasConfig = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 3, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.PushStorageConfigRequest} returns this\n */\n\n\nproto.ffs.rpc.PushStorageConfigRequest.prototype.setHasConfig = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n/**\n * optional bool override_config = 4;\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.PushStorageConfigRequest.prototype.getOverrideConfig = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 4, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.PushStorageConfigRequest} returns this\n */\n\n\nproto.ffs.rpc.PushStorageConfigRequest.prototype.setOverrideConfig = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\n/**\n * optional bool has_override_config = 5;\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.PushStorageConfigRequest.prototype.getHasOverrideConfig = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 5, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.PushStorageConfigRequest} returns this\n */\n\n\nproto.ffs.rpc.PushStorageConfigRequest.prototype.setHasOverrideConfig = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.PushStorageConfigResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.PushStorageConfigResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.PushStorageConfigResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.PushStorageConfigResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      jobId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.PushStorageConfigResponse}\n */\n\n\nproto.ffs.rpc.PushStorageConfigResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.PushStorageConfigResponse();\n  return proto.ffs.rpc.PushStorageConfigResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.PushStorageConfigResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.PushStorageConfigResponse}\n */\n\n\nproto.ffs.rpc.PushStorageConfigResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setJobId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.PushStorageConfigResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.PushStorageConfigResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.PushStorageConfigResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.PushStorageConfigResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getJobId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string job_id = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.PushStorageConfigResponse.prototype.getJobId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.PushStorageConfigResponse} returns this\n */\n\n\nproto.ffs.rpc.PushStorageConfigResponse.prototype.setJobId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.RemoveRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.RemoveRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.RemoveRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.RemoveRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      cid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.RemoveRequest}\n */\n\n\nproto.ffs.rpc.RemoveRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.RemoveRequest();\n  return proto.ffs.rpc.RemoveRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.RemoveRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.RemoveRequest}\n */\n\n\nproto.ffs.rpc.RemoveRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.RemoveRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.RemoveRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.RemoveRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.RemoveRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCid();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string cid = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.RemoveRequest.prototype.getCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.RemoveRequest} returns this\n */\n\n\nproto.ffs.rpc.RemoveRequest.prototype.setCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.RemoveResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.RemoveResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.RemoveResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.RemoveResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.RemoveResponse}\n */\n\n\nproto.ffs.rpc.RemoveResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.RemoveResponse();\n  return proto.ffs.rpc.RemoveResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.RemoveResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.RemoveResponse}\n */\n\n\nproto.ffs.rpc.RemoveResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.RemoveResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.RemoveResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.RemoveResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.RemoveResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.GetRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.GetRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.GetRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.GetRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      cid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.GetRequest}\n */\n\n\nproto.ffs.rpc.GetRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.GetRequest();\n  return proto.ffs.rpc.GetRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.GetRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.GetRequest}\n */\n\n\nproto.ffs.rpc.GetRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.GetRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.GetRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.GetRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.GetRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCid();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string cid = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.GetRequest.prototype.getCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.GetRequest} returns this\n */\n\n\nproto.ffs.rpc.GetRequest.prototype.setCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.GetResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.GetResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.GetResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.GetResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      chunk: msg.getChunk_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.GetResponse}\n */\n\n\nproto.ffs.rpc.GetResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.GetResponse();\n  return proto.ffs.rpc.GetResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.GetResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.GetResponse}\n */\n\n\nproto.ffs.rpc.GetResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setChunk(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.GetResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.GetResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.GetResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.GetResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getChunk_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n};\n/**\n * optional bytes chunk = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.ffs.rpc.GetResponse.prototype.getChunk = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes chunk = 1;\n * This is a type-conversion wrapper around `getChunk()`\n * @return {string}\n */\n\n\nproto.ffs.rpc.GetResponse.prototype.getChunk_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getChunk())\n  );\n};\n/**\n * optional bytes chunk = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChunk()`\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.GetResponse.prototype.getChunk_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getChunk())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.ffs.rpc.GetResponse} returns this\n */\n\n\nproto.ffs.rpc.GetResponse.prototype.setChunk = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.SendFilRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.SendFilRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.SendFilRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.SendFilRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      from: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      to: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      amount: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.SendFilRequest}\n */\n\n\nproto.ffs.rpc.SendFilRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.SendFilRequest();\n  return proto.ffs.rpc.SendFilRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.SendFilRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.SendFilRequest}\n */\n\n\nproto.ffs.rpc.SendFilRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setFrom(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTo(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setAmount(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.SendFilRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.SendFilRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.SendFilRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.SendFilRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getFrom();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getTo();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getAmount();\n\n  if (f !== 0) {\n    writer.writeInt64(3, f);\n  }\n};\n/**\n * optional string from = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.SendFilRequest.prototype.getFrom = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.SendFilRequest} returns this\n */\n\n\nproto.ffs.rpc.SendFilRequest.prototype.setFrom = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string to = 2;\n * @return {string}\n */\n\n\nproto.ffs.rpc.SendFilRequest.prototype.getTo = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.SendFilRequest} returns this\n */\n\n\nproto.ffs.rpc.SendFilRequest.prototype.setTo = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional int64 amount = 3;\n * @return {number}\n */\n\n\nproto.ffs.rpc.SendFilRequest.prototype.getAmount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.SendFilRequest} returns this\n */\n\n\nproto.ffs.rpc.SendFilRequest.prototype.setAmount = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.SendFilResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.SendFilResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.SendFilResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.SendFilResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.SendFilResponse}\n */\n\n\nproto.ffs.rpc.SendFilResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.SendFilResponse();\n  return proto.ffs.rpc.SendFilResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.SendFilResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.SendFilResponse}\n */\n\n\nproto.ffs.rpc.SendFilResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.SendFilResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.SendFilResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.SendFilResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.SendFilResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.StageRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.StageRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.StageRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.StageRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      chunk: msg.getChunk_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.StageRequest}\n */\n\n\nproto.ffs.rpc.StageRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.StageRequest();\n  return proto.ffs.rpc.StageRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.StageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.StageRequest}\n */\n\n\nproto.ffs.rpc.StageRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setChunk(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.StageRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.StageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.StageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.StageRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getChunk_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n};\n/**\n * optional bytes chunk = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.ffs.rpc.StageRequest.prototype.getChunk = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes chunk = 1;\n * This is a type-conversion wrapper around `getChunk()`\n * @return {string}\n */\n\n\nproto.ffs.rpc.StageRequest.prototype.getChunk_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getChunk())\n  );\n};\n/**\n * optional bytes chunk = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChunk()`\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.StageRequest.prototype.getChunk_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getChunk())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.ffs.rpc.StageRequest} returns this\n */\n\n\nproto.ffs.rpc.StageRequest.prototype.setChunk = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.StageResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.StageResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.StageResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.StageResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      cid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.StageResponse}\n */\n\n\nproto.ffs.rpc.StageResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.StageResponse();\n  return proto.ffs.rpc.StageResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.StageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.StageResponse}\n */\n\n\nproto.ffs.rpc.StageResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.StageResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.StageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.StageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.StageResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCid();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string cid = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.StageResponse.prototype.getCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.StageResponse} returns this\n */\n\n\nproto.ffs.rpc.StageResponse.prototype.setCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.ListPayChannelsRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.ListPayChannelsRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.ListPayChannelsRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.ListPayChannelsRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ListPayChannelsRequest}\n */\n\n\nproto.ffs.rpc.ListPayChannelsRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ListPayChannelsRequest();\n  return proto.ffs.rpc.ListPayChannelsRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ListPayChannelsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ListPayChannelsRequest}\n */\n\n\nproto.ffs.rpc.ListPayChannelsRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.ListPayChannelsRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ListPayChannelsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ListPayChannelsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.ListPayChannelsRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.ffs.rpc.ListPayChannelsResponse.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.ListPayChannelsResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.ListPayChannelsResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.ListPayChannelsResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.ListPayChannelsResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      payChannelsList: jspb.Message.toObjectList(msg.getPayChannelsList(), proto.ffs.rpc.PaychInfo.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ListPayChannelsResponse}\n */\n\n\nproto.ffs.rpc.ListPayChannelsResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ListPayChannelsResponse();\n  return proto.ffs.rpc.ListPayChannelsResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ListPayChannelsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ListPayChannelsResponse}\n */\n\n\nproto.ffs.rpc.ListPayChannelsResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.ffs.rpc.PaychInfo();\n        reader.readMessage(value, proto.ffs.rpc.PaychInfo.deserializeBinaryFromReader);\n        msg.addPayChannels(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.ListPayChannelsResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ListPayChannelsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ListPayChannelsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.ListPayChannelsResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPayChannelsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.ffs.rpc.PaychInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated PaychInfo pay_channels = 1;\n * @return {!Array<!proto.ffs.rpc.PaychInfo>}\n */\n\n\nproto.ffs.rpc.ListPayChannelsResponse.prototype.getPayChannelsList = function () {\n  return (\n    /** @type{!Array<!proto.ffs.rpc.PaychInfo>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.ffs.rpc.PaychInfo, 1)\n  );\n};\n/**\n * @param {!Array<!proto.ffs.rpc.PaychInfo>} value\n * @return {!proto.ffs.rpc.ListPayChannelsResponse} returns this\n*/\n\n\nproto.ffs.rpc.ListPayChannelsResponse.prototype.setPayChannelsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.ffs.rpc.PaychInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.PaychInfo}\n */\n\n\nproto.ffs.rpc.ListPayChannelsResponse.prototype.addPayChannels = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ffs.rpc.PaychInfo, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.ListPayChannelsResponse} returns this\n */\n\n\nproto.ffs.rpc.ListPayChannelsResponse.prototype.clearPayChannelsList = function () {\n  return this.setPayChannelsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.CreatePayChannelRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.CreatePayChannelRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.CreatePayChannelRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.CreatePayChannelRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      from: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      to: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      amount: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.CreatePayChannelRequest}\n */\n\n\nproto.ffs.rpc.CreatePayChannelRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.CreatePayChannelRequest();\n  return proto.ffs.rpc.CreatePayChannelRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.CreatePayChannelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.CreatePayChannelRequest}\n */\n\n\nproto.ffs.rpc.CreatePayChannelRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setFrom(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTo(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setAmount(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.CreatePayChannelRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.CreatePayChannelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.CreatePayChannelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.CreatePayChannelRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getFrom();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getTo();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getAmount();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n};\n/**\n * optional string from = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.CreatePayChannelRequest.prototype.getFrom = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.CreatePayChannelRequest} returns this\n */\n\n\nproto.ffs.rpc.CreatePayChannelRequest.prototype.setFrom = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string to = 2;\n * @return {string}\n */\n\n\nproto.ffs.rpc.CreatePayChannelRequest.prototype.getTo = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.CreatePayChannelRequest} returns this\n */\n\n\nproto.ffs.rpc.CreatePayChannelRequest.prototype.setTo = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional uint64 amount = 3;\n * @return {number}\n */\n\n\nproto.ffs.rpc.CreatePayChannelRequest.prototype.getAmount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.CreatePayChannelRequest} returns this\n */\n\n\nproto.ffs.rpc.CreatePayChannelRequest.prototype.setAmount = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.CreatePayChannelResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.CreatePayChannelResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.CreatePayChannelResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.CreatePayChannelResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      payChannel: (f = msg.getPayChannel()) && proto.ffs.rpc.PaychInfo.toObject(includeInstance, f),\n      channelMessageCid: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.CreatePayChannelResponse}\n */\n\n\nproto.ffs.rpc.CreatePayChannelResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.CreatePayChannelResponse();\n  return proto.ffs.rpc.CreatePayChannelResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.CreatePayChannelResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.CreatePayChannelResponse}\n */\n\n\nproto.ffs.rpc.CreatePayChannelResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.ffs.rpc.PaychInfo();\n        reader.readMessage(value, proto.ffs.rpc.PaychInfo.deserializeBinaryFromReader);\n        msg.setPayChannel(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setChannelMessageCid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.CreatePayChannelResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.CreatePayChannelResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.CreatePayChannelResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.CreatePayChannelResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPayChannel();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.ffs.rpc.PaychInfo.serializeBinaryToWriter);\n  }\n\n  f = message.getChannelMessageCid();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional PaychInfo pay_channel = 1;\n * @return {?proto.ffs.rpc.PaychInfo}\n */\n\n\nproto.ffs.rpc.CreatePayChannelResponse.prototype.getPayChannel = function () {\n  return (\n    /** @type{?proto.ffs.rpc.PaychInfo} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.PaychInfo, 1)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.PaychInfo|undefined} value\n * @return {!proto.ffs.rpc.CreatePayChannelResponse} returns this\n*/\n\n\nproto.ffs.rpc.CreatePayChannelResponse.prototype.setPayChannel = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.CreatePayChannelResponse} returns this\n */\n\n\nproto.ffs.rpc.CreatePayChannelResponse.prototype.clearPayChannel = function () {\n  return this.setPayChannel(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.CreatePayChannelResponse.prototype.hasPayChannel = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string channel_message_cid = 2;\n * @return {string}\n */\n\n\nproto.ffs.rpc.CreatePayChannelResponse.prototype.getChannelMessageCid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.CreatePayChannelResponse} returns this\n */\n\n\nproto.ffs.rpc.CreatePayChannelResponse.prototype.setChannelMessageCid = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.RedeemPayChannelRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.RedeemPayChannelRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.RedeemPayChannelRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.RedeemPayChannelRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      payChannelAddr: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.RedeemPayChannelRequest}\n */\n\n\nproto.ffs.rpc.RedeemPayChannelRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.RedeemPayChannelRequest();\n  return proto.ffs.rpc.RedeemPayChannelRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.RedeemPayChannelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.RedeemPayChannelRequest}\n */\n\n\nproto.ffs.rpc.RedeemPayChannelRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPayChannelAddr(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.RedeemPayChannelRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.RedeemPayChannelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.RedeemPayChannelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.RedeemPayChannelRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPayChannelAddr();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string pay_channel_addr = 1;\n * @return {string}\n */\n\n\nproto.ffs.rpc.RedeemPayChannelRequest.prototype.getPayChannelAddr = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.RedeemPayChannelRequest} returns this\n */\n\n\nproto.ffs.rpc.RedeemPayChannelRequest.prototype.setPayChannelAddr = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.RedeemPayChannelResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.RedeemPayChannelResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.RedeemPayChannelResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.RedeemPayChannelResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.RedeemPayChannelResponse}\n */\n\n\nproto.ffs.rpc.RedeemPayChannelResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.RedeemPayChannelResponse();\n  return proto.ffs.rpc.RedeemPayChannelResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.RedeemPayChannelResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.RedeemPayChannelResponse}\n */\n\n\nproto.ffs.rpc.RedeemPayChannelResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.RedeemPayChannelResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.RedeemPayChannelResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.RedeemPayChannelResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.RedeemPayChannelResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.ListStorageDealRecordsRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.ListStorageDealRecordsRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.ListStorageDealRecordsRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.ListStorageDealRecordsRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      config: (f = msg.getConfig()) && proto.ffs.rpc.ListDealRecordsConfig.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ListStorageDealRecordsRequest}\n */\n\n\nproto.ffs.rpc.ListStorageDealRecordsRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ListStorageDealRecordsRequest();\n  return proto.ffs.rpc.ListStorageDealRecordsRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ListStorageDealRecordsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ListStorageDealRecordsRequest}\n */\n\n\nproto.ffs.rpc.ListStorageDealRecordsRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.ffs.rpc.ListDealRecordsConfig();\n        reader.readMessage(value, proto.ffs.rpc.ListDealRecordsConfig.deserializeBinaryFromReader);\n        msg.setConfig(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.ListStorageDealRecordsRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ListStorageDealRecordsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ListStorageDealRecordsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.ListStorageDealRecordsRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getConfig();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.ffs.rpc.ListDealRecordsConfig.serializeBinaryToWriter);\n  }\n};\n/**\n * optional ListDealRecordsConfig config = 1;\n * @return {?proto.ffs.rpc.ListDealRecordsConfig}\n */\n\n\nproto.ffs.rpc.ListStorageDealRecordsRequest.prototype.getConfig = function () {\n  return (\n    /** @type{?proto.ffs.rpc.ListDealRecordsConfig} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.ListDealRecordsConfig, 1)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.ListDealRecordsConfig|undefined} value\n * @return {!proto.ffs.rpc.ListStorageDealRecordsRequest} returns this\n*/\n\n\nproto.ffs.rpc.ListStorageDealRecordsRequest.prototype.setConfig = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.ListStorageDealRecordsRequest} returns this\n */\n\n\nproto.ffs.rpc.ListStorageDealRecordsRequest.prototype.clearConfig = function () {\n  return this.setConfig(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.ListStorageDealRecordsRequest.prototype.hasConfig = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.ffs.rpc.ListStorageDealRecordsResponse.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.ListStorageDealRecordsResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.ListStorageDealRecordsResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.ListStorageDealRecordsResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.ListStorageDealRecordsResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      recordsList: jspb.Message.toObjectList(msg.getRecordsList(), proto.ffs.rpc.StorageDealRecord.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ListStorageDealRecordsResponse}\n */\n\n\nproto.ffs.rpc.ListStorageDealRecordsResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ListStorageDealRecordsResponse();\n  return proto.ffs.rpc.ListStorageDealRecordsResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ListStorageDealRecordsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ListStorageDealRecordsResponse}\n */\n\n\nproto.ffs.rpc.ListStorageDealRecordsResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.ffs.rpc.StorageDealRecord();\n        reader.readMessage(value, proto.ffs.rpc.StorageDealRecord.deserializeBinaryFromReader);\n        msg.addRecords(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.ListStorageDealRecordsResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ListStorageDealRecordsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ListStorageDealRecordsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.ListStorageDealRecordsResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getRecordsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.ffs.rpc.StorageDealRecord.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated StorageDealRecord records = 1;\n * @return {!Array<!proto.ffs.rpc.StorageDealRecord>}\n */\n\n\nproto.ffs.rpc.ListStorageDealRecordsResponse.prototype.getRecordsList = function () {\n  return (\n    /** @type{!Array<!proto.ffs.rpc.StorageDealRecord>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.ffs.rpc.StorageDealRecord, 1)\n  );\n};\n/**\n * @param {!Array<!proto.ffs.rpc.StorageDealRecord>} value\n * @return {!proto.ffs.rpc.ListStorageDealRecordsResponse} returns this\n*/\n\n\nproto.ffs.rpc.ListStorageDealRecordsResponse.prototype.setRecordsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.ffs.rpc.StorageDealRecord=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.StorageDealRecord}\n */\n\n\nproto.ffs.rpc.ListStorageDealRecordsResponse.prototype.addRecords = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ffs.rpc.StorageDealRecord, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.ListStorageDealRecordsResponse} returns this\n */\n\n\nproto.ffs.rpc.ListStorageDealRecordsResponse.prototype.clearRecordsList = function () {\n  return this.setRecordsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.ListRetrievalDealRecordsRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.ListRetrievalDealRecordsRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.ListRetrievalDealRecordsRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.ListRetrievalDealRecordsRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      config: (f = msg.getConfig()) && proto.ffs.rpc.ListDealRecordsConfig.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ListRetrievalDealRecordsRequest}\n */\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ListRetrievalDealRecordsRequest();\n  return proto.ffs.rpc.ListRetrievalDealRecordsRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ListRetrievalDealRecordsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ListRetrievalDealRecordsRequest}\n */\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.ffs.rpc.ListDealRecordsConfig();\n        reader.readMessage(value, proto.ffs.rpc.ListDealRecordsConfig.deserializeBinaryFromReader);\n        msg.setConfig(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ListRetrievalDealRecordsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ListRetrievalDealRecordsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getConfig();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.ffs.rpc.ListDealRecordsConfig.serializeBinaryToWriter);\n  }\n};\n/**\n * optional ListDealRecordsConfig config = 1;\n * @return {?proto.ffs.rpc.ListDealRecordsConfig}\n */\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsRequest.prototype.getConfig = function () {\n  return (\n    /** @type{?proto.ffs.rpc.ListDealRecordsConfig} */\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.ListDealRecordsConfig, 1)\n  );\n};\n/**\n * @param {?proto.ffs.rpc.ListDealRecordsConfig|undefined} value\n * @return {!proto.ffs.rpc.ListRetrievalDealRecordsRequest} returns this\n*/\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsRequest.prototype.setConfig = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.ListRetrievalDealRecordsRequest} returns this\n */\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsRequest.prototype.clearConfig = function () {\n  return this.setConfig(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsRequest.prototype.hasConfig = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.ListRetrievalDealRecordsResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.ListRetrievalDealRecordsResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.ListRetrievalDealRecordsResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.ListRetrievalDealRecordsResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      recordsList: jspb.Message.toObjectList(msg.getRecordsList(), proto.ffs.rpc.RetrievalDealRecord.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ListRetrievalDealRecordsResponse}\n */\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ListRetrievalDealRecordsResponse();\n  return proto.ffs.rpc.ListRetrievalDealRecordsResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ListRetrievalDealRecordsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ListRetrievalDealRecordsResponse}\n */\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.ffs.rpc.RetrievalDealRecord();\n        reader.readMessage(value, proto.ffs.rpc.RetrievalDealRecord.deserializeBinaryFromReader);\n        msg.addRecords(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ListRetrievalDealRecordsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ListRetrievalDealRecordsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getRecordsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.ffs.rpc.RetrievalDealRecord.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated RetrievalDealRecord records = 1;\n * @return {!Array<!proto.ffs.rpc.RetrievalDealRecord>}\n */\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.prototype.getRecordsList = function () {\n  return (\n    /** @type{!Array<!proto.ffs.rpc.RetrievalDealRecord>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.ffs.rpc.RetrievalDealRecord, 1)\n  );\n};\n/**\n * @param {!Array<!proto.ffs.rpc.RetrievalDealRecord>} value\n * @return {!proto.ffs.rpc.ListRetrievalDealRecordsResponse} returns this\n*/\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.prototype.setRecordsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.ffs.rpc.RetrievalDealRecord=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.RetrievalDealRecord}\n */\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.prototype.addRecords = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ffs.rpc.RetrievalDealRecord, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.ListRetrievalDealRecordsResponse} returns this\n */\n\n\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.prototype.clearRecordsList = function () {\n  return this.setRecordsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.ShowAllRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.ShowAllRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.ShowAllRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.ShowAllRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ShowAllRequest}\n */\n\n\nproto.ffs.rpc.ShowAllRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ShowAllRequest();\n  return proto.ffs.rpc.ShowAllRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ShowAllRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ShowAllRequest}\n */\n\n\nproto.ffs.rpc.ShowAllRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.ShowAllRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ShowAllRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ShowAllRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.ShowAllRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.ffs.rpc.ShowAllResponse.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ffs.rpc.ShowAllResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.ffs.rpc.ShowAllResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ffs.rpc.ShowAllResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ffs.rpc.ShowAllResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      cidInfosList: jspb.Message.toObjectList(msg.getCidInfosList(), proto.ffs.rpc.CidInfo.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ShowAllResponse}\n */\n\n\nproto.ffs.rpc.ShowAllResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ShowAllResponse();\n  return proto.ffs.rpc.ShowAllResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ShowAllResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ShowAllResponse}\n */\n\n\nproto.ffs.rpc.ShowAllResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.ffs.rpc.CidInfo();\n        reader.readMessage(value, proto.ffs.rpc.CidInfo.deserializeBinaryFromReader);\n        msg.addCidInfos(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ffs.rpc.ShowAllResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ShowAllResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ShowAllResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ffs.rpc.ShowAllResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCidInfosList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.ffs.rpc.CidInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated CidInfo cid_infos = 1;\n * @return {!Array<!proto.ffs.rpc.CidInfo>}\n */\n\n\nproto.ffs.rpc.ShowAllResponse.prototype.getCidInfosList = function () {\n  return (\n    /** @type{!Array<!proto.ffs.rpc.CidInfo>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.ffs.rpc.CidInfo, 1)\n  );\n};\n/**\n * @param {!Array<!proto.ffs.rpc.CidInfo>} value\n * @return {!proto.ffs.rpc.ShowAllResponse} returns this\n*/\n\n\nproto.ffs.rpc.ShowAllResponse.prototype.setCidInfosList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.ffs.rpc.CidInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.CidInfo}\n */\n\n\nproto.ffs.rpc.ShowAllResponse.prototype.addCidInfos = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ffs.rpc.CidInfo, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.ShowAllResponse} returns this\n */\n\n\nproto.ffs.rpc.ShowAllResponse.prototype.clearCidInfosList = function () {\n  return this.setCidInfosList([]);\n};\n/**\n * @enum {number}\n */\n\n\nproto.ffs.rpc.JobStatus = {\n  JOB_STATUS_UNSPECIFIED: 0,\n  JOB_STATUS_QUEUED: 1,\n  JOB_STATUS_EXECUTING: 2,\n  JOB_STATUS_FAILED: 3,\n  JOB_STATUS_CANCELED: 4,\n  JOB_STATUS_SUCCESS: 5\n};\n/**\n * @enum {number}\n */\n\nproto.ffs.rpc.Direction = {\n  DIRECTION_UNSPECIFIED: 0,\n  DIRECTION_INBOUND: 1,\n  DIRECTION_OUTBOUND: 2\n};\ngoog.object.extend(exports, proto.ffs.rpc);","map":{"version":3,"sources":["/Users/nassarhayat/apps/textiletable/js-examples/bucket-photo-gallery/node_modules/@textile/grpc-powergate-client/dist/ffs/rpc/rpc_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","ffs","rpc","AddrInfo","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","IpfsConfig","HotConfig","FilRenew","FilConfig","repeatedFields_","ColdConfig","StorageConfig","IpfsHotInfo","HotInfo","FilStorage","FilInfo","ColdInfo","CidInfo","BalanceInfo","InstanceInfo","Job","DealError","LogEntry","PaychInfo","ListDealRecordsConfig","StorageDealInfo","StorageDealRecord","RetrievalDealInfo","RetrievalDealRecord","CreateRequest","CreateResponse","ListAPIRequest","ListAPIResponse","IDRequest","IDResponse","AddrsRequest","AddrsResponse","DefaultStorageConfigRequest","DefaultStorageConfigResponse","NewAddrRequest","NewAddrResponse","GetStorageConfigRequest","GetStorageConfigResponse","SetDefaultStorageConfigRequest","SetDefaultStorageConfigResponse","ShowRequest","ShowResponse","InfoRequest","InfoResponse","CancelJobRequest","CancelJobResponse","WatchJobsRequest","WatchJobsResponse","WatchLogsRequest","WatchLogsResponse","ReplaceRequest","ReplaceResponse","PushStorageConfigRequest","PushStorageConfigResponse","RemoveRequest","RemoveResponse","GetRequest","GetResponse","SendFilRequest","SendFilResponse","StageRequest","StageResponse","ListPayChannelsRequest","ListPayChannelsResponse","CreatePayChannelRequest","CreatePayChannelResponse","RedeemPayChannelRequest","RedeemPayChannelResponse","ListStorageDealRecordsRequest","ListStorageDealRecordsResponse","ListRetrievalDealRecordsRequest","ListRetrievalDealRecordsResponse","ShowAllRequest","ShowAllResponse","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","name","getFieldWithDefault","addr","type","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setName","setAddr","setType","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getName","length","writeString","getAddr","getType","setProto3StringField","addTimeout","readInt64","setAddTimeout","getAddTimeout","writeInt64","setProto3IntField","enabled","getBooleanFieldWithDefault","allowUnfreeze","unfreezeMaxPrice","ipfs","getIpfs","readBool","setEnabled","setAllowUnfreeze","readUint64","setUnfreezeMaxPrice","readMessage","setIpfs","getEnabled","writeBool","getAllowUnfreeze","getUnfreezeMaxPrice","writeUint64","writeMessage","setProto3BooleanField","getWrapperField","setWrapperField","clearIpfs","hasIpfs","getField","threshold","setThreshold","getThreshold","repFactor","dealMinDuration","excludedMinersList","getRepeatedField","trustedMinersList","countryCodesList","renew","getRenew","maxPrice","fastRetrieval","setRepFactor","setDealMinDuration","addExcludedMiners","addTrustedMiners","addCountryCodes","setRenew","setMaxPrice","setFastRetrieval","getRepFactor","getDealMinDuration","getExcludedMinersList","writeRepeatedString","getTrustedMinersList","getCountryCodesList","getMaxPrice","getFastRetrieval","setExcludedMinersList","setField","opt_index","addToRepeatedField","clearExcludedMinersList","setTrustedMinersList","clearTrustedMinersList","setCountryCodesList","clearCountryCodesList","clearRenew","hasRenew","filecoin","getFilecoin","setFilecoin","clearFilecoin","hasFilecoin","hot","getHot","cold","getCold","repairable","setHot","setCold","setRepairable","getRepairable","clearHot","hasHot","clearCold","hasCold","created","setCreated","getCreated","size","setSize","getSize","proposalCid","renewed","duration","activationEpoch","startEpoch","miner","epochPrice","pieceCid","setProposalCid","setRenewed","setDuration","setActivationEpoch","setStartEpoch","setMiner","setEpochPrice","setPieceCid","getProposalCid","getRenewed","getDuration","getActivationEpoch","getStartEpoch","getMiner","getEpochPrice","getPieceCid","dataCid","proposalsList","toObjectList","getProposalsList","setDataCid","addProposals","getDataCid","writeRepeatedMessage","getRepeatedWrapperField","setProposalsList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearProposalsList","jobId","cid","setJobId","setCid","getJobId","getCid","balance","setBalance","getBalance","clearAddr","hasAddr","id","defaultStorageConfig","getDefaultStorageConfig","balancesList","getBalancesList","pinsList","setId","setDefaultStorageConfig","addBalances","addPins","getId","getPinsList","clearDefaultStorageConfig","hasDefaultStorageConfig","setBalancesList","clearBalancesList","setPinsList","clearPinsList","apiId","status","errCause","dealErrorsList","getDealErrorsList","setApiId","readEnum","setStatus","setErrCause","addDealErrors","getApiId","getStatus","writeEnum","getErrCause","setProto3EnumField","setDealErrorsList","clearDealErrorsList","setMessage","getMessage","jid","time","setJid","setTime","setMsg","getJid","getTime","getMsg","ctlAddr","direction","setCtlAddr","setDirection","getCtlAddr","getDirection","fromAddrsList","dataCidsList","includePending","includeFinal","ascending","addFromAddrs","addDataCids","setIncludePending","setIncludeFinal","setAscending","getFromAddrsList","getDataCidsList","getIncludePending","getIncludeFinal","getAscending","setFromAddrsList","clearFromAddrsList","setDataCidsList","clearDataCidsList","stateId","stateName","pricePerEpoch","dealId","setStateId","setStateName","setPricePerEpoch","setDealId","getStateId","getStateName","getPricePerEpoch","getDealId","rootCid","pending","dealInfo","getDealInfo","setRootCid","setPending","setDealInfo","getRootCid","getPending","clearDealInfo","hasDealInfo","minPrice","paymentInterval","paymentIntervalIncrease","minerPeerId","setMinPrice","setPaymentInterval","setPaymentIntervalIncrease","setMinerPeerId","getMinPrice","getPaymentInterval","getPaymentIntervalIncrease","getMinerPeerId","token","setToken","getToken","instancesList","addInstances","getInstancesList","setInstancesList","clearInstancesList","addrsList","getAddrsList","addAddrs","setAddrsList","clearAddrsList","addressType","makeDefault","setAddressType","setMakeDefault","getAddressType","getMakeDefault","config","getConfig","setConfig","clearConfig","hasConfig","cidInfo","getCidInfo","setCidInfo","clearCidInfo","hasCidInfo","info","getInfo","setInfo","clearInfo","hasInfo","jidsList","addJids","getJidsList","setJidsList","clearJidsList","job","getJob","setJob","clearJob","hasJob","history","setHistory","getHistory","logEntry","getLogEntry","setLogEntry","clearLogEntry","hasLogEntry","cid1","cid2","setCid1","setCid2","getCid1","getCid2","overrideConfig","hasOverrideConfig","setHasConfig","setOverrideConfig","setHasOverrideConfig","getHasConfig","getOverrideConfig","getHasOverrideConfig","chunk","getChunk_asB64","readBytes","setChunk","getChunk_asU8","writeBytes","getChunk","bytesAsB64","bytesAsU8","setProto3BytesField","from","to","amount","setFrom","setTo","setAmount","getFrom","getTo","getAmount","payChannelsList","getPayChannelsList","addPayChannels","setPayChannelsList","clearPayChannelsList","payChannel","getPayChannel","channelMessageCid","setPayChannel","setChannelMessageCid","getChannelMessageCid","clearPayChannel","hasPayChannel","payChannelAddr","setPayChannelAddr","getPayChannelAddr","recordsList","getRecordsList","addRecords","setRecordsList","clearRecordsList","cidInfosList","getCidInfosList","addCidInfos","setCidInfosList","clearCidInfosList","JobStatus","JOB_STATUS_UNSPECIFIED","JOB_STATUS_QUEUED","JOB_STATUS_EXECUTING","JOB_STATUS_FAILED","JOB_STATUS_CANCELED","JOB_STATUS_SUCCESS","Direction","DIRECTION_UNSPECIFIED","DIRECTION_INBOUND","DIRECTION_OUTBOUND","object","extend","exports"],"mappings":"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","sourcesContent":["// source: ffs/rpc/rpc.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.ffs.rpc.AddrInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.AddrsRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.AddrsResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.BalanceInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.CancelJobRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.CancelJobResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.CidInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ColdConfig', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ColdInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.CreatePayChannelRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.CreatePayChannelResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.CreateRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.CreateResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.DealError', null, global);\ngoog.exportSymbol('proto.ffs.rpc.DefaultStorageConfigRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.DefaultStorageConfigResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.Direction', null, global);\ngoog.exportSymbol('proto.ffs.rpc.FilConfig', null, global);\ngoog.exportSymbol('proto.ffs.rpc.FilInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.FilRenew', null, global);\ngoog.exportSymbol('proto.ffs.rpc.FilStorage', null, global);\ngoog.exportSymbol('proto.ffs.rpc.GetRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.GetResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.GetStorageConfigRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.GetStorageConfigResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.HotConfig', null, global);\ngoog.exportSymbol('proto.ffs.rpc.HotInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.IDRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.IDResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.InfoRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.InfoResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.InstanceInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.IpfsConfig', null, global);\ngoog.exportSymbol('proto.ffs.rpc.IpfsHotInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.Job', null, global);\ngoog.exportSymbol('proto.ffs.rpc.JobStatus', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ListAPIRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ListAPIResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ListDealRecordsConfig', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ListPayChannelsRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ListPayChannelsResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ListRetrievalDealRecordsRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ListRetrievalDealRecordsResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ListStorageDealRecordsRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ListStorageDealRecordsResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.LogEntry', null, global);\ngoog.exportSymbol('proto.ffs.rpc.NewAddrRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.NewAddrResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.PaychInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.PushStorageConfigRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.PushStorageConfigResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.RedeemPayChannelRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.RedeemPayChannelResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.RemoveRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.RemoveResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ReplaceRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ReplaceResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.RetrievalDealInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.RetrievalDealRecord', null, global);\ngoog.exportSymbol('proto.ffs.rpc.SendFilRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.SendFilResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.SetDefaultStorageConfigRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.SetDefaultStorageConfigResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ShowAllRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ShowAllResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ShowRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.ShowResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.StageRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.StageResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.StorageConfig', null, global);\ngoog.exportSymbol('proto.ffs.rpc.StorageDealInfo', null, global);\ngoog.exportSymbol('proto.ffs.rpc.StorageDealRecord', null, global);\ngoog.exportSymbol('proto.ffs.rpc.WatchJobsRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.WatchJobsResponse', null, global);\ngoog.exportSymbol('proto.ffs.rpc.WatchLogsRequest', null, global);\ngoog.exportSymbol('proto.ffs.rpc.WatchLogsResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.AddrInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.AddrInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.AddrInfo.displayName = 'proto.ffs.rpc.AddrInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.IpfsConfig = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.IpfsConfig, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.IpfsConfig.displayName = 'proto.ffs.rpc.IpfsConfig';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.HotConfig = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.HotConfig, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.HotConfig.displayName = 'proto.ffs.rpc.HotConfig';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.FilRenew = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.FilRenew, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.FilRenew.displayName = 'proto.ffs.rpc.FilRenew';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.FilConfig = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.FilConfig.repeatedFields_, null);\n};\ngoog.inherits(proto.ffs.rpc.FilConfig, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.FilConfig.displayName = 'proto.ffs.rpc.FilConfig';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.ColdConfig = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.ColdConfig, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ColdConfig.displayName = 'proto.ffs.rpc.ColdConfig';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.StorageConfig = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.StorageConfig, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.StorageConfig.displayName = 'proto.ffs.rpc.StorageConfig';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.IpfsHotInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.IpfsHotInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.IpfsHotInfo.displayName = 'proto.ffs.rpc.IpfsHotInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.HotInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.HotInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.HotInfo.displayName = 'proto.ffs.rpc.HotInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.FilStorage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.FilStorage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.FilStorage.displayName = 'proto.ffs.rpc.FilStorage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.FilInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.FilInfo.repeatedFields_, null);\n};\ngoog.inherits(proto.ffs.rpc.FilInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.FilInfo.displayName = 'proto.ffs.rpc.FilInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.ColdInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.ColdInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ColdInfo.displayName = 'proto.ffs.rpc.ColdInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.CidInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.CidInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.CidInfo.displayName = 'proto.ffs.rpc.CidInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.BalanceInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.BalanceInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.BalanceInfo.displayName = 'proto.ffs.rpc.BalanceInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.InstanceInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.InstanceInfo.repeatedFields_, null);\n};\ngoog.inherits(proto.ffs.rpc.InstanceInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.InstanceInfo.displayName = 'proto.ffs.rpc.InstanceInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.Job = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.Job.repeatedFields_, null);\n};\ngoog.inherits(proto.ffs.rpc.Job, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.Job.displayName = 'proto.ffs.rpc.Job';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.DealError = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.DealError, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.DealError.displayName = 'proto.ffs.rpc.DealError';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.LogEntry = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.LogEntry, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.LogEntry.displayName = 'proto.ffs.rpc.LogEntry';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.PaychInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.PaychInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.PaychInfo.displayName = 'proto.ffs.rpc.PaychInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.ListDealRecordsConfig = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.ListDealRecordsConfig.repeatedFields_, null);\n};\ngoog.inherits(proto.ffs.rpc.ListDealRecordsConfig, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ListDealRecordsConfig.displayName = 'proto.ffs.rpc.ListDealRecordsConfig';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.StorageDealInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.StorageDealInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.StorageDealInfo.displayName = 'proto.ffs.rpc.StorageDealInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.StorageDealRecord = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.StorageDealRecord, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.StorageDealRecord.displayName = 'proto.ffs.rpc.StorageDealRecord';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.RetrievalDealInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.RetrievalDealInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.RetrievalDealInfo.displayName = 'proto.ffs.rpc.RetrievalDealInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.RetrievalDealRecord = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.RetrievalDealRecord, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.RetrievalDealRecord.displayName = 'proto.ffs.rpc.RetrievalDealRecord';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.CreateRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.CreateRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.CreateRequest.displayName = 'proto.ffs.rpc.CreateRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.CreateResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.CreateResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.CreateResponse.displayName = 'proto.ffs.rpc.CreateResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.ListAPIRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.ListAPIRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ListAPIRequest.displayName = 'proto.ffs.rpc.ListAPIRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.ListAPIResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.ListAPIResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.ffs.rpc.ListAPIResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ListAPIResponse.displayName = 'proto.ffs.rpc.ListAPIResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.IDRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.IDRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.IDRequest.displayName = 'proto.ffs.rpc.IDRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.IDResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.IDResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.IDResponse.displayName = 'proto.ffs.rpc.IDResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.AddrsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.AddrsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.AddrsRequest.displayName = 'proto.ffs.rpc.AddrsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.AddrsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.AddrsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.ffs.rpc.AddrsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.AddrsResponse.displayName = 'proto.ffs.rpc.AddrsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.DefaultStorageConfigRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.DefaultStorageConfigRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.DefaultStorageConfigRequest.displayName = 'proto.ffs.rpc.DefaultStorageConfigRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.DefaultStorageConfigResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.DefaultStorageConfigResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.DefaultStorageConfigResponse.displayName = 'proto.ffs.rpc.DefaultStorageConfigResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.NewAddrRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.NewAddrRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.NewAddrRequest.displayName = 'proto.ffs.rpc.NewAddrRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.NewAddrResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.NewAddrResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.NewAddrResponse.displayName = 'proto.ffs.rpc.NewAddrResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.GetStorageConfigRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.GetStorageConfigRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.GetStorageConfigRequest.displayName = 'proto.ffs.rpc.GetStorageConfigRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.GetStorageConfigResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.GetStorageConfigResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.GetStorageConfigResponse.displayName = 'proto.ffs.rpc.GetStorageConfigResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.SetDefaultStorageConfigRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.SetDefaultStorageConfigRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.SetDefaultStorageConfigRequest.displayName = 'proto.ffs.rpc.SetDefaultStorageConfigRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.SetDefaultStorageConfigResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.SetDefaultStorageConfigResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.SetDefaultStorageConfigResponse.displayName = 'proto.ffs.rpc.SetDefaultStorageConfigResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.ShowRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.ShowRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ShowRequest.displayName = 'proto.ffs.rpc.ShowRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.ShowResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.ShowResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ShowResponse.displayName = 'proto.ffs.rpc.ShowResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.InfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.InfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.InfoRequest.displayName = 'proto.ffs.rpc.InfoRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.InfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.InfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.InfoResponse.displayName = 'proto.ffs.rpc.InfoResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.CancelJobRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.CancelJobRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.CancelJobRequest.displayName = 'proto.ffs.rpc.CancelJobRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.CancelJobResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.CancelJobResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.CancelJobResponse.displayName = 'proto.ffs.rpc.CancelJobResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.WatchJobsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.WatchJobsRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.ffs.rpc.WatchJobsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.WatchJobsRequest.displayName = 'proto.ffs.rpc.WatchJobsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.WatchJobsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.WatchJobsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.WatchJobsResponse.displayName = 'proto.ffs.rpc.WatchJobsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.WatchLogsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.WatchLogsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.WatchLogsRequest.displayName = 'proto.ffs.rpc.WatchLogsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.WatchLogsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.WatchLogsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.WatchLogsResponse.displayName = 'proto.ffs.rpc.WatchLogsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.ReplaceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.ReplaceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ReplaceRequest.displayName = 'proto.ffs.rpc.ReplaceRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.ReplaceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.ReplaceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ReplaceResponse.displayName = 'proto.ffs.rpc.ReplaceResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.PushStorageConfigRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.PushStorageConfigRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.PushStorageConfigRequest.displayName = 'proto.ffs.rpc.PushStorageConfigRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.PushStorageConfigResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.PushStorageConfigResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.PushStorageConfigResponse.displayName = 'proto.ffs.rpc.PushStorageConfigResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.RemoveRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.RemoveRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.RemoveRequest.displayName = 'proto.ffs.rpc.RemoveRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.RemoveResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.RemoveResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.RemoveResponse.displayName = 'proto.ffs.rpc.RemoveResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.GetRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.GetRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.GetRequest.displayName = 'proto.ffs.rpc.GetRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.GetResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.GetResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.GetResponse.displayName = 'proto.ffs.rpc.GetResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.SendFilRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.SendFilRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.SendFilRequest.displayName = 'proto.ffs.rpc.SendFilRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.SendFilResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.SendFilResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.SendFilResponse.displayName = 'proto.ffs.rpc.SendFilResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.StageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.StageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.StageRequest.displayName = 'proto.ffs.rpc.StageRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.StageResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.StageResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.StageResponse.displayName = 'proto.ffs.rpc.StageResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.ListPayChannelsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.ListPayChannelsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ListPayChannelsRequest.displayName = 'proto.ffs.rpc.ListPayChannelsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.ListPayChannelsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.ListPayChannelsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.ffs.rpc.ListPayChannelsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ListPayChannelsResponse.displayName = 'proto.ffs.rpc.ListPayChannelsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.CreatePayChannelRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.CreatePayChannelRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.CreatePayChannelRequest.displayName = 'proto.ffs.rpc.CreatePayChannelRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.CreatePayChannelResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.CreatePayChannelResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.CreatePayChannelResponse.displayName = 'proto.ffs.rpc.CreatePayChannelResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.RedeemPayChannelRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.RedeemPayChannelRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.RedeemPayChannelRequest.displayName = 'proto.ffs.rpc.RedeemPayChannelRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.RedeemPayChannelResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.RedeemPayChannelResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.RedeemPayChannelResponse.displayName = 'proto.ffs.rpc.RedeemPayChannelResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.ListStorageDealRecordsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.ListStorageDealRecordsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ListStorageDealRecordsRequest.displayName = 'proto.ffs.rpc.ListStorageDealRecordsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.ListStorageDealRecordsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.ListStorageDealRecordsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.ffs.rpc.ListStorageDealRecordsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ListStorageDealRecordsResponse.displayName = 'proto.ffs.rpc.ListStorageDealRecordsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.ListRetrievalDealRecordsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.ListRetrievalDealRecordsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ListRetrievalDealRecordsRequest.displayName = 'proto.ffs.rpc.ListRetrievalDealRecordsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.ListRetrievalDealRecordsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.ListRetrievalDealRecordsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.ffs.rpc.ListRetrievalDealRecordsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ListRetrievalDealRecordsResponse.displayName = 'proto.ffs.rpc.ListRetrievalDealRecordsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.ShowAllRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ffs.rpc.ShowAllRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ShowAllRequest.displayName = 'proto.ffs.rpc.ShowAllRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ffs.rpc.ShowAllResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ffs.rpc.ShowAllResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.ffs.rpc.ShowAllResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ffs.rpc.ShowAllResponse.displayName = 'proto.ffs.rpc.ShowAllResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.AddrInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.AddrInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.AddrInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.AddrInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    addr: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    type: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.AddrInfo}\n */\nproto.ffs.rpc.AddrInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.AddrInfo;\n  return proto.ffs.rpc.AddrInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.AddrInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.AddrInfo}\n */\nproto.ffs.rpc.AddrInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddr(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.AddrInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.AddrInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.AddrInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.AddrInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.ffs.rpc.AddrInfo.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.AddrInfo} returns this\n */\nproto.ffs.rpc.AddrInfo.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string addr = 2;\n * @return {string}\n */\nproto.ffs.rpc.AddrInfo.prototype.getAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.AddrInfo} returns this\n */\nproto.ffs.rpc.AddrInfo.prototype.setAddr = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string type = 3;\n * @return {string}\n */\nproto.ffs.rpc.AddrInfo.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.AddrInfo} returns this\n */\nproto.ffs.rpc.AddrInfo.prototype.setType = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.IpfsConfig.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.IpfsConfig.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.IpfsConfig} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.IpfsConfig.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addTimeout: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.IpfsConfig}\n */\nproto.ffs.rpc.IpfsConfig.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.IpfsConfig;\n  return proto.ffs.rpc.IpfsConfig.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.IpfsConfig} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.IpfsConfig}\n */\nproto.ffs.rpc.IpfsConfig.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAddTimeout(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.IpfsConfig.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.IpfsConfig.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.IpfsConfig} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.IpfsConfig.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddTimeout();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 add_timeout = 1;\n * @return {number}\n */\nproto.ffs.rpc.IpfsConfig.prototype.getAddTimeout = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.IpfsConfig} returns this\n */\nproto.ffs.rpc.IpfsConfig.prototype.setAddTimeout = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.HotConfig.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.HotConfig.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.HotConfig} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.HotConfig.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n    allowUnfreeze: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),\n    unfreezeMaxPrice: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    ipfs: (f = msg.getIpfs()) && proto.ffs.rpc.IpfsConfig.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.HotConfig}\n */\nproto.ffs.rpc.HotConfig.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.HotConfig;\n  return proto.ffs.rpc.HotConfig.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.HotConfig} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.HotConfig}\n */\nproto.ffs.rpc.HotConfig.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setEnabled(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAllowUnfreeze(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setUnfreezeMaxPrice(value);\n      break;\n    case 4:\n      var value = new proto.ffs.rpc.IpfsConfig;\n      reader.readMessage(value,proto.ffs.rpc.IpfsConfig.deserializeBinaryFromReader);\n      msg.setIpfs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.HotConfig.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.HotConfig.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.HotConfig} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.HotConfig.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEnabled();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getAllowUnfreeze();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getUnfreezeMaxPrice();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getIpfs();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.ffs.rpc.IpfsConfig.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bool enabled = 1;\n * @return {boolean}\n */\nproto.ffs.rpc.HotConfig.prototype.getEnabled = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.HotConfig} returns this\n */\nproto.ffs.rpc.HotConfig.prototype.setEnabled = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional bool allow_unfreeze = 2;\n * @return {boolean}\n */\nproto.ffs.rpc.HotConfig.prototype.getAllowUnfreeze = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.HotConfig} returns this\n */\nproto.ffs.rpc.HotConfig.prototype.setAllowUnfreeze = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * optional uint64 unfreeze_max_price = 3;\n * @return {number}\n */\nproto.ffs.rpc.HotConfig.prototype.getUnfreezeMaxPrice = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.HotConfig} returns this\n */\nproto.ffs.rpc.HotConfig.prototype.setUnfreezeMaxPrice = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional IpfsConfig ipfs = 4;\n * @return {?proto.ffs.rpc.IpfsConfig}\n */\nproto.ffs.rpc.HotConfig.prototype.getIpfs = function() {\n  return /** @type{?proto.ffs.rpc.IpfsConfig} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.IpfsConfig, 4));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.IpfsConfig|undefined} value\n * @return {!proto.ffs.rpc.HotConfig} returns this\n*/\nproto.ffs.rpc.HotConfig.prototype.setIpfs = function(value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.HotConfig} returns this\n */\nproto.ffs.rpc.HotConfig.prototype.clearIpfs = function() {\n  return this.setIpfs(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.HotConfig.prototype.hasIpfs = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.FilRenew.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.FilRenew.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.FilRenew} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.FilRenew.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n    threshold: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.FilRenew}\n */\nproto.ffs.rpc.FilRenew.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.FilRenew;\n  return proto.ffs.rpc.FilRenew.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.FilRenew} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.FilRenew}\n */\nproto.ffs.rpc.FilRenew.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setEnabled(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setThreshold(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.FilRenew.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.FilRenew.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.FilRenew} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.FilRenew.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEnabled();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getThreshold();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool enabled = 1;\n * @return {boolean}\n */\nproto.ffs.rpc.FilRenew.prototype.getEnabled = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.FilRenew} returns this\n */\nproto.ffs.rpc.FilRenew.prototype.setEnabled = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional int64 threshold = 2;\n * @return {number}\n */\nproto.ffs.rpc.FilRenew.prototype.getThreshold = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.FilRenew} returns this\n */\nproto.ffs.rpc.FilRenew.prototype.setThreshold = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ffs.rpc.FilConfig.repeatedFields_ = [3,4,5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.FilConfig.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.FilConfig.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.FilConfig} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.FilConfig.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    repFactor: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    dealMinDuration: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    excludedMinersList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,\n    trustedMinersList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,\n    countryCodesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,\n    renew: (f = msg.getRenew()) && proto.ffs.rpc.FilRenew.toObject(includeInstance, f),\n    addr: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    maxPrice: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    fastRetrieval: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.FilConfig}\n */\nproto.ffs.rpc.FilConfig.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.FilConfig;\n  return proto.ffs.rpc.FilConfig.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.FilConfig} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.FilConfig}\n */\nproto.ffs.rpc.FilConfig.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRepFactor(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setDealMinDuration(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addExcludedMiners(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addTrustedMiners(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addCountryCodes(value);\n      break;\n    case 6:\n      var value = new proto.ffs.rpc.FilRenew;\n      reader.readMessage(value,proto.ffs.rpc.FilRenew.deserializeBinaryFromReader);\n      msg.setRenew(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddr(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxPrice(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setFastRetrieval(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.FilConfig.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.FilConfig.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.FilConfig} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.FilConfig.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRepFactor();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getDealMinDuration();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getExcludedMinersList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      3,\n      f\n    );\n  }\n  f = message.getTrustedMinersList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      4,\n      f\n    );\n  }\n  f = message.getCountryCodesList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      5,\n      f\n    );\n  }\n  f = message.getRenew();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.ffs.rpc.FilRenew.serializeBinaryToWriter\n    );\n  }\n  f = message.getAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getMaxPrice();\n  if (f !== 0) {\n    writer.writeUint64(\n      8,\n      f\n    );\n  }\n  f = message.getFastRetrieval();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 rep_factor = 1;\n * @return {number}\n */\nproto.ffs.rpc.FilConfig.prototype.getRepFactor = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\nproto.ffs.rpc.FilConfig.prototype.setRepFactor = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 deal_min_duration = 2;\n * @return {number}\n */\nproto.ffs.rpc.FilConfig.prototype.getDealMinDuration = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\nproto.ffs.rpc.FilConfig.prototype.setDealMinDuration = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * repeated string excluded_miners = 3;\n * @return {!Array<string>}\n */\nproto.ffs.rpc.FilConfig.prototype.getExcludedMinersList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\nproto.ffs.rpc.FilConfig.prototype.setExcludedMinersList = function(value) {\n  return jspb.Message.setField(this, 3, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\nproto.ffs.rpc.FilConfig.prototype.addExcludedMiners = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\nproto.ffs.rpc.FilConfig.prototype.clearExcludedMinersList = function() {\n  return this.setExcludedMinersList([]);\n};\n\n\n/**\n * repeated string trusted_miners = 4;\n * @return {!Array<string>}\n */\nproto.ffs.rpc.FilConfig.prototype.getTrustedMinersList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\nproto.ffs.rpc.FilConfig.prototype.setTrustedMinersList = function(value) {\n  return jspb.Message.setField(this, 4, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\nproto.ffs.rpc.FilConfig.prototype.addTrustedMiners = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\nproto.ffs.rpc.FilConfig.prototype.clearTrustedMinersList = function() {\n  return this.setTrustedMinersList([]);\n};\n\n\n/**\n * repeated string country_codes = 5;\n * @return {!Array<string>}\n */\nproto.ffs.rpc.FilConfig.prototype.getCountryCodesList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\nproto.ffs.rpc.FilConfig.prototype.setCountryCodesList = function(value) {\n  return jspb.Message.setField(this, 5, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\nproto.ffs.rpc.FilConfig.prototype.addCountryCodes = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\nproto.ffs.rpc.FilConfig.prototype.clearCountryCodesList = function() {\n  return this.setCountryCodesList([]);\n};\n\n\n/**\n * optional FilRenew renew = 6;\n * @return {?proto.ffs.rpc.FilRenew}\n */\nproto.ffs.rpc.FilConfig.prototype.getRenew = function() {\n  return /** @type{?proto.ffs.rpc.FilRenew} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.FilRenew, 6));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.FilRenew|undefined} value\n * @return {!proto.ffs.rpc.FilConfig} returns this\n*/\nproto.ffs.rpc.FilConfig.prototype.setRenew = function(value) {\n  return jspb.Message.setWrapperField(this, 6, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\nproto.ffs.rpc.FilConfig.prototype.clearRenew = function() {\n  return this.setRenew(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.FilConfig.prototype.hasRenew = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional string addr = 7;\n * @return {string}\n */\nproto.ffs.rpc.FilConfig.prototype.getAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\nproto.ffs.rpc.FilConfig.prototype.setAddr = function(value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * optional uint64 max_price = 8;\n * @return {number}\n */\nproto.ffs.rpc.FilConfig.prototype.getMaxPrice = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\nproto.ffs.rpc.FilConfig.prototype.setMaxPrice = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional bool fast_retrieval = 9;\n * @return {boolean}\n */\nproto.ffs.rpc.FilConfig.prototype.getFastRetrieval = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.FilConfig} returns this\n */\nproto.ffs.rpc.FilConfig.prototype.setFastRetrieval = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 9, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.ColdConfig.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.ColdConfig.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.ColdConfig} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ColdConfig.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n    filecoin: (f = msg.getFilecoin()) && proto.ffs.rpc.FilConfig.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ColdConfig}\n */\nproto.ffs.rpc.ColdConfig.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ColdConfig;\n  return proto.ffs.rpc.ColdConfig.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ColdConfig} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ColdConfig}\n */\nproto.ffs.rpc.ColdConfig.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setEnabled(value);\n      break;\n    case 2:\n      var value = new proto.ffs.rpc.FilConfig;\n      reader.readMessage(value,proto.ffs.rpc.FilConfig.deserializeBinaryFromReader);\n      msg.setFilecoin(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.ColdConfig.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ColdConfig.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ColdConfig} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ColdConfig.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEnabled();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getFilecoin();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.ffs.rpc.FilConfig.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bool enabled = 1;\n * @return {boolean}\n */\nproto.ffs.rpc.ColdConfig.prototype.getEnabled = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.ColdConfig} returns this\n */\nproto.ffs.rpc.ColdConfig.prototype.setEnabled = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional FilConfig filecoin = 2;\n * @return {?proto.ffs.rpc.FilConfig}\n */\nproto.ffs.rpc.ColdConfig.prototype.getFilecoin = function() {\n  return /** @type{?proto.ffs.rpc.FilConfig} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.FilConfig, 2));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.FilConfig|undefined} value\n * @return {!proto.ffs.rpc.ColdConfig} returns this\n*/\nproto.ffs.rpc.ColdConfig.prototype.setFilecoin = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.ColdConfig} returns this\n */\nproto.ffs.rpc.ColdConfig.prototype.clearFilecoin = function() {\n  return this.setFilecoin(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.ColdConfig.prototype.hasFilecoin = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.StorageConfig.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.StorageConfig.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.StorageConfig} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.StorageConfig.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hot: (f = msg.getHot()) && proto.ffs.rpc.HotConfig.toObject(includeInstance, f),\n    cold: (f = msg.getCold()) && proto.ffs.rpc.ColdConfig.toObject(includeInstance, f),\n    repairable: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.StorageConfig}\n */\nproto.ffs.rpc.StorageConfig.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.StorageConfig;\n  return proto.ffs.rpc.StorageConfig.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.StorageConfig} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.StorageConfig}\n */\nproto.ffs.rpc.StorageConfig.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ffs.rpc.HotConfig;\n      reader.readMessage(value,proto.ffs.rpc.HotConfig.deserializeBinaryFromReader);\n      msg.setHot(value);\n      break;\n    case 2:\n      var value = new proto.ffs.rpc.ColdConfig;\n      reader.readMessage(value,proto.ffs.rpc.ColdConfig.deserializeBinaryFromReader);\n      msg.setCold(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRepairable(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.StorageConfig.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.StorageConfig.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.StorageConfig} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.StorageConfig.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHot();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.ffs.rpc.HotConfig.serializeBinaryToWriter\n    );\n  }\n  f = message.getCold();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.ffs.rpc.ColdConfig.serializeBinaryToWriter\n    );\n  }\n  f = message.getRepairable();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional HotConfig hot = 1;\n * @return {?proto.ffs.rpc.HotConfig}\n */\nproto.ffs.rpc.StorageConfig.prototype.getHot = function() {\n  return /** @type{?proto.ffs.rpc.HotConfig} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.HotConfig, 1));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.HotConfig|undefined} value\n * @return {!proto.ffs.rpc.StorageConfig} returns this\n*/\nproto.ffs.rpc.StorageConfig.prototype.setHot = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.StorageConfig} returns this\n */\nproto.ffs.rpc.StorageConfig.prototype.clearHot = function() {\n  return this.setHot(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.StorageConfig.prototype.hasHot = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional ColdConfig cold = 2;\n * @return {?proto.ffs.rpc.ColdConfig}\n */\nproto.ffs.rpc.StorageConfig.prototype.getCold = function() {\n  return /** @type{?proto.ffs.rpc.ColdConfig} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.ColdConfig, 2));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.ColdConfig|undefined} value\n * @return {!proto.ffs.rpc.StorageConfig} returns this\n*/\nproto.ffs.rpc.StorageConfig.prototype.setCold = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.StorageConfig} returns this\n */\nproto.ffs.rpc.StorageConfig.prototype.clearCold = function() {\n  return this.setCold(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.StorageConfig.prototype.hasCold = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bool repairable = 3;\n * @return {boolean}\n */\nproto.ffs.rpc.StorageConfig.prototype.getRepairable = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.StorageConfig} returns this\n */\nproto.ffs.rpc.StorageConfig.prototype.setRepairable = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.IpfsHotInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.IpfsHotInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.IpfsHotInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.IpfsHotInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    created: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.IpfsHotInfo}\n */\nproto.ffs.rpc.IpfsHotInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.IpfsHotInfo;\n  return proto.ffs.rpc.IpfsHotInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.IpfsHotInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.IpfsHotInfo}\n */\nproto.ffs.rpc.IpfsHotInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreated(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.IpfsHotInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.IpfsHotInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.IpfsHotInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.IpfsHotInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCreated();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 created = 1;\n * @return {number}\n */\nproto.ffs.rpc.IpfsHotInfo.prototype.getCreated = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.IpfsHotInfo} returns this\n */\nproto.ffs.rpc.IpfsHotInfo.prototype.setCreated = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.HotInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.HotInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.HotInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.HotInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n    size: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    ipfs: (f = msg.getIpfs()) && proto.ffs.rpc.IpfsHotInfo.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.HotInfo}\n */\nproto.ffs.rpc.HotInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.HotInfo;\n  return proto.ffs.rpc.HotInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.HotInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.HotInfo}\n */\nproto.ffs.rpc.HotInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setEnabled(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSize(value);\n      break;\n    case 3:\n      var value = new proto.ffs.rpc.IpfsHotInfo;\n      reader.readMessage(value,proto.ffs.rpc.IpfsHotInfo.deserializeBinaryFromReader);\n      msg.setIpfs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.HotInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.HotInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.HotInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.HotInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEnabled();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getSize();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getIpfs();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.ffs.rpc.IpfsHotInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bool enabled = 1;\n * @return {boolean}\n */\nproto.ffs.rpc.HotInfo.prototype.getEnabled = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.HotInfo} returns this\n */\nproto.ffs.rpc.HotInfo.prototype.setEnabled = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional int64 size = 2;\n * @return {number}\n */\nproto.ffs.rpc.HotInfo.prototype.getSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.HotInfo} returns this\n */\nproto.ffs.rpc.HotInfo.prototype.setSize = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional IpfsHotInfo ipfs = 3;\n * @return {?proto.ffs.rpc.IpfsHotInfo}\n */\nproto.ffs.rpc.HotInfo.prototype.getIpfs = function() {\n  return /** @type{?proto.ffs.rpc.IpfsHotInfo} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.IpfsHotInfo, 3));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.IpfsHotInfo|undefined} value\n * @return {!proto.ffs.rpc.HotInfo} returns this\n*/\nproto.ffs.rpc.HotInfo.prototype.setIpfs = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.HotInfo} returns this\n */\nproto.ffs.rpc.HotInfo.prototype.clearIpfs = function() {\n  return this.setIpfs(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.HotInfo.prototype.hasIpfs = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.FilStorage.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.FilStorage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.FilStorage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.FilStorage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    proposalCid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    renewed: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),\n    duration: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    activationEpoch: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    startEpoch: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    miner: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    epochPrice: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    pieceCid: jspb.Message.getFieldWithDefault(msg, 8, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.FilStorage}\n */\nproto.ffs.rpc.FilStorage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.FilStorage;\n  return proto.ffs.rpc.FilStorage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.FilStorage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.FilStorage}\n */\nproto.ffs.rpc.FilStorage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProposalCid(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRenewed(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setDuration(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setActivationEpoch(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setStartEpoch(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMiner(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setEpochPrice(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPieceCid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.FilStorage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.FilStorage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.FilStorage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.FilStorage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProposalCid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRenewed();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getDuration();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getActivationEpoch();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getStartEpoch();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getMiner();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getEpochPrice();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getPieceCid();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string proposal_cid = 1;\n * @return {string}\n */\nproto.ffs.rpc.FilStorage.prototype.getProposalCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.FilStorage} returns this\n */\nproto.ffs.rpc.FilStorage.prototype.setProposalCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bool renewed = 2;\n * @return {boolean}\n */\nproto.ffs.rpc.FilStorage.prototype.getRenewed = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.FilStorage} returns this\n */\nproto.ffs.rpc.FilStorage.prototype.setRenewed = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * optional int64 duration = 3;\n * @return {number}\n */\nproto.ffs.rpc.FilStorage.prototype.getDuration = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.FilStorage} returns this\n */\nproto.ffs.rpc.FilStorage.prototype.setDuration = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 activation_epoch = 4;\n * @return {number}\n */\nproto.ffs.rpc.FilStorage.prototype.getActivationEpoch = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.FilStorage} returns this\n */\nproto.ffs.rpc.FilStorage.prototype.setActivationEpoch = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional uint64 start_epoch = 5;\n * @return {number}\n */\nproto.ffs.rpc.FilStorage.prototype.getStartEpoch = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.FilStorage} returns this\n */\nproto.ffs.rpc.FilStorage.prototype.setStartEpoch = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional string miner = 6;\n * @return {string}\n */\nproto.ffs.rpc.FilStorage.prototype.getMiner = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.FilStorage} returns this\n */\nproto.ffs.rpc.FilStorage.prototype.setMiner = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n/**\n * optional uint64 epoch_price = 7;\n * @return {number}\n */\nproto.ffs.rpc.FilStorage.prototype.getEpochPrice = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.FilStorage} returns this\n */\nproto.ffs.rpc.FilStorage.prototype.setEpochPrice = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional string piece_cid = 8;\n * @return {string}\n */\nproto.ffs.rpc.FilStorage.prototype.getPieceCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.FilStorage} returns this\n */\nproto.ffs.rpc.FilStorage.prototype.setPieceCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ffs.rpc.FilInfo.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.FilInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.FilInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.FilInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.FilInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dataCid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    size: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    proposalsList: jspb.Message.toObjectList(msg.getProposalsList(),\n    proto.ffs.rpc.FilStorage.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.FilInfo}\n */\nproto.ffs.rpc.FilInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.FilInfo;\n  return proto.ffs.rpc.FilInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.FilInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.FilInfo}\n */\nproto.ffs.rpc.FilInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDataCid(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSize(value);\n      break;\n    case 3:\n      var value = new proto.ffs.rpc.FilStorage;\n      reader.readMessage(value,proto.ffs.rpc.FilStorage.deserializeBinaryFromReader);\n      msg.addProposals(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.FilInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.FilInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.FilInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.FilInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDataCid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getSize();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getProposalsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.ffs.rpc.FilStorage.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string data_cid = 1;\n * @return {string}\n */\nproto.ffs.rpc.FilInfo.prototype.getDataCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.FilInfo} returns this\n */\nproto.ffs.rpc.FilInfo.prototype.setDataCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint64 size = 2;\n * @return {number}\n */\nproto.ffs.rpc.FilInfo.prototype.getSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.FilInfo} returns this\n */\nproto.ffs.rpc.FilInfo.prototype.setSize = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * repeated FilStorage proposals = 3;\n * @return {!Array<!proto.ffs.rpc.FilStorage>}\n */\nproto.ffs.rpc.FilInfo.prototype.getProposalsList = function() {\n  return /** @type{!Array<!proto.ffs.rpc.FilStorage>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.ffs.rpc.FilStorage, 3));\n};\n\n\n/**\n * @param {!Array<!proto.ffs.rpc.FilStorage>} value\n * @return {!proto.ffs.rpc.FilInfo} returns this\n*/\nproto.ffs.rpc.FilInfo.prototype.setProposalsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.ffs.rpc.FilStorage=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.FilStorage}\n */\nproto.ffs.rpc.FilInfo.prototype.addProposals = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ffs.rpc.FilStorage, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.FilInfo} returns this\n */\nproto.ffs.rpc.FilInfo.prototype.clearProposalsList = function() {\n  return this.setProposalsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.ColdInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.ColdInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.ColdInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ColdInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n    filecoin: (f = msg.getFilecoin()) && proto.ffs.rpc.FilInfo.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ColdInfo}\n */\nproto.ffs.rpc.ColdInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ColdInfo;\n  return proto.ffs.rpc.ColdInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ColdInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ColdInfo}\n */\nproto.ffs.rpc.ColdInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setEnabled(value);\n      break;\n    case 2:\n      var value = new proto.ffs.rpc.FilInfo;\n      reader.readMessage(value,proto.ffs.rpc.FilInfo.deserializeBinaryFromReader);\n      msg.setFilecoin(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.ColdInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ColdInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ColdInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ColdInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEnabled();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getFilecoin();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.ffs.rpc.FilInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bool enabled = 1;\n * @return {boolean}\n */\nproto.ffs.rpc.ColdInfo.prototype.getEnabled = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.ColdInfo} returns this\n */\nproto.ffs.rpc.ColdInfo.prototype.setEnabled = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional FilInfo filecoin = 2;\n * @return {?proto.ffs.rpc.FilInfo}\n */\nproto.ffs.rpc.ColdInfo.prototype.getFilecoin = function() {\n  return /** @type{?proto.ffs.rpc.FilInfo} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.FilInfo, 2));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.FilInfo|undefined} value\n * @return {!proto.ffs.rpc.ColdInfo} returns this\n*/\nproto.ffs.rpc.ColdInfo.prototype.setFilecoin = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.ColdInfo} returns this\n */\nproto.ffs.rpc.ColdInfo.prototype.clearFilecoin = function() {\n  return this.setFilecoin(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.ColdInfo.prototype.hasFilecoin = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.CidInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.CidInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.CidInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.CidInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    jobId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    cid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    created: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    hot: (f = msg.getHot()) && proto.ffs.rpc.HotInfo.toObject(includeInstance, f),\n    cold: (f = msg.getCold()) && proto.ffs.rpc.ColdInfo.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.CidInfo}\n */\nproto.ffs.rpc.CidInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.CidInfo;\n  return proto.ffs.rpc.CidInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.CidInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.CidInfo}\n */\nproto.ffs.rpc.CidInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setJobId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCid(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreated(value);\n      break;\n    case 4:\n      var value = new proto.ffs.rpc.HotInfo;\n      reader.readMessage(value,proto.ffs.rpc.HotInfo.deserializeBinaryFromReader);\n      msg.setHot(value);\n      break;\n    case 5:\n      var value = new proto.ffs.rpc.ColdInfo;\n      reader.readMessage(value,proto.ffs.rpc.ColdInfo.deserializeBinaryFromReader);\n      msg.setCold(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.CidInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.CidInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.CidInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.CidInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getJobId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCreated();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getHot();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.ffs.rpc.HotInfo.serializeBinaryToWriter\n    );\n  }\n  f = message.getCold();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.ffs.rpc.ColdInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string job_id = 1;\n * @return {string}\n */\nproto.ffs.rpc.CidInfo.prototype.getJobId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.CidInfo} returns this\n */\nproto.ffs.rpc.CidInfo.prototype.setJobId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string cid = 2;\n * @return {string}\n */\nproto.ffs.rpc.CidInfo.prototype.getCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.CidInfo} returns this\n */\nproto.ffs.rpc.CidInfo.prototype.setCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int64 created = 3;\n * @return {number}\n */\nproto.ffs.rpc.CidInfo.prototype.getCreated = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.CidInfo} returns this\n */\nproto.ffs.rpc.CidInfo.prototype.setCreated = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional HotInfo hot = 4;\n * @return {?proto.ffs.rpc.HotInfo}\n */\nproto.ffs.rpc.CidInfo.prototype.getHot = function() {\n  return /** @type{?proto.ffs.rpc.HotInfo} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.HotInfo, 4));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.HotInfo|undefined} value\n * @return {!proto.ffs.rpc.CidInfo} returns this\n*/\nproto.ffs.rpc.CidInfo.prototype.setHot = function(value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.CidInfo} returns this\n */\nproto.ffs.rpc.CidInfo.prototype.clearHot = function() {\n  return this.setHot(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.CidInfo.prototype.hasHot = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional ColdInfo cold = 5;\n * @return {?proto.ffs.rpc.ColdInfo}\n */\nproto.ffs.rpc.CidInfo.prototype.getCold = function() {\n  return /** @type{?proto.ffs.rpc.ColdInfo} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.ColdInfo, 5));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.ColdInfo|undefined} value\n * @return {!proto.ffs.rpc.CidInfo} returns this\n*/\nproto.ffs.rpc.CidInfo.prototype.setCold = function(value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.CidInfo} returns this\n */\nproto.ffs.rpc.CidInfo.prototype.clearCold = function() {\n  return this.setCold(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.CidInfo.prototype.hasCold = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.BalanceInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.BalanceInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.BalanceInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.BalanceInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addr: (f = msg.getAddr()) && proto.ffs.rpc.AddrInfo.toObject(includeInstance, f),\n    balance: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.BalanceInfo}\n */\nproto.ffs.rpc.BalanceInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.BalanceInfo;\n  return proto.ffs.rpc.BalanceInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.BalanceInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.BalanceInfo}\n */\nproto.ffs.rpc.BalanceInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ffs.rpc.AddrInfo;\n      reader.readMessage(value,proto.ffs.rpc.AddrInfo.deserializeBinaryFromReader);\n      msg.setAddr(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBalance(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.BalanceInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.BalanceInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.BalanceInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.BalanceInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddr();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.ffs.rpc.AddrInfo.serializeBinaryToWriter\n    );\n  }\n  f = message.getBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional AddrInfo addr = 1;\n * @return {?proto.ffs.rpc.AddrInfo}\n */\nproto.ffs.rpc.BalanceInfo.prototype.getAddr = function() {\n  return /** @type{?proto.ffs.rpc.AddrInfo} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.AddrInfo, 1));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.AddrInfo|undefined} value\n * @return {!proto.ffs.rpc.BalanceInfo} returns this\n*/\nproto.ffs.rpc.BalanceInfo.prototype.setAddr = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.BalanceInfo} returns this\n */\nproto.ffs.rpc.BalanceInfo.prototype.clearAddr = function() {\n  return this.setAddr(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.BalanceInfo.prototype.hasAddr = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 balance = 2;\n * @return {number}\n */\nproto.ffs.rpc.BalanceInfo.prototype.getBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.BalanceInfo} returns this\n */\nproto.ffs.rpc.BalanceInfo.prototype.setBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ffs.rpc.InstanceInfo.repeatedFields_ = [3,4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.InstanceInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.InstanceInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.InstanceInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.InstanceInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    defaultStorageConfig: (f = msg.getDefaultStorageConfig()) && proto.ffs.rpc.StorageConfig.toObject(includeInstance, f),\n    balancesList: jspb.Message.toObjectList(msg.getBalancesList(),\n    proto.ffs.rpc.BalanceInfo.toObject, includeInstance),\n    pinsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.InstanceInfo}\n */\nproto.ffs.rpc.InstanceInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.InstanceInfo;\n  return proto.ffs.rpc.InstanceInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.InstanceInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.InstanceInfo}\n */\nproto.ffs.rpc.InstanceInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = new proto.ffs.rpc.StorageConfig;\n      reader.readMessage(value,proto.ffs.rpc.StorageConfig.deserializeBinaryFromReader);\n      msg.setDefaultStorageConfig(value);\n      break;\n    case 3:\n      var value = new proto.ffs.rpc.BalanceInfo;\n      reader.readMessage(value,proto.ffs.rpc.BalanceInfo.deserializeBinaryFromReader);\n      msg.addBalances(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addPins(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.InstanceInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.InstanceInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.InstanceInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.InstanceInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getDefaultStorageConfig();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.ffs.rpc.StorageConfig.serializeBinaryToWriter\n    );\n  }\n  f = message.getBalancesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.ffs.rpc.BalanceInfo.serializeBinaryToWriter\n    );\n  }\n  f = message.getPinsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.ffs.rpc.InstanceInfo.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.InstanceInfo} returns this\n */\nproto.ffs.rpc.InstanceInfo.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional StorageConfig default_storage_config = 2;\n * @return {?proto.ffs.rpc.StorageConfig}\n */\nproto.ffs.rpc.InstanceInfo.prototype.getDefaultStorageConfig = function() {\n  return /** @type{?proto.ffs.rpc.StorageConfig} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.StorageConfig, 2));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.StorageConfig|undefined} value\n * @return {!proto.ffs.rpc.InstanceInfo} returns this\n*/\nproto.ffs.rpc.InstanceInfo.prototype.setDefaultStorageConfig = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.InstanceInfo} returns this\n */\nproto.ffs.rpc.InstanceInfo.prototype.clearDefaultStorageConfig = function() {\n  return this.setDefaultStorageConfig(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.InstanceInfo.prototype.hasDefaultStorageConfig = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * repeated BalanceInfo balances = 3;\n * @return {!Array<!proto.ffs.rpc.BalanceInfo>}\n */\nproto.ffs.rpc.InstanceInfo.prototype.getBalancesList = function() {\n  return /** @type{!Array<!proto.ffs.rpc.BalanceInfo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.ffs.rpc.BalanceInfo, 3));\n};\n\n\n/**\n * @param {!Array<!proto.ffs.rpc.BalanceInfo>} value\n * @return {!proto.ffs.rpc.InstanceInfo} returns this\n*/\nproto.ffs.rpc.InstanceInfo.prototype.setBalancesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.ffs.rpc.BalanceInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.BalanceInfo}\n */\nproto.ffs.rpc.InstanceInfo.prototype.addBalances = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ffs.rpc.BalanceInfo, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.InstanceInfo} returns this\n */\nproto.ffs.rpc.InstanceInfo.prototype.clearBalancesList = function() {\n  return this.setBalancesList([]);\n};\n\n\n/**\n * repeated string pins = 4;\n * @return {!Array<string>}\n */\nproto.ffs.rpc.InstanceInfo.prototype.getPinsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.ffs.rpc.InstanceInfo} returns this\n */\nproto.ffs.rpc.InstanceInfo.prototype.setPinsList = function(value) {\n  return jspb.Message.setField(this, 4, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.InstanceInfo} returns this\n */\nproto.ffs.rpc.InstanceInfo.prototype.addPins = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.InstanceInfo} returns this\n */\nproto.ffs.rpc.InstanceInfo.prototype.clearPinsList = function() {\n  return this.setPinsList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ffs.rpc.Job.repeatedFields_ = [6];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.Job.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.Job.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.Job} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.Job.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    apiId: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    cid: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    status: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    errCause: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    dealErrorsList: jspb.Message.toObjectList(msg.getDealErrorsList(),\n    proto.ffs.rpc.DealError.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.Job}\n */\nproto.ffs.rpc.Job.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.Job;\n  return proto.ffs.rpc.Job.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.Job} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.Job}\n */\nproto.ffs.rpc.Job.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setApiId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCid(value);\n      break;\n    case 4:\n      var value = /** @type {!proto.ffs.rpc.JobStatus} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setErrCause(value);\n      break;\n    case 6:\n      var value = new proto.ffs.rpc.DealError;\n      reader.readMessage(value,proto.ffs.rpc.DealError.deserializeBinaryFromReader);\n      msg.addDealErrors(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.Job.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.Job.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.Job} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.Job.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getApiId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      4,\n      f\n    );\n  }\n  f = message.getErrCause();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getDealErrorsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      6,\n      f,\n      proto.ffs.rpc.DealError.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.ffs.rpc.Job.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.Job} returns this\n */\nproto.ffs.rpc.Job.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string api_id = 2;\n * @return {string}\n */\nproto.ffs.rpc.Job.prototype.getApiId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.Job} returns this\n */\nproto.ffs.rpc.Job.prototype.setApiId = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string cid = 3;\n * @return {string}\n */\nproto.ffs.rpc.Job.prototype.getCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.Job} returns this\n */\nproto.ffs.rpc.Job.prototype.setCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional JobStatus status = 4;\n * @return {!proto.ffs.rpc.JobStatus}\n */\nproto.ffs.rpc.Job.prototype.getStatus = function() {\n  return /** @type {!proto.ffs.rpc.JobStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {!proto.ffs.rpc.JobStatus} value\n * @return {!proto.ffs.rpc.Job} returns this\n */\nproto.ffs.rpc.Job.prototype.setStatus = function(value) {\n  return jspb.Message.setProto3EnumField(this, 4, value);\n};\n\n\n/**\n * optional string err_cause = 5;\n * @return {string}\n */\nproto.ffs.rpc.Job.prototype.getErrCause = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.Job} returns this\n */\nproto.ffs.rpc.Job.prototype.setErrCause = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * repeated DealError deal_errors = 6;\n * @return {!Array<!proto.ffs.rpc.DealError>}\n */\nproto.ffs.rpc.Job.prototype.getDealErrorsList = function() {\n  return /** @type{!Array<!proto.ffs.rpc.DealError>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.ffs.rpc.DealError, 6));\n};\n\n\n/**\n * @param {!Array<!proto.ffs.rpc.DealError>} value\n * @return {!proto.ffs.rpc.Job} returns this\n*/\nproto.ffs.rpc.Job.prototype.setDealErrorsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 6, value);\n};\n\n\n/**\n * @param {!proto.ffs.rpc.DealError=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.DealError}\n */\nproto.ffs.rpc.Job.prototype.addDealErrors = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.ffs.rpc.DealError, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.Job} returns this\n */\nproto.ffs.rpc.Job.prototype.clearDealErrorsList = function() {\n  return this.setDealErrorsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.DealError.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.DealError.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.DealError} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.DealError.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    proposalCid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    miner: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    message: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.DealError}\n */\nproto.ffs.rpc.DealError.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.DealError;\n  return proto.ffs.rpc.DealError.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.DealError} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.DealError}\n */\nproto.ffs.rpc.DealError.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProposalCid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMiner(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.DealError.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.DealError.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.DealError} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.DealError.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProposalCid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getMiner();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string proposal_cid = 1;\n * @return {string}\n */\nproto.ffs.rpc.DealError.prototype.getProposalCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.DealError} returns this\n */\nproto.ffs.rpc.DealError.prototype.setProposalCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string miner = 2;\n * @return {string}\n */\nproto.ffs.rpc.DealError.prototype.getMiner = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.DealError} returns this\n */\nproto.ffs.rpc.DealError.prototype.setMiner = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string message = 3;\n * @return {string}\n */\nproto.ffs.rpc.DealError.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.DealError} returns this\n */\nproto.ffs.rpc.DealError.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.LogEntry.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.LogEntry.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.LogEntry} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.LogEntry.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    cid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    jid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    time: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    msg: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.LogEntry}\n */\nproto.ffs.rpc.LogEntry.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.LogEntry;\n  return proto.ffs.rpc.LogEntry.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.LogEntry} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.LogEntry}\n */\nproto.ffs.rpc.LogEntry.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setJid(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTime(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMsg(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.LogEntry.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.LogEntry.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.LogEntry} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.LogEntry.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getJid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getMsg();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string cid = 1;\n * @return {string}\n */\nproto.ffs.rpc.LogEntry.prototype.getCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.LogEntry} returns this\n */\nproto.ffs.rpc.LogEntry.prototype.setCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string jid = 2;\n * @return {string}\n */\nproto.ffs.rpc.LogEntry.prototype.getJid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.LogEntry} returns this\n */\nproto.ffs.rpc.LogEntry.prototype.setJid = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int64 time = 3;\n * @return {number}\n */\nproto.ffs.rpc.LogEntry.prototype.getTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.LogEntry} returns this\n */\nproto.ffs.rpc.LogEntry.prototype.setTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional string msg = 4;\n * @return {string}\n */\nproto.ffs.rpc.LogEntry.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.LogEntry} returns this\n */\nproto.ffs.rpc.LogEntry.prototype.setMsg = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.PaychInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.PaychInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.PaychInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.PaychInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ctlAddr: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    addr: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    direction: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.PaychInfo}\n */\nproto.ffs.rpc.PaychInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.PaychInfo;\n  return proto.ffs.rpc.PaychInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.PaychInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.PaychInfo}\n */\nproto.ffs.rpc.PaychInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCtlAddr(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddr(value);\n      break;\n    case 3:\n      var value = /** @type {!proto.ffs.rpc.Direction} */ (reader.readEnum());\n      msg.setDirection(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.PaychInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.PaychInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.PaychInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.PaychInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCtlAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getDirection();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string ctl_addr = 1;\n * @return {string}\n */\nproto.ffs.rpc.PaychInfo.prototype.getCtlAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.PaychInfo} returns this\n */\nproto.ffs.rpc.PaychInfo.prototype.setCtlAddr = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string addr = 2;\n * @return {string}\n */\nproto.ffs.rpc.PaychInfo.prototype.getAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.PaychInfo} returns this\n */\nproto.ffs.rpc.PaychInfo.prototype.setAddr = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional Direction direction = 3;\n * @return {!proto.ffs.rpc.Direction}\n */\nproto.ffs.rpc.PaychInfo.prototype.getDirection = function() {\n  return /** @type {!proto.ffs.rpc.Direction} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {!proto.ffs.rpc.Direction} value\n * @return {!proto.ffs.rpc.PaychInfo} returns this\n */\nproto.ffs.rpc.PaychInfo.prototype.setDirection = function(value) {\n  return jspb.Message.setProto3EnumField(this, 3, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ffs.rpc.ListDealRecordsConfig.repeatedFields_ = [1,2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.ListDealRecordsConfig.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.ListDealRecordsConfig.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.ListDealRecordsConfig} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ListDealRecordsConfig.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fromAddrsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    dataCidsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,\n    includePending: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n    includeFinal: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),\n    ascending: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ListDealRecordsConfig}\n */\nproto.ffs.rpc.ListDealRecordsConfig.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ListDealRecordsConfig;\n  return proto.ffs.rpc.ListDealRecordsConfig.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ListDealRecordsConfig} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ListDealRecordsConfig}\n */\nproto.ffs.rpc.ListDealRecordsConfig.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addFromAddrs(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addDataCids(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncludePending(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncludeFinal(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAscending(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.ListDealRecordsConfig.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ListDealRecordsConfig.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ListDealRecordsConfig} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ListDealRecordsConfig.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFromAddrsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      1,\n      f\n    );\n  }\n  f = message.getDataCidsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      2,\n      f\n    );\n  }\n  f = message.getIncludePending();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getIncludeFinal();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getAscending();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated string from_addrs = 1;\n * @return {!Array<string>}\n */\nproto.ffs.rpc.ListDealRecordsConfig.prototype.getFromAddrsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.ffs.rpc.ListDealRecordsConfig} returns this\n */\nproto.ffs.rpc.ListDealRecordsConfig.prototype.setFromAddrsList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.ListDealRecordsConfig} returns this\n */\nproto.ffs.rpc.ListDealRecordsConfig.prototype.addFromAddrs = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.ListDealRecordsConfig} returns this\n */\nproto.ffs.rpc.ListDealRecordsConfig.prototype.clearFromAddrsList = function() {\n  return this.setFromAddrsList([]);\n};\n\n\n/**\n * repeated string data_cids = 2;\n * @return {!Array<string>}\n */\nproto.ffs.rpc.ListDealRecordsConfig.prototype.getDataCidsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.ffs.rpc.ListDealRecordsConfig} returns this\n */\nproto.ffs.rpc.ListDealRecordsConfig.prototype.setDataCidsList = function(value) {\n  return jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.ListDealRecordsConfig} returns this\n */\nproto.ffs.rpc.ListDealRecordsConfig.prototype.addDataCids = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.ListDealRecordsConfig} returns this\n */\nproto.ffs.rpc.ListDealRecordsConfig.prototype.clearDataCidsList = function() {\n  return this.setDataCidsList([]);\n};\n\n\n/**\n * optional bool include_pending = 3;\n * @return {boolean}\n */\nproto.ffs.rpc.ListDealRecordsConfig.prototype.getIncludePending = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.ListDealRecordsConfig} returns this\n */\nproto.ffs.rpc.ListDealRecordsConfig.prototype.setIncludePending = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n/**\n * optional bool include_final = 4;\n * @return {boolean}\n */\nproto.ffs.rpc.ListDealRecordsConfig.prototype.getIncludeFinal = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.ListDealRecordsConfig} returns this\n */\nproto.ffs.rpc.ListDealRecordsConfig.prototype.setIncludeFinal = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n/**\n * optional bool ascending = 5;\n * @return {boolean}\n */\nproto.ffs.rpc.ListDealRecordsConfig.prototype.getAscending = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.ListDealRecordsConfig} returns this\n */\nproto.ffs.rpc.ListDealRecordsConfig.prototype.setAscending = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.StorageDealInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.StorageDealInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.StorageDealInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.StorageDealInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    proposalCid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    stateId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    stateName: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    miner: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    pieceCid: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    size: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    pricePerEpoch: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    startEpoch: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    duration: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    dealId: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    activationEpoch: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    msg: jspb.Message.getFieldWithDefault(msg, 12, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.StorageDealInfo}\n */\nproto.ffs.rpc.StorageDealInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.StorageDealInfo;\n  return proto.ffs.rpc.StorageDealInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.StorageDealInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.StorageDealInfo}\n */\nproto.ffs.rpc.StorageDealInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProposalCid(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setStateId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStateName(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMiner(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPieceCid(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSize(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPricePerEpoch(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setStartEpoch(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDuration(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDealId(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setActivationEpoch(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMsg(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.StorageDealInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.StorageDealInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.StorageDealInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.StorageDealInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProposalCid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getStateId();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getStateName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getMiner();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getPieceCid();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getSize();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getPricePerEpoch();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getStartEpoch();\n  if (f !== 0) {\n    writer.writeUint64(\n      8,\n      f\n    );\n  }\n  f = message.getDuration();\n  if (f !== 0) {\n    writer.writeUint64(\n      9,\n      f\n    );\n  }\n  f = message.getDealId();\n  if (f !== 0) {\n    writer.writeUint64(\n      10,\n      f\n    );\n  }\n  f = message.getActivationEpoch();\n  if (f !== 0) {\n    writer.writeInt64(\n      11,\n      f\n    );\n  }\n  f = message.getMsg();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string proposal_cid = 1;\n * @return {string}\n */\nproto.ffs.rpc.StorageDealInfo.prototype.getProposalCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\nproto.ffs.rpc.StorageDealInfo.prototype.setProposalCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint64 state_id = 2;\n * @return {number}\n */\nproto.ffs.rpc.StorageDealInfo.prototype.getStateId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\nproto.ffs.rpc.StorageDealInfo.prototype.setStateId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string state_name = 3;\n * @return {string}\n */\nproto.ffs.rpc.StorageDealInfo.prototype.getStateName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\nproto.ffs.rpc.StorageDealInfo.prototype.setStateName = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string miner = 4;\n * @return {string}\n */\nproto.ffs.rpc.StorageDealInfo.prototype.getMiner = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\nproto.ffs.rpc.StorageDealInfo.prototype.setMiner = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string piece_cid = 5;\n * @return {string}\n */\nproto.ffs.rpc.StorageDealInfo.prototype.getPieceCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\nproto.ffs.rpc.StorageDealInfo.prototype.setPieceCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional uint64 size = 6;\n * @return {number}\n */\nproto.ffs.rpc.StorageDealInfo.prototype.getSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\nproto.ffs.rpc.StorageDealInfo.prototype.setSize = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional uint64 price_per_epoch = 7;\n * @return {number}\n */\nproto.ffs.rpc.StorageDealInfo.prototype.getPricePerEpoch = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\nproto.ffs.rpc.StorageDealInfo.prototype.setPricePerEpoch = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional uint64 start_epoch = 8;\n * @return {number}\n */\nproto.ffs.rpc.StorageDealInfo.prototype.getStartEpoch = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\nproto.ffs.rpc.StorageDealInfo.prototype.setStartEpoch = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional uint64 duration = 9;\n * @return {number}\n */\nproto.ffs.rpc.StorageDealInfo.prototype.getDuration = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\nproto.ffs.rpc.StorageDealInfo.prototype.setDuration = function(value) {\n  return jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n/**\n * optional uint64 deal_id = 10;\n * @return {number}\n */\nproto.ffs.rpc.StorageDealInfo.prototype.getDealId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\nproto.ffs.rpc.StorageDealInfo.prototype.setDealId = function(value) {\n  return jspb.Message.setProto3IntField(this, 10, value);\n};\n\n\n/**\n * optional int64 activation_epoch = 11;\n * @return {number}\n */\nproto.ffs.rpc.StorageDealInfo.prototype.getActivationEpoch = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\nproto.ffs.rpc.StorageDealInfo.prototype.setActivationEpoch = function(value) {\n  return jspb.Message.setProto3IntField(this, 11, value);\n};\n\n\n/**\n * optional string msg = 12;\n * @return {string}\n */\nproto.ffs.rpc.StorageDealInfo.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.StorageDealInfo} returns this\n */\nproto.ffs.rpc.StorageDealInfo.prototype.setMsg = function(value) {\n  return jspb.Message.setProto3StringField(this, 12, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.StorageDealRecord.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.StorageDealRecord.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.StorageDealRecord} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.StorageDealRecord.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rootCid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    addr: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    time: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    pending: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),\n    dealInfo: (f = msg.getDealInfo()) && proto.ffs.rpc.StorageDealInfo.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.StorageDealRecord}\n */\nproto.ffs.rpc.StorageDealRecord.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.StorageDealRecord;\n  return proto.ffs.rpc.StorageDealRecord.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.StorageDealRecord} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.StorageDealRecord}\n */\nproto.ffs.rpc.StorageDealRecord.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRootCid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddr(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTime(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPending(value);\n      break;\n    case 5:\n      var value = new proto.ffs.rpc.StorageDealInfo;\n      reader.readMessage(value,proto.ffs.rpc.StorageDealInfo.deserializeBinaryFromReader);\n      msg.setDealInfo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.StorageDealRecord.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.StorageDealRecord.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.StorageDealRecord} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.StorageDealRecord.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRootCid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getPending();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getDealInfo();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.ffs.rpc.StorageDealInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string root_cid = 1;\n * @return {string}\n */\nproto.ffs.rpc.StorageDealRecord.prototype.getRootCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.StorageDealRecord} returns this\n */\nproto.ffs.rpc.StorageDealRecord.prototype.setRootCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string addr = 2;\n * @return {string}\n */\nproto.ffs.rpc.StorageDealRecord.prototype.getAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.StorageDealRecord} returns this\n */\nproto.ffs.rpc.StorageDealRecord.prototype.setAddr = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int64 time = 3;\n * @return {number}\n */\nproto.ffs.rpc.StorageDealRecord.prototype.getTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.StorageDealRecord} returns this\n */\nproto.ffs.rpc.StorageDealRecord.prototype.setTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bool pending = 4;\n * @return {boolean}\n */\nproto.ffs.rpc.StorageDealRecord.prototype.getPending = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.StorageDealRecord} returns this\n */\nproto.ffs.rpc.StorageDealRecord.prototype.setPending = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n/**\n * optional StorageDealInfo deal_info = 5;\n * @return {?proto.ffs.rpc.StorageDealInfo}\n */\nproto.ffs.rpc.StorageDealRecord.prototype.getDealInfo = function() {\n  return /** @type{?proto.ffs.rpc.StorageDealInfo} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.StorageDealInfo, 5));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.StorageDealInfo|undefined} value\n * @return {!proto.ffs.rpc.StorageDealRecord} returns this\n*/\nproto.ffs.rpc.StorageDealRecord.prototype.setDealInfo = function(value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.StorageDealRecord} returns this\n */\nproto.ffs.rpc.StorageDealRecord.prototype.clearDealInfo = function() {\n  return this.setDealInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.StorageDealRecord.prototype.hasDealInfo = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.RetrievalDealInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.RetrievalDealInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.RetrievalDealInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.RetrievalDealInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rootCid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    size: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    minPrice: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    paymentInterval: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    paymentIntervalIncrease: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    miner: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    minerPeerId: jspb.Message.getFieldWithDefault(msg, 7, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.RetrievalDealInfo}\n */\nproto.ffs.rpc.RetrievalDealInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.RetrievalDealInfo;\n  return proto.ffs.rpc.RetrievalDealInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.RetrievalDealInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.RetrievalDealInfo}\n */\nproto.ffs.rpc.RetrievalDealInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRootCid(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSize(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMinPrice(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPaymentInterval(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPaymentIntervalIncrease(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMiner(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMinerPeerId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.RetrievalDealInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.RetrievalDealInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.RetrievalDealInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.RetrievalDealInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRootCid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getSize();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getMinPrice();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getPaymentInterval();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getPaymentIntervalIncrease();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getMiner();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getMinerPeerId();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string root_cid = 1;\n * @return {string}\n */\nproto.ffs.rpc.RetrievalDealInfo.prototype.getRootCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.RetrievalDealInfo} returns this\n */\nproto.ffs.rpc.RetrievalDealInfo.prototype.setRootCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint64 size = 2;\n * @return {number}\n */\nproto.ffs.rpc.RetrievalDealInfo.prototype.getSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.RetrievalDealInfo} returns this\n */\nproto.ffs.rpc.RetrievalDealInfo.prototype.setSize = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 min_price = 3;\n * @return {number}\n */\nproto.ffs.rpc.RetrievalDealInfo.prototype.getMinPrice = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.RetrievalDealInfo} returns this\n */\nproto.ffs.rpc.RetrievalDealInfo.prototype.setMinPrice = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional uint64 payment_interval = 4;\n * @return {number}\n */\nproto.ffs.rpc.RetrievalDealInfo.prototype.getPaymentInterval = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.RetrievalDealInfo} returns this\n */\nproto.ffs.rpc.RetrievalDealInfo.prototype.setPaymentInterval = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional uint64 payment_interval_increase = 5;\n * @return {number}\n */\nproto.ffs.rpc.RetrievalDealInfo.prototype.getPaymentIntervalIncrease = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.RetrievalDealInfo} returns this\n */\nproto.ffs.rpc.RetrievalDealInfo.prototype.setPaymentIntervalIncrease = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional string miner = 6;\n * @return {string}\n */\nproto.ffs.rpc.RetrievalDealInfo.prototype.getMiner = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.RetrievalDealInfo} returns this\n */\nproto.ffs.rpc.RetrievalDealInfo.prototype.setMiner = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n/**\n * optional string miner_peer_id = 7;\n * @return {string}\n */\nproto.ffs.rpc.RetrievalDealInfo.prototype.getMinerPeerId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.RetrievalDealInfo} returns this\n */\nproto.ffs.rpc.RetrievalDealInfo.prototype.setMinerPeerId = function(value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.RetrievalDealRecord.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.RetrievalDealRecord.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.RetrievalDealRecord} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.RetrievalDealRecord.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addr: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    time: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    dealInfo: (f = msg.getDealInfo()) && proto.ffs.rpc.RetrievalDealInfo.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.RetrievalDealRecord}\n */\nproto.ffs.rpc.RetrievalDealRecord.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.RetrievalDealRecord;\n  return proto.ffs.rpc.RetrievalDealRecord.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.RetrievalDealRecord} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.RetrievalDealRecord}\n */\nproto.ffs.rpc.RetrievalDealRecord.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddr(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTime(value);\n      break;\n    case 3:\n      var value = new proto.ffs.rpc.RetrievalDealInfo;\n      reader.readMessage(value,proto.ffs.rpc.RetrievalDealInfo.deserializeBinaryFromReader);\n      msg.setDealInfo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.RetrievalDealRecord.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.RetrievalDealRecord.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.RetrievalDealRecord} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.RetrievalDealRecord.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getDealInfo();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.ffs.rpc.RetrievalDealInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string addr = 1;\n * @return {string}\n */\nproto.ffs.rpc.RetrievalDealRecord.prototype.getAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.RetrievalDealRecord} returns this\n */\nproto.ffs.rpc.RetrievalDealRecord.prototype.setAddr = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional int64 time = 2;\n * @return {number}\n */\nproto.ffs.rpc.RetrievalDealRecord.prototype.getTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.RetrievalDealRecord} returns this\n */\nproto.ffs.rpc.RetrievalDealRecord.prototype.setTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional RetrievalDealInfo deal_info = 3;\n * @return {?proto.ffs.rpc.RetrievalDealInfo}\n */\nproto.ffs.rpc.RetrievalDealRecord.prototype.getDealInfo = function() {\n  return /** @type{?proto.ffs.rpc.RetrievalDealInfo} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.RetrievalDealInfo, 3));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.RetrievalDealInfo|undefined} value\n * @return {!proto.ffs.rpc.RetrievalDealRecord} returns this\n*/\nproto.ffs.rpc.RetrievalDealRecord.prototype.setDealInfo = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.RetrievalDealRecord} returns this\n */\nproto.ffs.rpc.RetrievalDealRecord.prototype.clearDealInfo = function() {\n  return this.setDealInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.RetrievalDealRecord.prototype.hasDealInfo = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.CreateRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.CreateRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.CreateRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.CreateRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.CreateRequest}\n */\nproto.ffs.rpc.CreateRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.CreateRequest;\n  return proto.ffs.rpc.CreateRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.CreateRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.CreateRequest}\n */\nproto.ffs.rpc.CreateRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.CreateRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.CreateRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.CreateRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.CreateRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.CreateResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.CreateResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.CreateResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.CreateResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    token: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.CreateResponse}\n */\nproto.ffs.rpc.CreateResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.CreateResponse;\n  return proto.ffs.rpc.CreateResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.CreateResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.CreateResponse}\n */\nproto.ffs.rpc.CreateResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setToken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.CreateResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.CreateResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.CreateResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.CreateResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getToken();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.ffs.rpc.CreateResponse.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.CreateResponse} returns this\n */\nproto.ffs.rpc.CreateResponse.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string token = 2;\n * @return {string}\n */\nproto.ffs.rpc.CreateResponse.prototype.getToken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.CreateResponse} returns this\n */\nproto.ffs.rpc.CreateResponse.prototype.setToken = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.ListAPIRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.ListAPIRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.ListAPIRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ListAPIRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ListAPIRequest}\n */\nproto.ffs.rpc.ListAPIRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ListAPIRequest;\n  return proto.ffs.rpc.ListAPIRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ListAPIRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ListAPIRequest}\n */\nproto.ffs.rpc.ListAPIRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.ListAPIRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ListAPIRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ListAPIRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ListAPIRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ffs.rpc.ListAPIResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.ListAPIResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.ListAPIResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.ListAPIResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ListAPIResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    instancesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ListAPIResponse}\n */\nproto.ffs.rpc.ListAPIResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ListAPIResponse;\n  return proto.ffs.rpc.ListAPIResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ListAPIResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ListAPIResponse}\n */\nproto.ffs.rpc.ListAPIResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addInstances(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.ListAPIResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ListAPIResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ListAPIResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ListAPIResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInstancesList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated string instances = 1;\n * @return {!Array<string>}\n */\nproto.ffs.rpc.ListAPIResponse.prototype.getInstancesList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.ffs.rpc.ListAPIResponse} returns this\n */\nproto.ffs.rpc.ListAPIResponse.prototype.setInstancesList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.ListAPIResponse} returns this\n */\nproto.ffs.rpc.ListAPIResponse.prototype.addInstances = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.ListAPIResponse} returns this\n */\nproto.ffs.rpc.ListAPIResponse.prototype.clearInstancesList = function() {\n  return this.setInstancesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.IDRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.IDRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.IDRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.IDRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.IDRequest}\n */\nproto.ffs.rpc.IDRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.IDRequest;\n  return proto.ffs.rpc.IDRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.IDRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.IDRequest}\n */\nproto.ffs.rpc.IDRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.IDRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.IDRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.IDRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.IDRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.IDResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.IDResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.IDResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.IDResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.IDResponse}\n */\nproto.ffs.rpc.IDResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.IDResponse;\n  return proto.ffs.rpc.IDResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.IDResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.IDResponse}\n */\nproto.ffs.rpc.IDResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.IDResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.IDResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.IDResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.IDResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.ffs.rpc.IDResponse.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.IDResponse} returns this\n */\nproto.ffs.rpc.IDResponse.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.AddrsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.AddrsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.AddrsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.AddrsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.AddrsRequest}\n */\nproto.ffs.rpc.AddrsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.AddrsRequest;\n  return proto.ffs.rpc.AddrsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.AddrsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.AddrsRequest}\n */\nproto.ffs.rpc.AddrsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.AddrsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.AddrsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.AddrsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.AddrsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ffs.rpc.AddrsResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.AddrsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.AddrsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.AddrsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.AddrsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addrsList: jspb.Message.toObjectList(msg.getAddrsList(),\n    proto.ffs.rpc.AddrInfo.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.AddrsResponse}\n */\nproto.ffs.rpc.AddrsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.AddrsResponse;\n  return proto.ffs.rpc.AddrsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.AddrsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.AddrsResponse}\n */\nproto.ffs.rpc.AddrsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ffs.rpc.AddrInfo;\n      reader.readMessage(value,proto.ffs.rpc.AddrInfo.deserializeBinaryFromReader);\n      msg.addAddrs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.AddrsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.AddrsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.AddrsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.AddrsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddrsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.ffs.rpc.AddrInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated AddrInfo addrs = 1;\n * @return {!Array<!proto.ffs.rpc.AddrInfo>}\n */\nproto.ffs.rpc.AddrsResponse.prototype.getAddrsList = function() {\n  return /** @type{!Array<!proto.ffs.rpc.AddrInfo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.ffs.rpc.AddrInfo, 1));\n};\n\n\n/**\n * @param {!Array<!proto.ffs.rpc.AddrInfo>} value\n * @return {!proto.ffs.rpc.AddrsResponse} returns this\n*/\nproto.ffs.rpc.AddrsResponse.prototype.setAddrsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.ffs.rpc.AddrInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.AddrInfo}\n */\nproto.ffs.rpc.AddrsResponse.prototype.addAddrs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ffs.rpc.AddrInfo, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.AddrsResponse} returns this\n */\nproto.ffs.rpc.AddrsResponse.prototype.clearAddrsList = function() {\n  return this.setAddrsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.DefaultStorageConfigRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.DefaultStorageConfigRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.DefaultStorageConfigRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.DefaultStorageConfigRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.DefaultStorageConfigRequest}\n */\nproto.ffs.rpc.DefaultStorageConfigRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.DefaultStorageConfigRequest;\n  return proto.ffs.rpc.DefaultStorageConfigRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.DefaultStorageConfigRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.DefaultStorageConfigRequest}\n */\nproto.ffs.rpc.DefaultStorageConfigRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.DefaultStorageConfigRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.DefaultStorageConfigRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.DefaultStorageConfigRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.DefaultStorageConfigRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.DefaultStorageConfigResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.DefaultStorageConfigResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.DefaultStorageConfigResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.DefaultStorageConfigResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    defaultStorageConfig: (f = msg.getDefaultStorageConfig()) && proto.ffs.rpc.StorageConfig.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.DefaultStorageConfigResponse}\n */\nproto.ffs.rpc.DefaultStorageConfigResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.DefaultStorageConfigResponse;\n  return proto.ffs.rpc.DefaultStorageConfigResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.DefaultStorageConfigResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.DefaultStorageConfigResponse}\n */\nproto.ffs.rpc.DefaultStorageConfigResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ffs.rpc.StorageConfig;\n      reader.readMessage(value,proto.ffs.rpc.StorageConfig.deserializeBinaryFromReader);\n      msg.setDefaultStorageConfig(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.DefaultStorageConfigResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.DefaultStorageConfigResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.DefaultStorageConfigResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.DefaultStorageConfigResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDefaultStorageConfig();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.ffs.rpc.StorageConfig.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional StorageConfig default_storage_config = 1;\n * @return {?proto.ffs.rpc.StorageConfig}\n */\nproto.ffs.rpc.DefaultStorageConfigResponse.prototype.getDefaultStorageConfig = function() {\n  return /** @type{?proto.ffs.rpc.StorageConfig} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.StorageConfig, 1));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.StorageConfig|undefined} value\n * @return {!proto.ffs.rpc.DefaultStorageConfigResponse} returns this\n*/\nproto.ffs.rpc.DefaultStorageConfigResponse.prototype.setDefaultStorageConfig = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.DefaultStorageConfigResponse} returns this\n */\nproto.ffs.rpc.DefaultStorageConfigResponse.prototype.clearDefaultStorageConfig = function() {\n  return this.setDefaultStorageConfig(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.DefaultStorageConfigResponse.prototype.hasDefaultStorageConfig = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.NewAddrRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.NewAddrRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.NewAddrRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.NewAddrRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    addressType: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    makeDefault: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.NewAddrRequest}\n */\nproto.ffs.rpc.NewAddrRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.NewAddrRequest;\n  return proto.ffs.rpc.NewAddrRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.NewAddrRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.NewAddrRequest}\n */\nproto.ffs.rpc.NewAddrRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddressType(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setMakeDefault(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.NewAddrRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.NewAddrRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.NewAddrRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.NewAddrRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAddressType();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getMakeDefault();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.ffs.rpc.NewAddrRequest.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.NewAddrRequest} returns this\n */\nproto.ffs.rpc.NewAddrRequest.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string address_type = 2;\n * @return {string}\n */\nproto.ffs.rpc.NewAddrRequest.prototype.getAddressType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.NewAddrRequest} returns this\n */\nproto.ffs.rpc.NewAddrRequest.prototype.setAddressType = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bool make_default = 3;\n * @return {boolean}\n */\nproto.ffs.rpc.NewAddrRequest.prototype.getMakeDefault = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.NewAddrRequest} returns this\n */\nproto.ffs.rpc.NewAddrRequest.prototype.setMakeDefault = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.NewAddrResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.NewAddrResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.NewAddrResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.NewAddrResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addr: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.NewAddrResponse}\n */\nproto.ffs.rpc.NewAddrResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.NewAddrResponse;\n  return proto.ffs.rpc.NewAddrResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.NewAddrResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.NewAddrResponse}\n */\nproto.ffs.rpc.NewAddrResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddr(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.NewAddrResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.NewAddrResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.NewAddrResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.NewAddrResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string addr = 1;\n * @return {string}\n */\nproto.ffs.rpc.NewAddrResponse.prototype.getAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.NewAddrResponse} returns this\n */\nproto.ffs.rpc.NewAddrResponse.prototype.setAddr = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.GetStorageConfigRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.GetStorageConfigRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.GetStorageConfigRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.GetStorageConfigRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    cid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.GetStorageConfigRequest}\n */\nproto.ffs.rpc.GetStorageConfigRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.GetStorageConfigRequest;\n  return proto.ffs.rpc.GetStorageConfigRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.GetStorageConfigRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.GetStorageConfigRequest}\n */\nproto.ffs.rpc.GetStorageConfigRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.GetStorageConfigRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.GetStorageConfigRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.GetStorageConfigRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.GetStorageConfigRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string cid = 1;\n * @return {string}\n */\nproto.ffs.rpc.GetStorageConfigRequest.prototype.getCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.GetStorageConfigRequest} returns this\n */\nproto.ffs.rpc.GetStorageConfigRequest.prototype.setCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.GetStorageConfigResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.GetStorageConfigResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.GetStorageConfigResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.GetStorageConfigResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    config: (f = msg.getConfig()) && proto.ffs.rpc.StorageConfig.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.GetStorageConfigResponse}\n */\nproto.ffs.rpc.GetStorageConfigResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.GetStorageConfigResponse;\n  return proto.ffs.rpc.GetStorageConfigResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.GetStorageConfigResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.GetStorageConfigResponse}\n */\nproto.ffs.rpc.GetStorageConfigResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ffs.rpc.StorageConfig;\n      reader.readMessage(value,proto.ffs.rpc.StorageConfig.deserializeBinaryFromReader);\n      msg.setConfig(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.GetStorageConfigResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.GetStorageConfigResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.GetStorageConfigResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.GetStorageConfigResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getConfig();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.ffs.rpc.StorageConfig.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional StorageConfig config = 1;\n * @return {?proto.ffs.rpc.StorageConfig}\n */\nproto.ffs.rpc.GetStorageConfigResponse.prototype.getConfig = function() {\n  return /** @type{?proto.ffs.rpc.StorageConfig} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.StorageConfig, 1));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.StorageConfig|undefined} value\n * @return {!proto.ffs.rpc.GetStorageConfigResponse} returns this\n*/\nproto.ffs.rpc.GetStorageConfigResponse.prototype.setConfig = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.GetStorageConfigResponse} returns this\n */\nproto.ffs.rpc.GetStorageConfigResponse.prototype.clearConfig = function() {\n  return this.setConfig(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.GetStorageConfigResponse.prototype.hasConfig = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.SetDefaultStorageConfigRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.SetDefaultStorageConfigRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.SetDefaultStorageConfigRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.SetDefaultStorageConfigRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    config: (f = msg.getConfig()) && proto.ffs.rpc.StorageConfig.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.SetDefaultStorageConfigRequest}\n */\nproto.ffs.rpc.SetDefaultStorageConfigRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.SetDefaultStorageConfigRequest;\n  return proto.ffs.rpc.SetDefaultStorageConfigRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.SetDefaultStorageConfigRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.SetDefaultStorageConfigRequest}\n */\nproto.ffs.rpc.SetDefaultStorageConfigRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ffs.rpc.StorageConfig;\n      reader.readMessage(value,proto.ffs.rpc.StorageConfig.deserializeBinaryFromReader);\n      msg.setConfig(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.SetDefaultStorageConfigRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.SetDefaultStorageConfigRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.SetDefaultStorageConfigRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.SetDefaultStorageConfigRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getConfig();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.ffs.rpc.StorageConfig.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional StorageConfig config = 1;\n * @return {?proto.ffs.rpc.StorageConfig}\n */\nproto.ffs.rpc.SetDefaultStorageConfigRequest.prototype.getConfig = function() {\n  return /** @type{?proto.ffs.rpc.StorageConfig} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.StorageConfig, 1));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.StorageConfig|undefined} value\n * @return {!proto.ffs.rpc.SetDefaultStorageConfigRequest} returns this\n*/\nproto.ffs.rpc.SetDefaultStorageConfigRequest.prototype.setConfig = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.SetDefaultStorageConfigRequest} returns this\n */\nproto.ffs.rpc.SetDefaultStorageConfigRequest.prototype.clearConfig = function() {\n  return this.setConfig(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.SetDefaultStorageConfigRequest.prototype.hasConfig = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.SetDefaultStorageConfigResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.SetDefaultStorageConfigResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.SetDefaultStorageConfigResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.SetDefaultStorageConfigResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.SetDefaultStorageConfigResponse}\n */\nproto.ffs.rpc.SetDefaultStorageConfigResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.SetDefaultStorageConfigResponse;\n  return proto.ffs.rpc.SetDefaultStorageConfigResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.SetDefaultStorageConfigResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.SetDefaultStorageConfigResponse}\n */\nproto.ffs.rpc.SetDefaultStorageConfigResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.SetDefaultStorageConfigResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.SetDefaultStorageConfigResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.SetDefaultStorageConfigResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.SetDefaultStorageConfigResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.ShowRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.ShowRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.ShowRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ShowRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    cid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ShowRequest}\n */\nproto.ffs.rpc.ShowRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ShowRequest;\n  return proto.ffs.rpc.ShowRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ShowRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ShowRequest}\n */\nproto.ffs.rpc.ShowRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.ShowRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ShowRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ShowRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ShowRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string cid = 1;\n * @return {string}\n */\nproto.ffs.rpc.ShowRequest.prototype.getCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.ShowRequest} returns this\n */\nproto.ffs.rpc.ShowRequest.prototype.setCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.ShowResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.ShowResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.ShowResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ShowResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    cidInfo: (f = msg.getCidInfo()) && proto.ffs.rpc.CidInfo.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ShowResponse}\n */\nproto.ffs.rpc.ShowResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ShowResponse;\n  return proto.ffs.rpc.ShowResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ShowResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ShowResponse}\n */\nproto.ffs.rpc.ShowResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ffs.rpc.CidInfo;\n      reader.readMessage(value,proto.ffs.rpc.CidInfo.deserializeBinaryFromReader);\n      msg.setCidInfo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.ShowResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ShowResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ShowResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ShowResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCidInfo();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.ffs.rpc.CidInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional CidInfo cid_info = 1;\n * @return {?proto.ffs.rpc.CidInfo}\n */\nproto.ffs.rpc.ShowResponse.prototype.getCidInfo = function() {\n  return /** @type{?proto.ffs.rpc.CidInfo} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.CidInfo, 1));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.CidInfo|undefined} value\n * @return {!proto.ffs.rpc.ShowResponse} returns this\n*/\nproto.ffs.rpc.ShowResponse.prototype.setCidInfo = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.ShowResponse} returns this\n */\nproto.ffs.rpc.ShowResponse.prototype.clearCidInfo = function() {\n  return this.setCidInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.ShowResponse.prototype.hasCidInfo = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.InfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.InfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.InfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.InfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.InfoRequest}\n */\nproto.ffs.rpc.InfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.InfoRequest;\n  return proto.ffs.rpc.InfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.InfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.InfoRequest}\n */\nproto.ffs.rpc.InfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.InfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.InfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.InfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.InfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.InfoResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.InfoResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.InfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.InfoResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    info: (f = msg.getInfo()) && proto.ffs.rpc.InstanceInfo.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.InfoResponse}\n */\nproto.ffs.rpc.InfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.InfoResponse;\n  return proto.ffs.rpc.InfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.InfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.InfoResponse}\n */\nproto.ffs.rpc.InfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ffs.rpc.InstanceInfo;\n      reader.readMessage(value,proto.ffs.rpc.InstanceInfo.deserializeBinaryFromReader);\n      msg.setInfo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.InfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.InfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.InfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.InfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInfo();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.ffs.rpc.InstanceInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional InstanceInfo info = 1;\n * @return {?proto.ffs.rpc.InstanceInfo}\n */\nproto.ffs.rpc.InfoResponse.prototype.getInfo = function() {\n  return /** @type{?proto.ffs.rpc.InstanceInfo} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.InstanceInfo, 1));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.InstanceInfo|undefined} value\n * @return {!proto.ffs.rpc.InfoResponse} returns this\n*/\nproto.ffs.rpc.InfoResponse.prototype.setInfo = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.InfoResponse} returns this\n */\nproto.ffs.rpc.InfoResponse.prototype.clearInfo = function() {\n  return this.setInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.InfoResponse.prototype.hasInfo = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.CancelJobRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.CancelJobRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.CancelJobRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.CancelJobRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    jid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.CancelJobRequest}\n */\nproto.ffs.rpc.CancelJobRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.CancelJobRequest;\n  return proto.ffs.rpc.CancelJobRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.CancelJobRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.CancelJobRequest}\n */\nproto.ffs.rpc.CancelJobRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setJid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.CancelJobRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.CancelJobRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.CancelJobRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.CancelJobRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getJid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string jid = 1;\n * @return {string}\n */\nproto.ffs.rpc.CancelJobRequest.prototype.getJid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.CancelJobRequest} returns this\n */\nproto.ffs.rpc.CancelJobRequest.prototype.setJid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.CancelJobResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.CancelJobResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.CancelJobResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.CancelJobResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.CancelJobResponse}\n */\nproto.ffs.rpc.CancelJobResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.CancelJobResponse;\n  return proto.ffs.rpc.CancelJobResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.CancelJobResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.CancelJobResponse}\n */\nproto.ffs.rpc.CancelJobResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.CancelJobResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.CancelJobResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.CancelJobResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.CancelJobResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ffs.rpc.WatchJobsRequest.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.WatchJobsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.WatchJobsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.WatchJobsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.WatchJobsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    jidsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.WatchJobsRequest}\n */\nproto.ffs.rpc.WatchJobsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.WatchJobsRequest;\n  return proto.ffs.rpc.WatchJobsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.WatchJobsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.WatchJobsRequest}\n */\nproto.ffs.rpc.WatchJobsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addJids(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.WatchJobsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.WatchJobsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.WatchJobsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.WatchJobsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getJidsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated string jids = 1;\n * @return {!Array<string>}\n */\nproto.ffs.rpc.WatchJobsRequest.prototype.getJidsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.ffs.rpc.WatchJobsRequest} returns this\n */\nproto.ffs.rpc.WatchJobsRequest.prototype.setJidsList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.WatchJobsRequest} returns this\n */\nproto.ffs.rpc.WatchJobsRequest.prototype.addJids = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.WatchJobsRequest} returns this\n */\nproto.ffs.rpc.WatchJobsRequest.prototype.clearJidsList = function() {\n  return this.setJidsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.WatchJobsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.WatchJobsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.WatchJobsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.WatchJobsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    job: (f = msg.getJob()) && proto.ffs.rpc.Job.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.WatchJobsResponse}\n */\nproto.ffs.rpc.WatchJobsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.WatchJobsResponse;\n  return proto.ffs.rpc.WatchJobsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.WatchJobsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.WatchJobsResponse}\n */\nproto.ffs.rpc.WatchJobsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ffs.rpc.Job;\n      reader.readMessage(value,proto.ffs.rpc.Job.deserializeBinaryFromReader);\n      msg.setJob(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.WatchJobsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.WatchJobsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.WatchJobsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.WatchJobsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getJob();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.ffs.rpc.Job.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Job job = 1;\n * @return {?proto.ffs.rpc.Job}\n */\nproto.ffs.rpc.WatchJobsResponse.prototype.getJob = function() {\n  return /** @type{?proto.ffs.rpc.Job} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.Job, 1));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.Job|undefined} value\n * @return {!proto.ffs.rpc.WatchJobsResponse} returns this\n*/\nproto.ffs.rpc.WatchJobsResponse.prototype.setJob = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.WatchJobsResponse} returns this\n */\nproto.ffs.rpc.WatchJobsResponse.prototype.clearJob = function() {\n  return this.setJob(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.WatchJobsResponse.prototype.hasJob = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.WatchLogsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.WatchLogsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.WatchLogsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.WatchLogsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    cid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    jid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    history: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.WatchLogsRequest}\n */\nproto.ffs.rpc.WatchLogsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.WatchLogsRequest;\n  return proto.ffs.rpc.WatchLogsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.WatchLogsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.WatchLogsRequest}\n */\nproto.ffs.rpc.WatchLogsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setJid(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHistory(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.WatchLogsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.WatchLogsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.WatchLogsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.WatchLogsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getJid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getHistory();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string cid = 1;\n * @return {string}\n */\nproto.ffs.rpc.WatchLogsRequest.prototype.getCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.WatchLogsRequest} returns this\n */\nproto.ffs.rpc.WatchLogsRequest.prototype.setCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string jid = 2;\n * @return {string}\n */\nproto.ffs.rpc.WatchLogsRequest.prototype.getJid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.WatchLogsRequest} returns this\n */\nproto.ffs.rpc.WatchLogsRequest.prototype.setJid = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bool history = 3;\n * @return {boolean}\n */\nproto.ffs.rpc.WatchLogsRequest.prototype.getHistory = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.WatchLogsRequest} returns this\n */\nproto.ffs.rpc.WatchLogsRequest.prototype.setHistory = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.WatchLogsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.WatchLogsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.WatchLogsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.WatchLogsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    logEntry: (f = msg.getLogEntry()) && proto.ffs.rpc.LogEntry.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.WatchLogsResponse}\n */\nproto.ffs.rpc.WatchLogsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.WatchLogsResponse;\n  return proto.ffs.rpc.WatchLogsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.WatchLogsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.WatchLogsResponse}\n */\nproto.ffs.rpc.WatchLogsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ffs.rpc.LogEntry;\n      reader.readMessage(value,proto.ffs.rpc.LogEntry.deserializeBinaryFromReader);\n      msg.setLogEntry(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.WatchLogsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.WatchLogsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.WatchLogsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.WatchLogsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLogEntry();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.ffs.rpc.LogEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional LogEntry log_entry = 1;\n * @return {?proto.ffs.rpc.LogEntry}\n */\nproto.ffs.rpc.WatchLogsResponse.prototype.getLogEntry = function() {\n  return /** @type{?proto.ffs.rpc.LogEntry} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.LogEntry, 1));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.LogEntry|undefined} value\n * @return {!proto.ffs.rpc.WatchLogsResponse} returns this\n*/\nproto.ffs.rpc.WatchLogsResponse.prototype.setLogEntry = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.WatchLogsResponse} returns this\n */\nproto.ffs.rpc.WatchLogsResponse.prototype.clearLogEntry = function() {\n  return this.setLogEntry(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.WatchLogsResponse.prototype.hasLogEntry = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.ReplaceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.ReplaceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.ReplaceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ReplaceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    cid1: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    cid2: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ReplaceRequest}\n */\nproto.ffs.rpc.ReplaceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ReplaceRequest;\n  return proto.ffs.rpc.ReplaceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ReplaceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ReplaceRequest}\n */\nproto.ffs.rpc.ReplaceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCid1(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCid2(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.ReplaceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ReplaceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ReplaceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ReplaceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCid1();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCid2();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string cid1 = 1;\n * @return {string}\n */\nproto.ffs.rpc.ReplaceRequest.prototype.getCid1 = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.ReplaceRequest} returns this\n */\nproto.ffs.rpc.ReplaceRequest.prototype.setCid1 = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string cid2 = 2;\n * @return {string}\n */\nproto.ffs.rpc.ReplaceRequest.prototype.getCid2 = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.ReplaceRequest} returns this\n */\nproto.ffs.rpc.ReplaceRequest.prototype.setCid2 = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.ReplaceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.ReplaceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.ReplaceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ReplaceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    jobId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ReplaceResponse}\n */\nproto.ffs.rpc.ReplaceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ReplaceResponse;\n  return proto.ffs.rpc.ReplaceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ReplaceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ReplaceResponse}\n */\nproto.ffs.rpc.ReplaceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setJobId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.ReplaceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ReplaceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ReplaceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ReplaceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getJobId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string job_id = 1;\n * @return {string}\n */\nproto.ffs.rpc.ReplaceResponse.prototype.getJobId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.ReplaceResponse} returns this\n */\nproto.ffs.rpc.ReplaceResponse.prototype.setJobId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.PushStorageConfigRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.PushStorageConfigRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.PushStorageConfigRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.PushStorageConfigRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    cid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    config: (f = msg.getConfig()) && proto.ffs.rpc.StorageConfig.toObject(includeInstance, f),\n    hasConfig: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n    overrideConfig: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),\n    hasOverrideConfig: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.PushStorageConfigRequest}\n */\nproto.ffs.rpc.PushStorageConfigRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.PushStorageConfigRequest;\n  return proto.ffs.rpc.PushStorageConfigRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.PushStorageConfigRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.PushStorageConfigRequest}\n */\nproto.ffs.rpc.PushStorageConfigRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCid(value);\n      break;\n    case 2:\n      var value = new proto.ffs.rpc.StorageConfig;\n      reader.readMessage(value,proto.ffs.rpc.StorageConfig.deserializeBinaryFromReader);\n      msg.setConfig(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasConfig(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setOverrideConfig(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasOverrideConfig(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.PushStorageConfigRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.PushStorageConfigRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.PushStorageConfigRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.PushStorageConfigRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getConfig();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.ffs.rpc.StorageConfig.serializeBinaryToWriter\n    );\n  }\n  f = message.getHasConfig();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getOverrideConfig();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getHasOverrideConfig();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string cid = 1;\n * @return {string}\n */\nproto.ffs.rpc.PushStorageConfigRequest.prototype.getCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.PushStorageConfigRequest} returns this\n */\nproto.ffs.rpc.PushStorageConfigRequest.prototype.setCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional StorageConfig config = 2;\n * @return {?proto.ffs.rpc.StorageConfig}\n */\nproto.ffs.rpc.PushStorageConfigRequest.prototype.getConfig = function() {\n  return /** @type{?proto.ffs.rpc.StorageConfig} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.StorageConfig, 2));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.StorageConfig|undefined} value\n * @return {!proto.ffs.rpc.PushStorageConfigRequest} returns this\n*/\nproto.ffs.rpc.PushStorageConfigRequest.prototype.setConfig = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.PushStorageConfigRequest} returns this\n */\nproto.ffs.rpc.PushStorageConfigRequest.prototype.clearConfig = function() {\n  return this.setConfig(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.PushStorageConfigRequest.prototype.hasConfig = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bool has_config = 3;\n * @return {boolean}\n */\nproto.ffs.rpc.PushStorageConfigRequest.prototype.getHasConfig = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.PushStorageConfigRequest} returns this\n */\nproto.ffs.rpc.PushStorageConfigRequest.prototype.setHasConfig = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n/**\n * optional bool override_config = 4;\n * @return {boolean}\n */\nproto.ffs.rpc.PushStorageConfigRequest.prototype.getOverrideConfig = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.PushStorageConfigRequest} returns this\n */\nproto.ffs.rpc.PushStorageConfigRequest.prototype.setOverrideConfig = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n/**\n * optional bool has_override_config = 5;\n * @return {boolean}\n */\nproto.ffs.rpc.PushStorageConfigRequest.prototype.getHasOverrideConfig = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ffs.rpc.PushStorageConfigRequest} returns this\n */\nproto.ffs.rpc.PushStorageConfigRequest.prototype.setHasOverrideConfig = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.PushStorageConfigResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.PushStorageConfigResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.PushStorageConfigResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.PushStorageConfigResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    jobId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.PushStorageConfigResponse}\n */\nproto.ffs.rpc.PushStorageConfigResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.PushStorageConfigResponse;\n  return proto.ffs.rpc.PushStorageConfigResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.PushStorageConfigResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.PushStorageConfigResponse}\n */\nproto.ffs.rpc.PushStorageConfigResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setJobId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.PushStorageConfigResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.PushStorageConfigResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.PushStorageConfigResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.PushStorageConfigResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getJobId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string job_id = 1;\n * @return {string}\n */\nproto.ffs.rpc.PushStorageConfigResponse.prototype.getJobId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.PushStorageConfigResponse} returns this\n */\nproto.ffs.rpc.PushStorageConfigResponse.prototype.setJobId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.RemoveRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.RemoveRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.RemoveRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.RemoveRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    cid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.RemoveRequest}\n */\nproto.ffs.rpc.RemoveRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.RemoveRequest;\n  return proto.ffs.rpc.RemoveRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.RemoveRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.RemoveRequest}\n */\nproto.ffs.rpc.RemoveRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.RemoveRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.RemoveRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.RemoveRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.RemoveRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string cid = 1;\n * @return {string}\n */\nproto.ffs.rpc.RemoveRequest.prototype.getCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.RemoveRequest} returns this\n */\nproto.ffs.rpc.RemoveRequest.prototype.setCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.RemoveResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.RemoveResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.RemoveResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.RemoveResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.RemoveResponse}\n */\nproto.ffs.rpc.RemoveResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.RemoveResponse;\n  return proto.ffs.rpc.RemoveResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.RemoveResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.RemoveResponse}\n */\nproto.ffs.rpc.RemoveResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.RemoveResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.RemoveResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.RemoveResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.RemoveResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.GetRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.GetRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.GetRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.GetRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    cid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.GetRequest}\n */\nproto.ffs.rpc.GetRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.GetRequest;\n  return proto.ffs.rpc.GetRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.GetRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.GetRequest}\n */\nproto.ffs.rpc.GetRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.GetRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.GetRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.GetRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.GetRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string cid = 1;\n * @return {string}\n */\nproto.ffs.rpc.GetRequest.prototype.getCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.GetRequest} returns this\n */\nproto.ffs.rpc.GetRequest.prototype.setCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.GetResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.GetResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.GetResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.GetResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chunk: msg.getChunk_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.GetResponse}\n */\nproto.ffs.rpc.GetResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.GetResponse;\n  return proto.ffs.rpc.GetResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.GetResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.GetResponse}\n */\nproto.ffs.rpc.GetResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChunk(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.GetResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.GetResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.GetResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.GetResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChunk_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes chunk = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.ffs.rpc.GetResponse.prototype.getChunk = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes chunk = 1;\n * This is a type-conversion wrapper around `getChunk()`\n * @return {string}\n */\nproto.ffs.rpc.GetResponse.prototype.getChunk_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChunk()));\n};\n\n\n/**\n * optional bytes chunk = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChunk()`\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.GetResponse.prototype.getChunk_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChunk()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.ffs.rpc.GetResponse} returns this\n */\nproto.ffs.rpc.GetResponse.prototype.setChunk = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.SendFilRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.SendFilRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.SendFilRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.SendFilRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    from: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    to: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    amount: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.SendFilRequest}\n */\nproto.ffs.rpc.SendFilRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.SendFilRequest;\n  return proto.ffs.rpc.SendFilRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.SendFilRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.SendFilRequest}\n */\nproto.ffs.rpc.SendFilRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFrom(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTo(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.SendFilRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.SendFilRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.SendFilRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.SendFilRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrom();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getTo();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string from = 1;\n * @return {string}\n */\nproto.ffs.rpc.SendFilRequest.prototype.getFrom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.SendFilRequest} returns this\n */\nproto.ffs.rpc.SendFilRequest.prototype.setFrom = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string to = 2;\n * @return {string}\n */\nproto.ffs.rpc.SendFilRequest.prototype.getTo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.SendFilRequest} returns this\n */\nproto.ffs.rpc.SendFilRequest.prototype.setTo = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int64 amount = 3;\n * @return {number}\n */\nproto.ffs.rpc.SendFilRequest.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.SendFilRequest} returns this\n */\nproto.ffs.rpc.SendFilRequest.prototype.setAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.SendFilResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.SendFilResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.SendFilResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.SendFilResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.SendFilResponse}\n */\nproto.ffs.rpc.SendFilResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.SendFilResponse;\n  return proto.ffs.rpc.SendFilResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.SendFilResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.SendFilResponse}\n */\nproto.ffs.rpc.SendFilResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.SendFilResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.SendFilResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.SendFilResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.SendFilResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.StageRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.StageRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.StageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.StageRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chunk: msg.getChunk_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.StageRequest}\n */\nproto.ffs.rpc.StageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.StageRequest;\n  return proto.ffs.rpc.StageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.StageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.StageRequest}\n */\nproto.ffs.rpc.StageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChunk(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.StageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.StageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.StageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.StageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChunk_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes chunk = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.ffs.rpc.StageRequest.prototype.getChunk = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes chunk = 1;\n * This is a type-conversion wrapper around `getChunk()`\n * @return {string}\n */\nproto.ffs.rpc.StageRequest.prototype.getChunk_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChunk()));\n};\n\n\n/**\n * optional bytes chunk = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChunk()`\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.StageRequest.prototype.getChunk_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChunk()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.ffs.rpc.StageRequest} returns this\n */\nproto.ffs.rpc.StageRequest.prototype.setChunk = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.StageResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.StageResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.StageResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.StageResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    cid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.StageResponse}\n */\nproto.ffs.rpc.StageResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.StageResponse;\n  return proto.ffs.rpc.StageResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.StageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.StageResponse}\n */\nproto.ffs.rpc.StageResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.StageResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.StageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.StageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.StageResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string cid = 1;\n * @return {string}\n */\nproto.ffs.rpc.StageResponse.prototype.getCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.StageResponse} returns this\n */\nproto.ffs.rpc.StageResponse.prototype.setCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.ListPayChannelsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.ListPayChannelsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.ListPayChannelsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ListPayChannelsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ListPayChannelsRequest}\n */\nproto.ffs.rpc.ListPayChannelsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ListPayChannelsRequest;\n  return proto.ffs.rpc.ListPayChannelsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ListPayChannelsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ListPayChannelsRequest}\n */\nproto.ffs.rpc.ListPayChannelsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.ListPayChannelsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ListPayChannelsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ListPayChannelsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ListPayChannelsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ffs.rpc.ListPayChannelsResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.ListPayChannelsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.ListPayChannelsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.ListPayChannelsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ListPayChannelsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    payChannelsList: jspb.Message.toObjectList(msg.getPayChannelsList(),\n    proto.ffs.rpc.PaychInfo.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ListPayChannelsResponse}\n */\nproto.ffs.rpc.ListPayChannelsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ListPayChannelsResponse;\n  return proto.ffs.rpc.ListPayChannelsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ListPayChannelsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ListPayChannelsResponse}\n */\nproto.ffs.rpc.ListPayChannelsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ffs.rpc.PaychInfo;\n      reader.readMessage(value,proto.ffs.rpc.PaychInfo.deserializeBinaryFromReader);\n      msg.addPayChannels(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.ListPayChannelsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ListPayChannelsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ListPayChannelsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ListPayChannelsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPayChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.ffs.rpc.PaychInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated PaychInfo pay_channels = 1;\n * @return {!Array<!proto.ffs.rpc.PaychInfo>}\n */\nproto.ffs.rpc.ListPayChannelsResponse.prototype.getPayChannelsList = function() {\n  return /** @type{!Array<!proto.ffs.rpc.PaychInfo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.ffs.rpc.PaychInfo, 1));\n};\n\n\n/**\n * @param {!Array<!proto.ffs.rpc.PaychInfo>} value\n * @return {!proto.ffs.rpc.ListPayChannelsResponse} returns this\n*/\nproto.ffs.rpc.ListPayChannelsResponse.prototype.setPayChannelsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.ffs.rpc.PaychInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.PaychInfo}\n */\nproto.ffs.rpc.ListPayChannelsResponse.prototype.addPayChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ffs.rpc.PaychInfo, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.ListPayChannelsResponse} returns this\n */\nproto.ffs.rpc.ListPayChannelsResponse.prototype.clearPayChannelsList = function() {\n  return this.setPayChannelsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.CreatePayChannelRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.CreatePayChannelRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.CreatePayChannelRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.CreatePayChannelRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    from: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    to: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    amount: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.CreatePayChannelRequest}\n */\nproto.ffs.rpc.CreatePayChannelRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.CreatePayChannelRequest;\n  return proto.ffs.rpc.CreatePayChannelRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.CreatePayChannelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.CreatePayChannelRequest}\n */\nproto.ffs.rpc.CreatePayChannelRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFrom(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTo(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.CreatePayChannelRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.CreatePayChannelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.CreatePayChannelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.CreatePayChannelRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrom();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getTo();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string from = 1;\n * @return {string}\n */\nproto.ffs.rpc.CreatePayChannelRequest.prototype.getFrom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.CreatePayChannelRequest} returns this\n */\nproto.ffs.rpc.CreatePayChannelRequest.prototype.setFrom = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string to = 2;\n * @return {string}\n */\nproto.ffs.rpc.CreatePayChannelRequest.prototype.getTo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.CreatePayChannelRequest} returns this\n */\nproto.ffs.rpc.CreatePayChannelRequest.prototype.setTo = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional uint64 amount = 3;\n * @return {number}\n */\nproto.ffs.rpc.CreatePayChannelRequest.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ffs.rpc.CreatePayChannelRequest} returns this\n */\nproto.ffs.rpc.CreatePayChannelRequest.prototype.setAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.CreatePayChannelResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.CreatePayChannelResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.CreatePayChannelResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.CreatePayChannelResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    payChannel: (f = msg.getPayChannel()) && proto.ffs.rpc.PaychInfo.toObject(includeInstance, f),\n    channelMessageCid: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.CreatePayChannelResponse}\n */\nproto.ffs.rpc.CreatePayChannelResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.CreatePayChannelResponse;\n  return proto.ffs.rpc.CreatePayChannelResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.CreatePayChannelResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.CreatePayChannelResponse}\n */\nproto.ffs.rpc.CreatePayChannelResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ffs.rpc.PaychInfo;\n      reader.readMessage(value,proto.ffs.rpc.PaychInfo.deserializeBinaryFromReader);\n      msg.setPayChannel(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelMessageCid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.CreatePayChannelResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.CreatePayChannelResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.CreatePayChannelResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.CreatePayChannelResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPayChannel();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.ffs.rpc.PaychInfo.serializeBinaryToWriter\n    );\n  }\n  f = message.getChannelMessageCid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional PaychInfo pay_channel = 1;\n * @return {?proto.ffs.rpc.PaychInfo}\n */\nproto.ffs.rpc.CreatePayChannelResponse.prototype.getPayChannel = function() {\n  return /** @type{?proto.ffs.rpc.PaychInfo} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.PaychInfo, 1));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.PaychInfo|undefined} value\n * @return {!proto.ffs.rpc.CreatePayChannelResponse} returns this\n*/\nproto.ffs.rpc.CreatePayChannelResponse.prototype.setPayChannel = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.CreatePayChannelResponse} returns this\n */\nproto.ffs.rpc.CreatePayChannelResponse.prototype.clearPayChannel = function() {\n  return this.setPayChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.CreatePayChannelResponse.prototype.hasPayChannel = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string channel_message_cid = 2;\n * @return {string}\n */\nproto.ffs.rpc.CreatePayChannelResponse.prototype.getChannelMessageCid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.CreatePayChannelResponse} returns this\n */\nproto.ffs.rpc.CreatePayChannelResponse.prototype.setChannelMessageCid = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.RedeemPayChannelRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.RedeemPayChannelRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.RedeemPayChannelRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.RedeemPayChannelRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    payChannelAddr: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.RedeemPayChannelRequest}\n */\nproto.ffs.rpc.RedeemPayChannelRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.RedeemPayChannelRequest;\n  return proto.ffs.rpc.RedeemPayChannelRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.RedeemPayChannelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.RedeemPayChannelRequest}\n */\nproto.ffs.rpc.RedeemPayChannelRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayChannelAddr(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.RedeemPayChannelRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.RedeemPayChannelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.RedeemPayChannelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.RedeemPayChannelRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPayChannelAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pay_channel_addr = 1;\n * @return {string}\n */\nproto.ffs.rpc.RedeemPayChannelRequest.prototype.getPayChannelAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ffs.rpc.RedeemPayChannelRequest} returns this\n */\nproto.ffs.rpc.RedeemPayChannelRequest.prototype.setPayChannelAddr = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.RedeemPayChannelResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.RedeemPayChannelResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.RedeemPayChannelResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.RedeemPayChannelResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.RedeemPayChannelResponse}\n */\nproto.ffs.rpc.RedeemPayChannelResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.RedeemPayChannelResponse;\n  return proto.ffs.rpc.RedeemPayChannelResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.RedeemPayChannelResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.RedeemPayChannelResponse}\n */\nproto.ffs.rpc.RedeemPayChannelResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.RedeemPayChannelResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.RedeemPayChannelResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.RedeemPayChannelResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.RedeemPayChannelResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.ListStorageDealRecordsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.ListStorageDealRecordsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.ListStorageDealRecordsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ListStorageDealRecordsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    config: (f = msg.getConfig()) && proto.ffs.rpc.ListDealRecordsConfig.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ListStorageDealRecordsRequest}\n */\nproto.ffs.rpc.ListStorageDealRecordsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ListStorageDealRecordsRequest;\n  return proto.ffs.rpc.ListStorageDealRecordsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ListStorageDealRecordsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ListStorageDealRecordsRequest}\n */\nproto.ffs.rpc.ListStorageDealRecordsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ffs.rpc.ListDealRecordsConfig;\n      reader.readMessage(value,proto.ffs.rpc.ListDealRecordsConfig.deserializeBinaryFromReader);\n      msg.setConfig(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.ListStorageDealRecordsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ListStorageDealRecordsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ListStorageDealRecordsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ListStorageDealRecordsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getConfig();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.ffs.rpc.ListDealRecordsConfig.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ListDealRecordsConfig config = 1;\n * @return {?proto.ffs.rpc.ListDealRecordsConfig}\n */\nproto.ffs.rpc.ListStorageDealRecordsRequest.prototype.getConfig = function() {\n  return /** @type{?proto.ffs.rpc.ListDealRecordsConfig} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.ListDealRecordsConfig, 1));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.ListDealRecordsConfig|undefined} value\n * @return {!proto.ffs.rpc.ListStorageDealRecordsRequest} returns this\n*/\nproto.ffs.rpc.ListStorageDealRecordsRequest.prototype.setConfig = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.ListStorageDealRecordsRequest} returns this\n */\nproto.ffs.rpc.ListStorageDealRecordsRequest.prototype.clearConfig = function() {\n  return this.setConfig(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.ListStorageDealRecordsRequest.prototype.hasConfig = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ffs.rpc.ListStorageDealRecordsResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.ListStorageDealRecordsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.ListStorageDealRecordsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.ListStorageDealRecordsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ListStorageDealRecordsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),\n    proto.ffs.rpc.StorageDealRecord.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ListStorageDealRecordsResponse}\n */\nproto.ffs.rpc.ListStorageDealRecordsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ListStorageDealRecordsResponse;\n  return proto.ffs.rpc.ListStorageDealRecordsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ListStorageDealRecordsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ListStorageDealRecordsResponse}\n */\nproto.ffs.rpc.ListStorageDealRecordsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ffs.rpc.StorageDealRecord;\n      reader.readMessage(value,proto.ffs.rpc.StorageDealRecord.deserializeBinaryFromReader);\n      msg.addRecords(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.ListStorageDealRecordsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ListStorageDealRecordsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ListStorageDealRecordsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ListStorageDealRecordsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRecordsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.ffs.rpc.StorageDealRecord.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated StorageDealRecord records = 1;\n * @return {!Array<!proto.ffs.rpc.StorageDealRecord>}\n */\nproto.ffs.rpc.ListStorageDealRecordsResponse.prototype.getRecordsList = function() {\n  return /** @type{!Array<!proto.ffs.rpc.StorageDealRecord>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.ffs.rpc.StorageDealRecord, 1));\n};\n\n\n/**\n * @param {!Array<!proto.ffs.rpc.StorageDealRecord>} value\n * @return {!proto.ffs.rpc.ListStorageDealRecordsResponse} returns this\n*/\nproto.ffs.rpc.ListStorageDealRecordsResponse.prototype.setRecordsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.ffs.rpc.StorageDealRecord=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.StorageDealRecord}\n */\nproto.ffs.rpc.ListStorageDealRecordsResponse.prototype.addRecords = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ffs.rpc.StorageDealRecord, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.ListStorageDealRecordsResponse} returns this\n */\nproto.ffs.rpc.ListStorageDealRecordsResponse.prototype.clearRecordsList = function() {\n  return this.setRecordsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.ListRetrievalDealRecordsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.ListRetrievalDealRecordsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.ListRetrievalDealRecordsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ListRetrievalDealRecordsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    config: (f = msg.getConfig()) && proto.ffs.rpc.ListDealRecordsConfig.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ListRetrievalDealRecordsRequest}\n */\nproto.ffs.rpc.ListRetrievalDealRecordsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ListRetrievalDealRecordsRequest;\n  return proto.ffs.rpc.ListRetrievalDealRecordsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ListRetrievalDealRecordsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ListRetrievalDealRecordsRequest}\n */\nproto.ffs.rpc.ListRetrievalDealRecordsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ffs.rpc.ListDealRecordsConfig;\n      reader.readMessage(value,proto.ffs.rpc.ListDealRecordsConfig.deserializeBinaryFromReader);\n      msg.setConfig(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.ListRetrievalDealRecordsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ListRetrievalDealRecordsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ListRetrievalDealRecordsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ListRetrievalDealRecordsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getConfig();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.ffs.rpc.ListDealRecordsConfig.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ListDealRecordsConfig config = 1;\n * @return {?proto.ffs.rpc.ListDealRecordsConfig}\n */\nproto.ffs.rpc.ListRetrievalDealRecordsRequest.prototype.getConfig = function() {\n  return /** @type{?proto.ffs.rpc.ListDealRecordsConfig} */ (\n    jspb.Message.getWrapperField(this, proto.ffs.rpc.ListDealRecordsConfig, 1));\n};\n\n\n/**\n * @param {?proto.ffs.rpc.ListDealRecordsConfig|undefined} value\n * @return {!proto.ffs.rpc.ListRetrievalDealRecordsRequest} returns this\n*/\nproto.ffs.rpc.ListRetrievalDealRecordsRequest.prototype.setConfig = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ffs.rpc.ListRetrievalDealRecordsRequest} returns this\n */\nproto.ffs.rpc.ListRetrievalDealRecordsRequest.prototype.clearConfig = function() {\n  return this.setConfig(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ffs.rpc.ListRetrievalDealRecordsRequest.prototype.hasConfig = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.ListRetrievalDealRecordsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.ListRetrievalDealRecordsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),\n    proto.ffs.rpc.RetrievalDealRecord.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ListRetrievalDealRecordsResponse}\n */\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ListRetrievalDealRecordsResponse;\n  return proto.ffs.rpc.ListRetrievalDealRecordsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ListRetrievalDealRecordsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ListRetrievalDealRecordsResponse}\n */\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ffs.rpc.RetrievalDealRecord;\n      reader.readMessage(value,proto.ffs.rpc.RetrievalDealRecord.deserializeBinaryFromReader);\n      msg.addRecords(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ListRetrievalDealRecordsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ListRetrievalDealRecordsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRecordsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.ffs.rpc.RetrievalDealRecord.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated RetrievalDealRecord records = 1;\n * @return {!Array<!proto.ffs.rpc.RetrievalDealRecord>}\n */\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.prototype.getRecordsList = function() {\n  return /** @type{!Array<!proto.ffs.rpc.RetrievalDealRecord>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.ffs.rpc.RetrievalDealRecord, 1));\n};\n\n\n/**\n * @param {!Array<!proto.ffs.rpc.RetrievalDealRecord>} value\n * @return {!proto.ffs.rpc.ListRetrievalDealRecordsResponse} returns this\n*/\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.prototype.setRecordsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.ffs.rpc.RetrievalDealRecord=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.RetrievalDealRecord}\n */\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.prototype.addRecords = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ffs.rpc.RetrievalDealRecord, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.ListRetrievalDealRecordsResponse} returns this\n */\nproto.ffs.rpc.ListRetrievalDealRecordsResponse.prototype.clearRecordsList = function() {\n  return this.setRecordsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.ShowAllRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.ShowAllRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.ShowAllRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ShowAllRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ShowAllRequest}\n */\nproto.ffs.rpc.ShowAllRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ShowAllRequest;\n  return proto.ffs.rpc.ShowAllRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ShowAllRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ShowAllRequest}\n */\nproto.ffs.rpc.ShowAllRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.ShowAllRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ShowAllRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ShowAllRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ShowAllRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ffs.rpc.ShowAllResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ffs.rpc.ShowAllResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ffs.rpc.ShowAllResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ffs.rpc.ShowAllResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ShowAllResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    cidInfosList: jspb.Message.toObjectList(msg.getCidInfosList(),\n    proto.ffs.rpc.CidInfo.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ffs.rpc.ShowAllResponse}\n */\nproto.ffs.rpc.ShowAllResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ffs.rpc.ShowAllResponse;\n  return proto.ffs.rpc.ShowAllResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ffs.rpc.ShowAllResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ffs.rpc.ShowAllResponse}\n */\nproto.ffs.rpc.ShowAllResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ffs.rpc.CidInfo;\n      reader.readMessage(value,proto.ffs.rpc.CidInfo.deserializeBinaryFromReader);\n      msg.addCidInfos(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ffs.rpc.ShowAllResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ffs.rpc.ShowAllResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ffs.rpc.ShowAllResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ffs.rpc.ShowAllResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCidInfosList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.ffs.rpc.CidInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated CidInfo cid_infos = 1;\n * @return {!Array<!proto.ffs.rpc.CidInfo>}\n */\nproto.ffs.rpc.ShowAllResponse.prototype.getCidInfosList = function() {\n  return /** @type{!Array<!proto.ffs.rpc.CidInfo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.ffs.rpc.CidInfo, 1));\n};\n\n\n/**\n * @param {!Array<!proto.ffs.rpc.CidInfo>} value\n * @return {!proto.ffs.rpc.ShowAllResponse} returns this\n*/\nproto.ffs.rpc.ShowAllResponse.prototype.setCidInfosList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.ffs.rpc.CidInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ffs.rpc.CidInfo}\n */\nproto.ffs.rpc.ShowAllResponse.prototype.addCidInfos = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ffs.rpc.CidInfo, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ffs.rpc.ShowAllResponse} returns this\n */\nproto.ffs.rpc.ShowAllResponse.prototype.clearCidInfosList = function() {\n  return this.setCidInfosList([]);\n};\n\n\n/**\n * @enum {number}\n */\nproto.ffs.rpc.JobStatus = {\n  JOB_STATUS_UNSPECIFIED: 0,\n  JOB_STATUS_QUEUED: 1,\n  JOB_STATUS_EXECUTING: 2,\n  JOB_STATUS_FAILED: 3,\n  JOB_STATUS_CANCELED: 4,\n  JOB_STATUS_SUCCESS: 5\n};\n\n/**\n * @enum {number}\n */\nproto.ffs.rpc.Direction = {\n  DIRECTION_UNSPECIFIED: 0,\n  DIRECTION_INBOUND: 1,\n  DIRECTION_OUTBOUND: 2\n};\n\ngoog.object.extend(exports, proto.ffs.rpc);\n"]},"metadata":{},"sourceType":"script"}