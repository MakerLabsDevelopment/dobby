{"ast":null,"code":"var _jsxFileName = \"/Users/nassarhayat/apps/textiletable/sushitable/src/App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { PrivateKey, Client, ThreadID } from '@textile/hub';\nimport { Header, Segment } from \"semantic-ui-react\";\nimport Table from './Table';\nimport \"semantic-ui-css/semantic.min.css\";\nimport './App.css';\n\nconst App = () => {\n  const [client, setClient] = useState();\n  const [threadId, setThreadId] = useState();\n  const [name, setName] = useState();\n  const [table, showTable] = useState(false);\n  useEffect(() => {\n    const setup = async () => {\n      const keyInfo = {\n        key: 'bs3g66aciasarrm46kosxap74te'\n      };\n      const newIdentity = await getIdentity();\n      const client = await Client.withKeyInfo(keyInfo);\n      await client.getToken(newIdentity);\n      setClient(client); // console.log('LLL', await client.listThreads())\n      // console.log('DDDBBB', await client.getDBInfo(ThreadID.fromString(\"bafkypcdo2yzg7ydabdfp5op364htx6oratoobmivkkql6z3ii4lqkry\")))\n      // const threadId = await client.newDB()\n\n      const threadId = ThreadID.fromString(\"bafkypcdo2yzg7ydabdfp5op364htx6oratoobmivkkql6z3ii4lqkry\");\n      setThreadId(threadId);\n    };\n\n    setup();\n  }, []);\n\n  const getIdentity = async () => {\n    try {\n      var storedIdent = localStorage.getItem(\"identity\");\n\n      if (storedIdent === null) {\n        throw new Error('No identity');\n      }\n\n      const restored = PrivateKey.fromString(storedIdent);\n      return restored;\n    } catch (e) {\n      try {\n        const identity = PrivateKey.fromRandom();\n        const identityString = identity.toString();\n        localStorage.setItem(\"identity\", identityString);\n        return identity;\n      } catch (err) {\n        return err.message;\n      }\n    }\n  };\n\n  const selectExisting = name => {\n    setName(name);\n    showTable(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Segment.Group, {\n    style: {\n      height: \"100%\",\n      border: 0,\n      boxShadow: \"0px 0px 0px\",\n      borderRadius: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    clearing: true,\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    className: \"avatar\",\n    as: \"h2\",\n    floated: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"|\", /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-label\": \"4.0 stars out of 5, 123 ratings\",\n    role: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }\n  }, \"\\uD83C\\uDF63\"), \"|\", /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-label\": \"4.0 stars out of 5, 123 ratings\",\n    role: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }\n  }, \"\\uD83C\\uDF63\"), \"|\"))), !table && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => selectExisting('Astronaut'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Table: Astronaut\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => showTable(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"submit\")), threadId && client && table && /*#__PURE__*/React.createElement(Table, {\n    threadId: threadId,\n    client: client,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/nassarhayat/apps/textiletable/sushitable/src/App.tsx"],"names":["React","useState","useEffect","PrivateKey","Client","ThreadID","Header","Segment","Table","App","client","setClient","threadId","setThreadId","name","setName","table","showTable","setup","keyInfo","key","newIdentity","getIdentity","withKeyInfo","getToken","fromString","storedIdent","localStorage","getItem","Error","restored","e","identity","fromRandom","identityString","toString","setItem","err","message","selectExisting","height","border","boxShadow","borderRadius","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { PrivateKey, Client, ThreadID } from '@textile/hub'\nimport { Header, Segment } from \"semantic-ui-react\"\n\nimport Table from './Table'\n\nimport \"semantic-ui-css/semantic.min.css\"\nimport './App.css'\n\nconst App = () => {\n  const [client, setClient] = useState<Client>()\n  const [threadId, setThreadId] = useState<ThreadID>()\n  const [name, setName] = useState<string>()\n  const [table, showTable] = useState<boolean>(false)\n\n  useEffect(() => {\n    const setup = async () => {\n      const keyInfo = { key: 'bs3g66aciasarrm46kosxap74te' }\n      const newIdentity = await getIdentity()\n\n      const client = await Client.withKeyInfo(keyInfo)\n      await client.getToken(newIdentity)\n      setClient(client)\n      // console.log('LLL', await client.listThreads())\n      // console.log('DDDBBB', await client.getDBInfo(ThreadID.fromString(\"bafkypcdo2yzg7ydabdfp5op364htx6oratoobmivkkql6z3ii4lqkry\")))\n      // const threadId = await client.newDB()\n      const threadId = ThreadID.fromString(\"bafkypcdo2yzg7ydabdfp5op364htx6oratoobmivkkql6z3ii4lqkry\")\n      setThreadId(threadId)\n    }\n    setup()\n  }, [])\n\n\n  const getIdentity = async (): Promise<PrivateKey> => {\n    try {\n      var storedIdent = localStorage.getItem(\"identity\")\n      if (storedIdent === null) {\n        throw new Error('No identity')\n      }\n      const restored = PrivateKey.fromString(storedIdent)\n      return restored\n    }\n    catch (e) {\n      try {\n        const identity = PrivateKey.fromRandom()\n        const identityString = identity.toString()\n        localStorage.setItem(\"identity\", identityString)\n        return identity\n      } catch (err) {\n        return err.message\n      }\n    }\n  }\n\n  const selectExisting = (name: string) => {\n    setName(name)\n    showTable(true)\n  }\n\n  return (\n    <div className=\"App\">\n      <Segment.Group style={{ height: \"100%\", border: 0, boxShadow: \"0px 0px 0px\", borderRadius: 0 }}>\n        <Segment clearing className=\"nav\">\n          <Header className=\"avatar\" as=\"h2\" floated=\"left\">\n            <div className=\"avatar\">\n              |<span aria-label=\"4.0 stars out of 5, 123 ratings\" role=\"img\">🍣</span>\n              |<span aria-label=\"4.0 stars out of 5, 123 ratings\" role=\"img\">🍣</span>|\n            </div>\n          </Header>\n        </Segment>\n        {!table && (\n          <div>\n            <div onClick={() => selectExisting('Astronaut')}>Table: Astronaut</div>\n            <input type='text' value={name} onChange={e => setName(e.target.value)}/>\n            <div onClick={() => showTable(true)}>submit</div>\n          </div>\n        )}\n        {threadId && client && table && (\n          <Table threadId={threadId} client={client} name={name}/>\n        )}\n      </Segment.Group>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}