{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.protocols = void 0;\nconst V = -1;\nconst _table = [[4, 32, \"ip4\"], [6, 16, \"tcp\"], [33, 16, \"dccp\"], [41, 128, \"ip6\"], [42, V, \"ip6zone\"], [53, V, \"dns\", true], [54, V, \"dns4\", true], [55, V, \"dns6\", true], [56, V, \"dnsaddr\", true], [132, 16, \"sctp\"], [273, 16, \"udp\"], [275, 0, \"p2p-webrtc-star\"], [276, 0, \"p2p-webrtc-direct\"], [277, 0, \"p2p-stardust\"], [290, 0, \"p2p-circuit\"], [301, 0, \"udt\"], [302, 0, \"utp\"], [400, V, \"unix\", false, \"path\"], [406, V, \"thread\"], // `ipfs` is added before `p2p` for legacy support.\n// All text representations will default to `p2p`, but `ipfs` will\n// still be supported\n[421, V, \"ipfs\"], // `p2p` is the preferred name for 421, and is now the default\n[421, V, \"p2p\"], [443, 0, \"https\"], [444, 96, \"onion\"], [445, 296, \"onion3\"], [446, V, \"garlic64\"], [460, 0, \"quic\"], [477, 0, \"ws\"], [478, 0, \"wss\"], [479, 0, \"p2p-websocket-star\"], [480, 0, \"http\"]];\n\nfunction p([code, size, name, resolvable, path]) {\n  return {\n    code: code,\n    size: size,\n    name: name,\n    resolvable: Boolean(resolvable),\n    path: Boolean(path)\n  };\n}\n\nconst _names = {};\nconst _codes = {}; // populate tables\n\n_table.forEach(row => {\n  const proto = p(row);\n  _codes[proto.code] = proto;\n  _names[proto.name] = proto;\n});\n\nfunction Protocols(proto) {\n  if (typeof proto === \"number\") {\n    if (Protocols.codes[proto]) {\n      return Protocols.codes[proto];\n    }\n\n    throw new Error(\"no protocol with code: \" + proto);\n  } else if (typeof proto === \"string\" || proto instanceof String) {\n    if (Protocols.names[proto]) {\n      return Protocols.names[proto];\n    }\n\n    throw new Error(\"no protocol with name: \" + proto);\n  }\n\n  throw new Error(\"invalid protocol id type: \" + proto);\n}\n\nexports.protocols = Protocols; // eslint-disable-next-line @typescript-eslint/no-namespace\n\n(function (Protocols) {\n  Protocols.V = -1;\n  Protocols.lengthPrefixedVarSize = Protocols.V;\n  Protocols.table = _table;\n  Protocols.codes = _codes;\n  Protocols.names = _names;\n  Protocols.object = p;\n})(Protocols || (Protocols = {}));\n\nexports.protocols = Protocols;","map":{"version":3,"sources":["../src/protocols.ts"],"names":[],"mappings":";;;;;;AAAA,MAAM,CAAC,GAAG,CAAC,CAAX;AAIA,MAAM,MAAM,GAAe,CACzB,CAAC,CAAD,EAAI,EAAJ,EAAQ,KAAR,CADyB,EAEzB,CAAC,CAAD,EAAI,EAAJ,EAAQ,KAAR,CAFyB,EAGzB,CAAC,EAAD,EAAK,EAAL,EAAS,MAAT,CAHyB,EAIzB,CAAC,EAAD,EAAK,GAAL,EAAU,KAAV,CAJyB,EAKzB,CAAC,EAAD,EAAK,CAAL,EAAQ,SAAR,CALyB,EAMzB,CAAC,EAAD,EAAK,CAAL,EAAQ,KAAR,EAAe,IAAf,CANyB,EAOzB,CAAC,EAAD,EAAK,CAAL,EAAQ,MAAR,EAAgB,IAAhB,CAPyB,EAQzB,CAAC,EAAD,EAAK,CAAL,EAAQ,MAAR,EAAgB,IAAhB,CARyB,EASzB,CAAC,EAAD,EAAK,CAAL,EAAQ,SAAR,EAAmB,IAAnB,CATyB,EAUzB,CAAC,GAAD,EAAM,EAAN,EAAU,MAAV,CAVyB,EAWzB,CAAC,GAAD,EAAM,EAAN,EAAU,KAAV,CAXyB,EAYzB,CAAC,GAAD,EAAM,CAAN,EAAS,iBAAT,CAZyB,EAazB,CAAC,GAAD,EAAM,CAAN,EAAS,mBAAT,CAbyB,EAczB,CAAC,GAAD,EAAM,CAAN,EAAS,cAAT,CAdyB,EAezB,CAAC,GAAD,EAAM,CAAN,EAAS,aAAT,CAfyB,EAgBzB,CAAC,GAAD,EAAM,CAAN,EAAS,KAAT,CAhByB,EAiBzB,CAAC,GAAD,EAAM,CAAN,EAAS,KAAT,CAjByB,EAkBzB,CAAC,GAAD,EAAM,CAAN,EAAS,MAAT,EAAiB,KAAjB,EAAwB,MAAxB,CAlByB,EAmBzB,CAAC,GAAD,EAAM,CAAN,EAAS,QAAT,CAnByB,EAoBzB;AACA;AACA;AACA,CAAC,GAAD,EAAM,CAAN,EAAS,MAAT,CAvByB,EAwBzB;AACA,CAAC,GAAD,EAAM,CAAN,EAAS,KAAT,CAzByB,EA0BzB,CAAC,GAAD,EAAM,CAAN,EAAS,OAAT,CA1ByB,EA2BzB,CAAC,GAAD,EAAM,EAAN,EAAU,OAAV,CA3ByB,EA4BzB,CAAC,GAAD,EAAM,GAAN,EAAW,QAAX,CA5ByB,EA6BzB,CAAC,GAAD,EAAM,CAAN,EAAS,UAAT,CA7ByB,EA8BzB,CAAC,GAAD,EAAM,CAAN,EAAS,MAAT,CA9ByB,EA+BzB,CAAC,GAAD,EAAM,CAAN,EAAS,IAAT,CA/ByB,EAgCzB,CAAC,GAAD,EAAM,CAAN,EAAS,KAAT,CAhCyB,EAiCzB,CAAC,GAAD,EAAM,CAAN,EAAS,oBAAT,CAjCyB,EAkCzB,CAAC,GAAD,EAAM,CAAN,EAAS,MAAT,CAlCyB,CAA3B;;AA6CA,SAAS,CAAT,CAAW,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,UAAnB,EAA+B,IAA/B,CAAX,EAAyD;AACvD,SAAO;AACL,IAAA,IAAI,EAAE,IADD;AAEL,IAAA,IAAI,EAAE,IAFD;AAGL,IAAA,IAAI,EAAE,IAHD;AAIL,IAAA,UAAU,EAAE,OAAO,CAAC,UAAD,CAJd;AAKL,IAAA,IAAI,EAAE,OAAO,CAAC,IAAD;AALR,GAAP;AAOD;;AAED,MAAM,MAAM,GAA6B,EAAzC;AACA,MAAM,MAAM,GAA6B,EAAzC,C,CAEA;;AACA,MAAM,CAAC,OAAP,CAAgB,GAAD,IAAQ;AACrB,QAAM,KAAK,GAAG,CAAC,CAAC,GAAD,CAAf;AACA,EAAA,MAAM,CAAC,KAAK,CAAC,IAAP,CAAN,GAAqB,KAArB;AACA,EAAA,MAAM,CAAC,KAAK,CAAC,IAAP,CAAN,GAAqB,KAArB;AACD,CAJD;;AAMA,SAAS,SAAT,CAAmB,KAAnB,EAAyC;AACvC,MAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC7B,QAAI,SAAS,CAAC,KAAV,CAAgB,KAAhB,CAAJ,EAA4B;AAC1B,aAAO,SAAS,CAAC,KAAV,CAAgB,KAAhB,CAAP;AACD;;AAED,UAAM,IAAI,KAAJ,CAAU,4BAA4B,KAAtC,CAAN;AACD,GAND,MAMO,IAAI,OAAO,KAAP,KAAiB,QAAjB,IAA8B,KAAa,YAAY,MAA3D,EAAmE;AACxE,QAAI,SAAS,CAAC,KAAV,CAAgB,KAAhB,CAAJ,EAA4B;AAC1B,aAAO,SAAS,CAAC,KAAV,CAAgB,KAAhB,CAAP;AACD;;AAED,UAAM,IAAI,KAAJ,CAAU,4BAA4B,KAAtC,CAAN;AACD;;AAED,QAAM,IAAI,KAAJ,CAAU,+BAA+B,KAAzC,CAAN;AACD;;AAYqB,OAAA,CAAA,SAAA,GAAA,SAAA,C,CAVtB;;AACA,CAAA,UAAU,SAAV,EAAmB;AACJ,EAAA,SAAA,CAAA,CAAA,GAAI,CAAC,CAAL;AACA,EAAA,SAAA,CAAA,qBAAA,GAAwB,SAAA,CAAA,CAAxB;AACA,EAAA,SAAA,CAAA,KAAA,GAAQ,MAAR;AACA,EAAA,SAAA,CAAA,KAAA,GAAQ,MAAR;AACA,EAAA,SAAA,CAAA,KAAA,GAAQ,MAAR;AACA,EAAA,SAAA,CAAA,MAAA,GAAS,CAAT;AACd,CAPD,EAAU,SAAS,KAAT,SAAS,GAAA,EAAA,CAAnB;;AASsB,OAAA,CAAA,SAAA,GAAA,SAAA","sourcesContent":["const V = -1\n\nexport type TableRow = [number, number, string, boolean?, (boolean | string)?]\n\nconst _table: TableRow[] = [\n  [4, 32, \"ip4\"],\n  [6, 16, \"tcp\"],\n  [33, 16, \"dccp\"],\n  [41, 128, \"ip6\"],\n  [42, V, \"ip6zone\"],\n  [53, V, \"dns\", true],\n  [54, V, \"dns4\", true],\n  [55, V, \"dns6\", true],\n  [56, V, \"dnsaddr\", true],\n  [132, 16, \"sctp\"],\n  [273, 16, \"udp\"],\n  [275, 0, \"p2p-webrtc-star\"],\n  [276, 0, \"p2p-webrtc-direct\"],\n  [277, 0, \"p2p-stardust\"],\n  [290, 0, \"p2p-circuit\"],\n  [301, 0, \"udt\"],\n  [302, 0, \"utp\"],\n  [400, V, \"unix\", false, \"path\"],\n  [406, V, \"thread\"],\n  // `ipfs` is added before `p2p` for legacy support.\n  // All text representations will default to `p2p`, but `ipfs` will\n  // still be supported\n  [421, V, \"ipfs\"],\n  // `p2p` is the preferred name for 421, and is now the default\n  [421, V, \"p2p\"],\n  [443, 0, \"https\"],\n  [444, 96, \"onion\"],\n  [445, 296, \"onion3\"],\n  [446, V, \"garlic64\"],\n  [460, 0, \"quic\"],\n  [477, 0, \"ws\"],\n  [478, 0, \"wss\"],\n  [479, 0, \"p2p-websocket-star\"],\n  [480, 0, \"http\"],\n]\n\nexport interface Protocol {\n  code: number\n  size: number\n  name: string\n  resolvable: boolean\n  path: boolean\n}\n\nfunction p([code, size, name, resolvable, path]: TableRow): Protocol {\n  return {\n    code: code,\n    size: size,\n    name: name,\n    resolvable: Boolean(resolvable),\n    path: Boolean(path),\n  }\n}\n\nconst _names: Record<string, Protocol> = {}\nconst _codes: Record<number, Protocol> = {}\n\n// populate tables\n_table.forEach((row) => {\n  const proto = p(row)\n  _codes[proto.code] = proto\n  _names[proto.name] = proto\n})\n\nfunction Protocols(proto: number | string): Protocol {\n  if (typeof proto === \"number\") {\n    if (Protocols.codes[proto]) {\n      return Protocols.codes[proto]\n    }\n\n    throw new Error(\"no protocol with code: \" + proto)\n  } else if (typeof proto === \"string\" || (proto as any) instanceof String) {\n    if (Protocols.names[proto]) {\n      return Protocols.names[proto]\n    }\n\n    throw new Error(\"no protocol with name: \" + proto)\n  }\n\n  throw new Error(\"invalid protocol id type: \" + proto)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace Protocols {\n  export const V = -1\n  export const lengthPrefixedVarSize = V\n  export const table = _table\n  export const codes = _codes\n  export const names = _names\n  export const object = p\n}\n\nexport { Protocols as protocols }\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}