{"ast":null,"code":"// package: ffs.rpc\n// file: ffs/rpc/rpc.proto\nvar ffs_rpc_rpc_pb = require(\"../../ffs/rpc/rpc_pb\");\n\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar RPCService = function () {\n  function RPCService() {}\n\n  RPCService.serviceName = \"ffs.rpc.RPCService\";\n  return RPCService;\n}();\n\nRPCService.Create = {\n  methodName: \"Create\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.CreateRequest,\n  responseType: ffs_rpc_rpc_pb.CreateResponse\n};\nRPCService.ListAPI = {\n  methodName: \"ListAPI\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.ListAPIRequest,\n  responseType: ffs_rpc_rpc_pb.ListAPIResponse\n};\nRPCService.ID = {\n  methodName: \"ID\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.IDRequest,\n  responseType: ffs_rpc_rpc_pb.IDResponse\n};\nRPCService.Addrs = {\n  methodName: \"Addrs\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.AddrsRequest,\n  responseType: ffs_rpc_rpc_pb.AddrsResponse\n};\nRPCService.DefaultStorageConfig = {\n  methodName: \"DefaultStorageConfig\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.DefaultStorageConfigRequest,\n  responseType: ffs_rpc_rpc_pb.DefaultStorageConfigResponse\n};\nRPCService.NewAddr = {\n  methodName: \"NewAddr\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.NewAddrRequest,\n  responseType: ffs_rpc_rpc_pb.NewAddrResponse\n};\nRPCService.GetStorageConfig = {\n  methodName: \"GetStorageConfig\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.GetStorageConfigRequest,\n  responseType: ffs_rpc_rpc_pb.GetStorageConfigResponse\n};\nRPCService.SetDefaultStorageConfig = {\n  methodName: \"SetDefaultStorageConfig\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.SetDefaultStorageConfigRequest,\n  responseType: ffs_rpc_rpc_pb.SetDefaultStorageConfigResponse\n};\nRPCService.Show = {\n  methodName: \"Show\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.ShowRequest,\n  responseType: ffs_rpc_rpc_pb.ShowResponse\n};\nRPCService.Info = {\n  methodName: \"Info\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.InfoRequest,\n  responseType: ffs_rpc_rpc_pb.InfoResponse\n};\nRPCService.CancelJob = {\n  methodName: \"CancelJob\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.CancelJobRequest,\n  responseType: ffs_rpc_rpc_pb.CancelJobResponse\n};\nRPCService.WatchJobs = {\n  methodName: \"WatchJobs\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: true,\n  requestType: ffs_rpc_rpc_pb.WatchJobsRequest,\n  responseType: ffs_rpc_rpc_pb.WatchJobsResponse\n};\nRPCService.WatchLogs = {\n  methodName: \"WatchLogs\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: true,\n  requestType: ffs_rpc_rpc_pb.WatchLogsRequest,\n  responseType: ffs_rpc_rpc_pb.WatchLogsResponse\n};\nRPCService.Replace = {\n  methodName: \"Replace\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.ReplaceRequest,\n  responseType: ffs_rpc_rpc_pb.ReplaceResponse\n};\nRPCService.PushStorageConfig = {\n  methodName: \"PushStorageConfig\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.PushStorageConfigRequest,\n  responseType: ffs_rpc_rpc_pb.PushStorageConfigResponse\n};\nRPCService.Remove = {\n  methodName: \"Remove\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.RemoveRequest,\n  responseType: ffs_rpc_rpc_pb.RemoveResponse\n};\nRPCService.Get = {\n  methodName: \"Get\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: true,\n  requestType: ffs_rpc_rpc_pb.GetRequest,\n  responseType: ffs_rpc_rpc_pb.GetResponse\n};\nRPCService.SendFil = {\n  methodName: \"SendFil\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.SendFilRequest,\n  responseType: ffs_rpc_rpc_pb.SendFilResponse\n};\nRPCService.Stage = {\n  methodName: \"Stage\",\n  service: RPCService,\n  requestStream: true,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.StageRequest,\n  responseType: ffs_rpc_rpc_pb.StageResponse\n};\nRPCService.ListPayChannels = {\n  methodName: \"ListPayChannels\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.ListPayChannelsRequest,\n  responseType: ffs_rpc_rpc_pb.ListPayChannelsResponse\n};\nRPCService.CreatePayChannel = {\n  methodName: \"CreatePayChannel\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.CreatePayChannelRequest,\n  responseType: ffs_rpc_rpc_pb.CreatePayChannelResponse\n};\nRPCService.RedeemPayChannel = {\n  methodName: \"RedeemPayChannel\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.RedeemPayChannelRequest,\n  responseType: ffs_rpc_rpc_pb.RedeemPayChannelResponse\n};\nRPCService.ListStorageDealRecords = {\n  methodName: \"ListStorageDealRecords\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.ListStorageDealRecordsRequest,\n  responseType: ffs_rpc_rpc_pb.ListStorageDealRecordsResponse\n};\nRPCService.ListRetrievalDealRecords = {\n  methodName: \"ListRetrievalDealRecords\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.ListRetrievalDealRecordsRequest,\n  responseType: ffs_rpc_rpc_pb.ListRetrievalDealRecordsResponse\n};\nRPCService.ShowAll = {\n  methodName: \"ShowAll\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.ShowAllRequest,\n  responseType: ffs_rpc_rpc_pb.ShowAllResponse\n};\nexports.RPCService = RPCService;\n\nfunction RPCServiceClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nRPCServiceClient.prototype.create = function create(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.Create, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.listAPI = function listAPI(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.ListAPI, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.iD = function iD(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.ID, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.addrs = function addrs(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.Addrs, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.defaultStorageConfig = function defaultStorageConfig(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.DefaultStorageConfig, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.newAddr = function newAddr(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.NewAddr, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.getStorageConfig = function getStorageConfig(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.GetStorageConfig, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.setDefaultStorageConfig = function setDefaultStorageConfig(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.SetDefaultStorageConfig, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.show = function show(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.Show, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.info = function info(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.Info, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.cancelJob = function cancelJob(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.CancelJob, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.watchJobs = function watchJobs(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(RPCService.WatchJobs, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({\n          code: status,\n          details: statusMessage,\n          metadata: trailers\n        });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({\n          code: status,\n          details: statusMessage,\n          metadata: trailers\n        });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.watchLogs = function watchLogs(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(RPCService.WatchLogs, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({\n          code: status,\n          details: statusMessage,\n          metadata: trailers\n        });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({\n          code: status,\n          details: statusMessage,\n          metadata: trailers\n        });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.replace = function replace(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.Replace, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.pushStorageConfig = function pushStorageConfig(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.PushStorageConfig, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.remove = function remove(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.Remove, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.get = function get(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(RPCService.Get, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({\n          code: status,\n          details: statusMessage,\n          metadata: trailers\n        });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({\n          code: status,\n          details: statusMessage,\n          metadata: trailers\n        });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.sendFil = function sendFil(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.SendFil, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.stage = function stage(metadata) {\n  var listeners = {\n    end: [],\n    status: []\n  };\n  var client = grpc.client(RPCService.Stage, {\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport\n  });\n  client.onEnd(function (status, statusMessage, trailers) {\n    listeners.status.forEach(function (handler) {\n      handler({\n        code: status,\n        details: statusMessage,\n        metadata: trailers\n      });\n    });\n    listeners.end.forEach(function (handler) {\n      handler({\n        code: status,\n        details: statusMessage,\n        metadata: trailers\n      });\n    });\n    listeners = null;\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    write: function (requestMessage) {\n      if (!client.started) {\n        client.start(metadata);\n      }\n\n      client.send(requestMessage);\n      return this;\n    },\n    end: function () {\n      client.finishSend();\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.listPayChannels = function listPayChannels(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.ListPayChannels, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.createPayChannel = function createPayChannel(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.CreatePayChannel, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.redeemPayChannel = function redeemPayChannel(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.RedeemPayChannel, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.listStorageDealRecords = function listStorageDealRecords(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.ListStorageDealRecords, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.listRetrievalDealRecords = function listRetrievalDealRecords(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.ListRetrievalDealRecords, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.showAll = function showAll(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.ShowAll, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.RPCServiceClient = RPCServiceClient;","map":{"version":3,"sources":["/Users/nassarhayat/apps/textiletable/dobby/node_modules/@textile/grpc-powergate-client/dist/ffs/rpc/rpc_pb_service.js"],"names":["ffs_rpc_rpc_pb","require","grpc","RPCService","serviceName","Create","methodName","service","requestStream","responseStream","requestType","CreateRequest","responseType","CreateResponse","ListAPI","ListAPIRequest","ListAPIResponse","ID","IDRequest","IDResponse","Addrs","AddrsRequest","AddrsResponse","DefaultStorageConfig","DefaultStorageConfigRequest","DefaultStorageConfigResponse","NewAddr","NewAddrRequest","NewAddrResponse","GetStorageConfig","GetStorageConfigRequest","GetStorageConfigResponse","SetDefaultStorageConfig","SetDefaultStorageConfigRequest","SetDefaultStorageConfigResponse","Show","ShowRequest","ShowResponse","Info","InfoRequest","InfoResponse","CancelJob","CancelJobRequest","CancelJobResponse","WatchJobs","WatchJobsRequest","WatchJobsResponse","WatchLogs","WatchLogsRequest","WatchLogsResponse","Replace","ReplaceRequest","ReplaceResponse","PushStorageConfig","PushStorageConfigRequest","PushStorageConfigResponse","Remove","RemoveRequest","RemoveResponse","Get","GetRequest","GetResponse","SendFil","SendFilRequest","SendFilResponse","Stage","StageRequest","StageResponse","ListPayChannels","ListPayChannelsRequest","ListPayChannelsResponse","CreatePayChannel","CreatePayChannelRequest","CreatePayChannelResponse","RedeemPayChannel","RedeemPayChannelRequest","RedeemPayChannelResponse","ListStorageDealRecords","ListStorageDealRecordsRequest","ListStorageDealRecordsResponse","ListRetrievalDealRecords","ListRetrievalDealRecordsRequest","ListRetrievalDealRecordsResponse","ShowAll","ShowAllRequest","ShowAllResponse","exports","RPCServiceClient","serviceHost","options","prototype","create","requestMessage","metadata","callback","arguments","length","client","unary","request","host","transport","debug","onEnd","response","status","Code","OK","err","Error","statusMessage","code","trailers","message","cancel","close","listAPI","iD","addrs","defaultStorageConfig","newAddr","getStorageConfig","setDefaultStorageConfig","show","info","cancelJob","watchJobs","listeners","data","end","invoke","onMessage","responseMessage","forEach","handler","details","on","type","push","watchLogs","replace","pushStorageConfig","remove","get","sendFil","stage","write","started","start","send","finishSend","listPayChannels","createPayChannel","redeemPayChannel","listStorageDealRecords","listRetrievalDealRecords","showAll"],"mappings":"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","sourcesContent":["// package: ffs.rpc\n// file: ffs/rpc/rpc.proto\n\nvar ffs_rpc_rpc_pb = require(\"../../ffs/rpc/rpc_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar RPCService = (function () {\n  function RPCService() {}\n  RPCService.serviceName = \"ffs.rpc.RPCService\";\n  return RPCService;\n}());\n\nRPCService.Create = {\n  methodName: \"Create\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.CreateRequest,\n  responseType: ffs_rpc_rpc_pb.CreateResponse\n};\n\nRPCService.ListAPI = {\n  methodName: \"ListAPI\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.ListAPIRequest,\n  responseType: ffs_rpc_rpc_pb.ListAPIResponse\n};\n\nRPCService.ID = {\n  methodName: \"ID\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.IDRequest,\n  responseType: ffs_rpc_rpc_pb.IDResponse\n};\n\nRPCService.Addrs = {\n  methodName: \"Addrs\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.AddrsRequest,\n  responseType: ffs_rpc_rpc_pb.AddrsResponse\n};\n\nRPCService.DefaultStorageConfig = {\n  methodName: \"DefaultStorageConfig\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.DefaultStorageConfigRequest,\n  responseType: ffs_rpc_rpc_pb.DefaultStorageConfigResponse\n};\n\nRPCService.NewAddr = {\n  methodName: \"NewAddr\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.NewAddrRequest,\n  responseType: ffs_rpc_rpc_pb.NewAddrResponse\n};\n\nRPCService.GetStorageConfig = {\n  methodName: \"GetStorageConfig\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.GetStorageConfigRequest,\n  responseType: ffs_rpc_rpc_pb.GetStorageConfigResponse\n};\n\nRPCService.SetDefaultStorageConfig = {\n  methodName: \"SetDefaultStorageConfig\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.SetDefaultStorageConfigRequest,\n  responseType: ffs_rpc_rpc_pb.SetDefaultStorageConfigResponse\n};\n\nRPCService.Show = {\n  methodName: \"Show\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.ShowRequest,\n  responseType: ffs_rpc_rpc_pb.ShowResponse\n};\n\nRPCService.Info = {\n  methodName: \"Info\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.InfoRequest,\n  responseType: ffs_rpc_rpc_pb.InfoResponse\n};\n\nRPCService.CancelJob = {\n  methodName: \"CancelJob\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.CancelJobRequest,\n  responseType: ffs_rpc_rpc_pb.CancelJobResponse\n};\n\nRPCService.WatchJobs = {\n  methodName: \"WatchJobs\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: true,\n  requestType: ffs_rpc_rpc_pb.WatchJobsRequest,\n  responseType: ffs_rpc_rpc_pb.WatchJobsResponse\n};\n\nRPCService.WatchLogs = {\n  methodName: \"WatchLogs\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: true,\n  requestType: ffs_rpc_rpc_pb.WatchLogsRequest,\n  responseType: ffs_rpc_rpc_pb.WatchLogsResponse\n};\n\nRPCService.Replace = {\n  methodName: \"Replace\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.ReplaceRequest,\n  responseType: ffs_rpc_rpc_pb.ReplaceResponse\n};\n\nRPCService.PushStorageConfig = {\n  methodName: \"PushStorageConfig\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.PushStorageConfigRequest,\n  responseType: ffs_rpc_rpc_pb.PushStorageConfigResponse\n};\n\nRPCService.Remove = {\n  methodName: \"Remove\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.RemoveRequest,\n  responseType: ffs_rpc_rpc_pb.RemoveResponse\n};\n\nRPCService.Get = {\n  methodName: \"Get\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: true,\n  requestType: ffs_rpc_rpc_pb.GetRequest,\n  responseType: ffs_rpc_rpc_pb.GetResponse\n};\n\nRPCService.SendFil = {\n  methodName: \"SendFil\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.SendFilRequest,\n  responseType: ffs_rpc_rpc_pb.SendFilResponse\n};\n\nRPCService.Stage = {\n  methodName: \"Stage\",\n  service: RPCService,\n  requestStream: true,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.StageRequest,\n  responseType: ffs_rpc_rpc_pb.StageResponse\n};\n\nRPCService.ListPayChannels = {\n  methodName: \"ListPayChannels\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.ListPayChannelsRequest,\n  responseType: ffs_rpc_rpc_pb.ListPayChannelsResponse\n};\n\nRPCService.CreatePayChannel = {\n  methodName: \"CreatePayChannel\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.CreatePayChannelRequest,\n  responseType: ffs_rpc_rpc_pb.CreatePayChannelResponse\n};\n\nRPCService.RedeemPayChannel = {\n  methodName: \"RedeemPayChannel\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.RedeemPayChannelRequest,\n  responseType: ffs_rpc_rpc_pb.RedeemPayChannelResponse\n};\n\nRPCService.ListStorageDealRecords = {\n  methodName: \"ListStorageDealRecords\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.ListStorageDealRecordsRequest,\n  responseType: ffs_rpc_rpc_pb.ListStorageDealRecordsResponse\n};\n\nRPCService.ListRetrievalDealRecords = {\n  methodName: \"ListRetrievalDealRecords\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.ListRetrievalDealRecordsRequest,\n  responseType: ffs_rpc_rpc_pb.ListRetrievalDealRecordsResponse\n};\n\nRPCService.ShowAll = {\n  methodName: \"ShowAll\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: ffs_rpc_rpc_pb.ShowAllRequest,\n  responseType: ffs_rpc_rpc_pb.ShowAllResponse\n};\n\nexports.RPCService = RPCService;\n\nfunction RPCServiceClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nRPCServiceClient.prototype.create = function create(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.Create, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.listAPI = function listAPI(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.ListAPI, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.iD = function iD(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.ID, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.addrs = function addrs(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.Addrs, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.defaultStorageConfig = function defaultStorageConfig(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.DefaultStorageConfig, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.newAddr = function newAddr(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.NewAddr, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.getStorageConfig = function getStorageConfig(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.GetStorageConfig, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.setDefaultStorageConfig = function setDefaultStorageConfig(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.SetDefaultStorageConfig, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.show = function show(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.Show, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.info = function info(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.Info, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.cancelJob = function cancelJob(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.CancelJob, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.watchJobs = function watchJobs(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(RPCService.WatchJobs, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.watchLogs = function watchLogs(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(RPCService.WatchLogs, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.replace = function replace(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.Replace, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.pushStorageConfig = function pushStorageConfig(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.PushStorageConfig, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.remove = function remove(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.Remove, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.get = function get(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(RPCService.Get, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.sendFil = function sendFil(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.SendFil, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.stage = function stage(metadata) {\n  var listeners = {\n    end: [],\n    status: []\n  };\n  var client = grpc.client(RPCService.Stage, {\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport\n  });\n  client.onEnd(function (status, statusMessage, trailers) {\n    listeners.status.forEach(function (handler) {\n      handler({ code: status, details: statusMessage, metadata: trailers });\n    });\n    listeners.end.forEach(function (handler) {\n      handler({ code: status, details: statusMessage, metadata: trailers });\n    });\n    listeners = null;\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    write: function (requestMessage) {\n      if (!client.started) {\n        client.start(metadata);\n      }\n      client.send(requestMessage);\n      return this;\n    },\n    end: function () {\n      client.finishSend();\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.listPayChannels = function listPayChannels(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.ListPayChannels, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.createPayChannel = function createPayChannel(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.CreatePayChannel, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.redeemPayChannel = function redeemPayChannel(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.RedeemPayChannel, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.listStorageDealRecords = function listStorageDealRecords(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.ListStorageDealRecords, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.listRetrievalDealRecords = function listRetrievalDealRecords(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.ListRetrievalDealRecords, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.showAll = function showAll(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.ShowAll, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.RPCServiceClient = RPCServiceClient;\n\n"]},"metadata":{},"sourceType":"script"}