{"ast":null,"code":"// source: threads.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.threads.pb.CollectionConfig', null, global);\ngoog.exportSymbol('proto.threads.pb.CreateReply', null, global);\ngoog.exportSymbol('proto.threads.pb.CreateRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.DeleteCollectionReply', null, global);\ngoog.exportSymbol('proto.threads.pb.DeleteCollectionRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.DeleteDBReply', null, global);\ngoog.exportSymbol('proto.threads.pb.DeleteDBRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.DeleteReply', null, global);\ngoog.exportSymbol('proto.threads.pb.DeleteRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.FindByIDReply', null, global);\ngoog.exportSymbol('proto.threads.pb.FindByIDRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.FindReply', null, global);\ngoog.exportSymbol('proto.threads.pb.FindRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.GetCollectionIndexesReply', null, global);\ngoog.exportSymbol('proto.threads.pb.GetCollectionIndexesRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.GetCollectionInfoReply', null, global);\ngoog.exportSymbol('proto.threads.pb.GetCollectionInfoRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.GetDBInfoReply', null, global);\ngoog.exportSymbol('proto.threads.pb.GetDBInfoRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.GetTokenReply', null, global);\ngoog.exportSymbol('proto.threads.pb.GetTokenReply.PayloadCase', null, global);\ngoog.exportSymbol('proto.threads.pb.GetTokenRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.GetTokenRequest.PayloadCase', null, global);\ngoog.exportSymbol('proto.threads.pb.HasReply', null, global);\ngoog.exportSymbol('proto.threads.pb.HasRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.Index', null, global);\ngoog.exportSymbol('proto.threads.pb.ListCollectionsReply', null, global);\ngoog.exportSymbol('proto.threads.pb.ListCollectionsRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.ListDBsReply', null, global);\ngoog.exportSymbol('proto.threads.pb.ListDBsReply.DB', null, global);\ngoog.exportSymbol('proto.threads.pb.ListDBsRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.ListenReply', null, global);\ngoog.exportSymbol('proto.threads.pb.ListenReply.Action', null, global);\ngoog.exportSymbol('proto.threads.pb.ListenRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.ListenRequest.Filter', null, global);\ngoog.exportSymbol('proto.threads.pb.ListenRequest.Filter.Action', null, global);\ngoog.exportSymbol('proto.threads.pb.NewCollectionReply', null, global);\ngoog.exportSymbol('proto.threads.pb.NewCollectionRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.NewDBFromAddrRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.NewDBReply', null, global);\ngoog.exportSymbol('proto.threads.pb.NewDBRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.ReadTransactionReply', null, global);\ngoog.exportSymbol('proto.threads.pb.ReadTransactionReply.OptionCase', null, global);\ngoog.exportSymbol('proto.threads.pb.ReadTransactionRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.ReadTransactionRequest.OptionCase', null, global);\ngoog.exportSymbol('proto.threads.pb.SaveReply', null, global);\ngoog.exportSymbol('proto.threads.pb.SaveRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.StartTransactionRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.UpdateCollectionReply', null, global);\ngoog.exportSymbol('proto.threads.pb.UpdateCollectionRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.WriteTransactionReply', null, global);\ngoog.exportSymbol('proto.threads.pb.WriteTransactionReply.OptionCase', null, global);\ngoog.exportSymbol('proto.threads.pb.WriteTransactionRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.WriteTransactionRequest.OptionCase', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.threads.pb.GetTokenRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.threads.pb.GetTokenRequest.oneofGroups_);\n};\n\ngoog.inherits(proto.threads.pb.GetTokenRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.GetTokenRequest.displayName = 'proto.threads.pb.GetTokenRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.GetTokenReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.threads.pb.GetTokenReply.oneofGroups_);\n};\n\ngoog.inherits(proto.threads.pb.GetTokenReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.GetTokenReply.displayName = 'proto.threads.pb.GetTokenReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.NewDBRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.NewDBRequest.repeatedFields_, null);\n};\n\ngoog.inherits(proto.threads.pb.NewDBRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.NewDBRequest.displayName = 'proto.threads.pb.NewDBRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.NewDBFromAddrRequest.repeatedFields_, null);\n};\n\ngoog.inherits(proto.threads.pb.NewDBFromAddrRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.NewDBFromAddrRequest.displayName = 'proto.threads.pb.NewDBFromAddrRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.CollectionConfig = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.CollectionConfig.repeatedFields_, null);\n};\n\ngoog.inherits(proto.threads.pb.CollectionConfig, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.CollectionConfig.displayName = 'proto.threads.pb.CollectionConfig';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.Index = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.Index, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.Index.displayName = 'proto.threads.pb.Index';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.NewDBReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.NewDBReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.NewDBReply.displayName = 'proto.threads.pb.NewDBReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.ListDBsRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.ListDBsRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ListDBsRequest.displayName = 'proto.threads.pb.ListDBsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.ListDBsReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.ListDBsReply.repeatedFields_, null);\n};\n\ngoog.inherits(proto.threads.pb.ListDBsReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ListDBsReply.displayName = 'proto.threads.pb.ListDBsReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.ListDBsReply.DB = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.ListDBsReply.DB, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ListDBsReply.DB.displayName = 'proto.threads.pb.ListDBsReply.DB';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.GetDBInfoRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.GetDBInfoRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.GetDBInfoRequest.displayName = 'proto.threads.pb.GetDBInfoRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.GetDBInfoReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.GetDBInfoReply.repeatedFields_, null);\n};\n\ngoog.inherits(proto.threads.pb.GetDBInfoReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.GetDBInfoReply.displayName = 'proto.threads.pb.GetDBInfoReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.DeleteDBRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.DeleteDBRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.DeleteDBRequest.displayName = 'proto.threads.pb.DeleteDBRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.DeleteDBReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.DeleteDBReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.DeleteDBReply.displayName = 'proto.threads.pb.DeleteDBReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.NewCollectionRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.NewCollectionRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.NewCollectionRequest.displayName = 'proto.threads.pb.NewCollectionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.NewCollectionReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.NewCollectionReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.NewCollectionReply.displayName = 'proto.threads.pb.NewCollectionReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.UpdateCollectionRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.UpdateCollectionRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.UpdateCollectionRequest.displayName = 'proto.threads.pb.UpdateCollectionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.UpdateCollectionReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.UpdateCollectionReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.UpdateCollectionReply.displayName = 'proto.threads.pb.UpdateCollectionReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.DeleteCollectionRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.DeleteCollectionRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.DeleteCollectionRequest.displayName = 'proto.threads.pb.DeleteCollectionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.DeleteCollectionReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.DeleteCollectionReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.DeleteCollectionReply.displayName = 'proto.threads.pb.DeleteCollectionReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.GetCollectionInfoRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.GetCollectionInfoRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.GetCollectionInfoRequest.displayName = 'proto.threads.pb.GetCollectionInfoRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.GetCollectionInfoReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.GetCollectionInfoReply.repeatedFields_, null);\n};\n\ngoog.inherits(proto.threads.pb.GetCollectionInfoReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.GetCollectionInfoReply.displayName = 'proto.threads.pb.GetCollectionInfoReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.GetCollectionIndexesRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.GetCollectionIndexesRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.GetCollectionIndexesRequest.displayName = 'proto.threads.pb.GetCollectionIndexesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.GetCollectionIndexesReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.GetCollectionIndexesReply.repeatedFields_, null);\n};\n\ngoog.inherits(proto.threads.pb.GetCollectionIndexesReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.GetCollectionIndexesReply.displayName = 'proto.threads.pb.GetCollectionIndexesReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.ListCollectionsRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.ListCollectionsRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ListCollectionsRequest.displayName = 'proto.threads.pb.ListCollectionsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.ListCollectionsReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.ListCollectionsReply.repeatedFields_, null);\n};\n\ngoog.inherits(proto.threads.pb.ListCollectionsReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ListCollectionsReply.displayName = 'proto.threads.pb.ListCollectionsReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.CreateRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.CreateRequest.repeatedFields_, null);\n};\n\ngoog.inherits(proto.threads.pb.CreateRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.CreateRequest.displayName = 'proto.threads.pb.CreateRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.CreateReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.CreateReply.repeatedFields_, null);\n};\n\ngoog.inherits(proto.threads.pb.CreateReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.CreateReply.displayName = 'proto.threads.pb.CreateReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.SaveRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.SaveRequest.repeatedFields_, null);\n};\n\ngoog.inherits(proto.threads.pb.SaveRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.SaveRequest.displayName = 'proto.threads.pb.SaveRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.SaveReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.SaveReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.SaveReply.displayName = 'proto.threads.pb.SaveReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.DeleteRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.DeleteRequest.repeatedFields_, null);\n};\n\ngoog.inherits(proto.threads.pb.DeleteRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.DeleteRequest.displayName = 'proto.threads.pb.DeleteRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.DeleteReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.DeleteReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.DeleteReply.displayName = 'proto.threads.pb.DeleteReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.HasRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.HasRequest.repeatedFields_, null);\n};\n\ngoog.inherits(proto.threads.pb.HasRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.HasRequest.displayName = 'proto.threads.pb.HasRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.HasReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.HasReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.HasReply.displayName = 'proto.threads.pb.HasReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.FindRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.FindRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.FindRequest.displayName = 'proto.threads.pb.FindRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.FindReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.FindReply.repeatedFields_, null);\n};\n\ngoog.inherits(proto.threads.pb.FindReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.FindReply.displayName = 'proto.threads.pb.FindReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.FindByIDRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.FindByIDRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.FindByIDRequest.displayName = 'proto.threads.pb.FindByIDRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.FindByIDReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.FindByIDReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.FindByIDReply.displayName = 'proto.threads.pb.FindByIDReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.StartTransactionRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.StartTransactionRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.StartTransactionRequest.displayName = 'proto.threads.pb.StartTransactionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.ReadTransactionRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.threads.pb.ReadTransactionRequest.oneofGroups_);\n};\n\ngoog.inherits(proto.threads.pb.ReadTransactionRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ReadTransactionRequest.displayName = 'proto.threads.pb.ReadTransactionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.ReadTransactionReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.threads.pb.ReadTransactionReply.oneofGroups_);\n};\n\ngoog.inherits(proto.threads.pb.ReadTransactionReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ReadTransactionReply.displayName = 'proto.threads.pb.ReadTransactionReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.WriteTransactionRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.threads.pb.WriteTransactionRequest.oneofGroups_);\n};\n\ngoog.inherits(proto.threads.pb.WriteTransactionRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.WriteTransactionRequest.displayName = 'proto.threads.pb.WriteTransactionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.WriteTransactionReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.threads.pb.WriteTransactionReply.oneofGroups_);\n};\n\ngoog.inherits(proto.threads.pb.WriteTransactionReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.WriteTransactionReply.displayName = 'proto.threads.pb.WriteTransactionReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.ListenRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.ListenRequest.repeatedFields_, null);\n};\n\ngoog.inherits(proto.threads.pb.ListenRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ListenRequest.displayName = 'proto.threads.pb.ListenRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.ListenRequest.Filter = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.ListenRequest.Filter, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ListenRequest.Filter.displayName = 'proto.threads.pb.ListenRequest.Filter';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.threads.pb.ListenReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.threads.pb.ListenReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ListenReply.displayName = 'proto.threads.pb.ListenReply';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.threads.pb.GetTokenRequest.oneofGroups_ = [[1, 2]];\n/**\n * @enum {number}\n */\n\nproto.threads.pb.GetTokenRequest.PayloadCase = {\n  PAYLOAD_NOT_SET: 0,\n  KEY: 1,\n  SIGNATURE: 2\n};\n/**\n * @return {proto.threads.pb.GetTokenRequest.PayloadCase}\n */\n\nproto.threads.pb.GetTokenRequest.prototype.getPayloadCase = function () {\n  return (\n    /** @type {proto.threads.pb.GetTokenRequest.PayloadCase} */\n    jspb.Message.computeOneofCase(this, proto.threads.pb.GetTokenRequest.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.GetTokenRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.GetTokenRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.GetTokenRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.GetTokenRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      key: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      signature: msg.getSignature_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.GetTokenRequest}\n */\n\n\nproto.threads.pb.GetTokenRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.GetTokenRequest();\n  return proto.threads.pb.GetTokenRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.GetTokenRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.GetTokenRequest}\n */\n\n\nproto.threads.pb.GetTokenRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setKey(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setSignature(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.GetTokenRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.GetTokenRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.GetTokenRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.GetTokenRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeString(1, f);\n  }\n\n  f =\n  /** @type {!(string|Uint8Array)} */\n  jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n};\n/**\n * optional string key = 1;\n * @return {string}\n */\n\n\nproto.threads.pb.GetTokenRequest.prototype.getKey = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.GetTokenRequest} returns this\n */\n\n\nproto.threads.pb.GetTokenRequest.prototype.setKey = function (value) {\n  return jspb.Message.setOneofField(this, 1, proto.threads.pb.GetTokenRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.threads.pb.GetTokenRequest} returns this\n */\n\n\nproto.threads.pb.GetTokenRequest.prototype.clearKey = function () {\n  return jspb.Message.setOneofField(this, 1, proto.threads.pb.GetTokenRequest.oneofGroups_[0], undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.GetTokenRequest.prototype.hasKey = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes signature = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.GetTokenRequest.prototype.getSignature = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes signature = 2;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\n\n\nproto.threads.pb.GetTokenRequest.prototype.getSignature_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getSignature())\n  );\n};\n/**\n * optional bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.GetTokenRequest.prototype.getSignature_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getSignature())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.GetTokenRequest} returns this\n */\n\n\nproto.threads.pb.GetTokenRequest.prototype.setSignature = function (value) {\n  return jspb.Message.setOneofField(this, 2, proto.threads.pb.GetTokenRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.threads.pb.GetTokenRequest} returns this\n */\n\n\nproto.threads.pb.GetTokenRequest.prototype.clearSignature = function () {\n  return jspb.Message.setOneofField(this, 2, proto.threads.pb.GetTokenRequest.oneofGroups_[0], undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.GetTokenRequest.prototype.hasSignature = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.threads.pb.GetTokenReply.oneofGroups_ = [[1, 2]];\n/**\n * @enum {number}\n */\n\nproto.threads.pb.GetTokenReply.PayloadCase = {\n  PAYLOAD_NOT_SET: 0,\n  CHALLENGE: 1,\n  TOKEN: 2\n};\n/**\n * @return {proto.threads.pb.GetTokenReply.PayloadCase}\n */\n\nproto.threads.pb.GetTokenReply.prototype.getPayloadCase = function () {\n  return (\n    /** @type {proto.threads.pb.GetTokenReply.PayloadCase} */\n    jspb.Message.computeOneofCase(this, proto.threads.pb.GetTokenReply.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.GetTokenReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.GetTokenReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.GetTokenReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.GetTokenReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      challenge: msg.getChallenge_asB64(),\n      token: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.GetTokenReply}\n */\n\n\nproto.threads.pb.GetTokenReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.GetTokenReply();\n  return proto.threads.pb.GetTokenReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.GetTokenReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.GetTokenReply}\n */\n\n\nproto.threads.pb.GetTokenReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setChallenge(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setToken(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.GetTokenReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.GetTokenReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.GetTokenReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.GetTokenReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f =\n  /** @type {!(string|Uint8Array)} */\n  jspb.Message.getField(message, 1);\n\n  if (f != null) {\n    writer.writeBytes(1, f);\n  }\n\n  f =\n  /** @type {string} */\n  jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional bytes challenge = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.GetTokenReply.prototype.getChallenge = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes challenge = 1;\n * This is a type-conversion wrapper around `getChallenge()`\n * @return {string}\n */\n\n\nproto.threads.pb.GetTokenReply.prototype.getChallenge_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getChallenge())\n  );\n};\n/**\n * optional bytes challenge = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChallenge()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.GetTokenReply.prototype.getChallenge_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getChallenge())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.GetTokenReply} returns this\n */\n\n\nproto.threads.pb.GetTokenReply.prototype.setChallenge = function (value) {\n  return jspb.Message.setOneofField(this, 1, proto.threads.pb.GetTokenReply.oneofGroups_[0], value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.threads.pb.GetTokenReply} returns this\n */\n\n\nproto.threads.pb.GetTokenReply.prototype.clearChallenge = function () {\n  return jspb.Message.setOneofField(this, 1, proto.threads.pb.GetTokenReply.oneofGroups_[0], undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.GetTokenReply.prototype.hasChallenge = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string token = 2;\n * @return {string}\n */\n\n\nproto.threads.pb.GetTokenReply.prototype.getToken = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.GetTokenReply} returns this\n */\n\n\nproto.threads.pb.GetTokenReply.prototype.setToken = function (value) {\n  return jspb.Message.setOneofField(this, 2, proto.threads.pb.GetTokenReply.oneofGroups_[0], value);\n};\n/**\n * Clears the field making it undefined.\n * @return {!proto.threads.pb.GetTokenReply} returns this\n */\n\n\nproto.threads.pb.GetTokenReply.prototype.clearToken = function () {\n  return jspb.Message.setOneofField(this, 2, proto.threads.pb.GetTokenReply.oneofGroups_[0], undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.GetTokenReply.prototype.hasToken = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.threads.pb.NewDBRequest.repeatedFields_ = [2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.NewDBRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.NewDBRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.NewDBRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.NewDBRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbid: msg.getDbid_asB64(),\n      collectionsList: jspb.Message.toObjectList(msg.getCollectionsList(), proto.threads.pb.CollectionConfig.toObject, includeInstance),\n      name: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.NewDBRequest}\n */\n\n\nproto.threads.pb.NewDBRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.NewDBRequest();\n  return proto.threads.pb.NewDBRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.NewDBRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.NewDBRequest}\n */\n\n\nproto.threads.pb.NewDBRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDbid(value);\n        break;\n\n      case 2:\n        var value = new proto.threads.pb.CollectionConfig();\n        reader.readMessage(value, proto.threads.pb.CollectionConfig.deserializeBinaryFromReader);\n        msg.addCollections(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.NewDBRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.NewDBRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.NewDBRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.NewDBRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getCollectionsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(2, f, proto.threads.pb.CollectionConfig.serializeBinaryToWriter);\n  }\n\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.NewDBRequest.prototype.getDbid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\n\n\nproto.threads.pb.NewDBRequest.prototype.getDbid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDbid())\n  );\n};\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.NewDBRequest.prototype.getDbid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDbid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.NewDBRequest} returns this\n */\n\n\nproto.threads.pb.NewDBRequest.prototype.setDbid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * repeated CollectionConfig collections = 2;\n * @return {!Array<!proto.threads.pb.CollectionConfig>}\n */\n\n\nproto.threads.pb.NewDBRequest.prototype.getCollectionsList = function () {\n  return (\n    /** @type{!Array<!proto.threads.pb.CollectionConfig>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.threads.pb.CollectionConfig, 2)\n  );\n};\n/**\n * @param {!Array<!proto.threads.pb.CollectionConfig>} value\n * @return {!proto.threads.pb.NewDBRequest} returns this\n*/\n\n\nproto.threads.pb.NewDBRequest.prototype.setCollectionsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n/**\n * @param {!proto.threads.pb.CollectionConfig=} opt_value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.CollectionConfig}\n */\n\n\nproto.threads.pb.NewDBRequest.prototype.addCollections = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.threads.pb.CollectionConfig, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.NewDBRequest} returns this\n */\n\n\nproto.threads.pb.NewDBRequest.prototype.clearCollectionsList = function () {\n  return this.setCollectionsList([]);\n};\n/**\n * optional string name = 3;\n * @return {string}\n */\n\n\nproto.threads.pb.NewDBRequest.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.NewDBRequest} returns this\n */\n\n\nproto.threads.pb.NewDBRequest.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.repeatedFields_ = [3];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.NewDBFromAddrRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.NewDBFromAddrRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.NewDBFromAddrRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.NewDBFromAddrRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addr: msg.getAddr_asB64(),\n      key: msg.getKey_asB64(),\n      collectionsList: jspb.Message.toObjectList(msg.getCollectionsList(), proto.threads.pb.CollectionConfig.toObject, includeInstance),\n      name: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      block: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.NewDBFromAddrRequest}\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.NewDBFromAddrRequest();\n  return proto.threads.pb.NewDBFromAddrRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.NewDBFromAddrRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.NewDBFromAddrRequest}\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setAddr(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setKey(value);\n        break;\n\n      case 3:\n        var value = new proto.threads.pb.CollectionConfig();\n        reader.readMessage(value, proto.threads.pb.CollectionConfig.deserializeBinaryFromReader);\n        msg.addCollections(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setBlock(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.NewDBFromAddrRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.NewDBFromAddrRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddr_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getKey_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n\n  f = message.getCollectionsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(3, f, proto.threads.pb.CollectionConfig.serializeBinaryToWriter);\n  }\n\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getBlock();\n\n  if (f) {\n    writer.writeBool(5, f);\n  }\n};\n/**\n * optional bytes addr = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.prototype.getAddr = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes addr = 1;\n * This is a type-conversion wrapper around `getAddr()`\n * @return {string}\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.prototype.getAddr_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getAddr())\n  );\n};\n/**\n * optional bytes addr = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddr()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.prototype.getAddr_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getAddr())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.NewDBFromAddrRequest} returns this\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.prototype.setAddr = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional bytes key = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.prototype.getKey = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes key = 2;\n * This is a type-conversion wrapper around `getKey()`\n * @return {string}\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.prototype.getKey_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getKey())\n  );\n};\n/**\n * optional bytes key = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getKey()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.prototype.getKey_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getKey())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.NewDBFromAddrRequest} returns this\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.prototype.setKey = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n/**\n * repeated CollectionConfig collections = 3;\n * @return {!Array<!proto.threads.pb.CollectionConfig>}\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.prototype.getCollectionsList = function () {\n  return (\n    /** @type{!Array<!proto.threads.pb.CollectionConfig>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.threads.pb.CollectionConfig, 3)\n  );\n};\n/**\n * @param {!Array<!proto.threads.pb.CollectionConfig>} value\n * @return {!proto.threads.pb.NewDBFromAddrRequest} returns this\n*/\n\n\nproto.threads.pb.NewDBFromAddrRequest.prototype.setCollectionsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n/**\n * @param {!proto.threads.pb.CollectionConfig=} opt_value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.CollectionConfig}\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.prototype.addCollections = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.threads.pb.CollectionConfig, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.NewDBFromAddrRequest} returns this\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.prototype.clearCollectionsList = function () {\n  return this.setCollectionsList([]);\n};\n/**\n * optional string name = 4;\n * @return {string}\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.NewDBFromAddrRequest} returns this\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional bool block = 5;\n * @return {boolean}\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.prototype.getBlock = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 5, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.threads.pb.NewDBFromAddrRequest} returns this\n */\n\n\nproto.threads.pb.NewDBFromAddrRequest.prototype.setBlock = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 5, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.threads.pb.CollectionConfig.repeatedFields_ = [3];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.CollectionConfig.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.CollectionConfig.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.CollectionConfig} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.CollectionConfig.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      schema: msg.getSchema_asB64(),\n      indexesList: jspb.Message.toObjectList(msg.getIndexesList(), proto.threads.pb.Index.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.CollectionConfig}\n */\n\n\nproto.threads.pb.CollectionConfig.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.CollectionConfig();\n  return proto.threads.pb.CollectionConfig.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.CollectionConfig} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.CollectionConfig}\n */\n\n\nproto.threads.pb.CollectionConfig.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setSchema(value);\n        break;\n\n      case 3:\n        var value = new proto.threads.pb.Index();\n        reader.readMessage(value, proto.threads.pb.Index.deserializeBinaryFromReader);\n        msg.addIndexes(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.CollectionConfig.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.CollectionConfig.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.CollectionConfig} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.CollectionConfig.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getSchema_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n\n  f = message.getIndexesList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(3, f, proto.threads.pb.Index.serializeBinaryToWriter);\n  }\n};\n/**\n * optional string name = 1;\n * @return {string}\n */\n\n\nproto.threads.pb.CollectionConfig.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.CollectionConfig} returns this\n */\n\n\nproto.threads.pb.CollectionConfig.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional bytes schema = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.CollectionConfig.prototype.getSchema = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes schema = 2;\n * This is a type-conversion wrapper around `getSchema()`\n * @return {string}\n */\n\n\nproto.threads.pb.CollectionConfig.prototype.getSchema_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getSchema())\n  );\n};\n/**\n * optional bytes schema = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSchema()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.CollectionConfig.prototype.getSchema_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getSchema())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.CollectionConfig} returns this\n */\n\n\nproto.threads.pb.CollectionConfig.prototype.setSchema = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n/**\n * repeated Index indexes = 3;\n * @return {!Array<!proto.threads.pb.Index>}\n */\n\n\nproto.threads.pb.CollectionConfig.prototype.getIndexesList = function () {\n  return (\n    /** @type{!Array<!proto.threads.pb.Index>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.threads.pb.Index, 3)\n  );\n};\n/**\n * @param {!Array<!proto.threads.pb.Index>} value\n * @return {!proto.threads.pb.CollectionConfig} returns this\n*/\n\n\nproto.threads.pb.CollectionConfig.prototype.setIndexesList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n/**\n * @param {!proto.threads.pb.Index=} opt_value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.Index}\n */\n\n\nproto.threads.pb.CollectionConfig.prototype.addIndexes = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.threads.pb.Index, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.CollectionConfig} returns this\n */\n\n\nproto.threads.pb.CollectionConfig.prototype.clearIndexesList = function () {\n  return this.setIndexesList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.Index.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.Index.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.Index} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.Index.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      path: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      unique: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.Index}\n */\n\n\nproto.threads.pb.Index.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.Index();\n  return proto.threads.pb.Index.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.Index} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.Index}\n */\n\n\nproto.threads.pb.Index.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPath(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setUnique(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.Index.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.Index.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.Index} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.Index.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPath();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getUnique();\n\n  if (f) {\n    writer.writeBool(2, f);\n  }\n};\n/**\n * optional string path = 1;\n * @return {string}\n */\n\n\nproto.threads.pb.Index.prototype.getPath = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.Index} returns this\n */\n\n\nproto.threads.pb.Index.prototype.setPath = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional bool unique = 2;\n * @return {boolean}\n */\n\n\nproto.threads.pb.Index.prototype.getUnique = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 2, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.threads.pb.Index} returns this\n */\n\n\nproto.threads.pb.Index.prototype.setUnique = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.NewDBReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.NewDBReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.NewDBReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.NewDBReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.NewDBReply}\n */\n\n\nproto.threads.pb.NewDBReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.NewDBReply();\n  return proto.threads.pb.NewDBReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.NewDBReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.NewDBReply}\n */\n\n\nproto.threads.pb.NewDBReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.NewDBReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.NewDBReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.NewDBReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.NewDBReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.ListDBsRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.ListDBsRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.ListDBsRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.ListDBsRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ListDBsRequest}\n */\n\n\nproto.threads.pb.ListDBsRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ListDBsRequest();\n  return proto.threads.pb.ListDBsRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ListDBsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ListDBsRequest}\n */\n\n\nproto.threads.pb.ListDBsRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.ListDBsRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ListDBsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ListDBsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.ListDBsRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.threads.pb.ListDBsReply.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.ListDBsReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.ListDBsReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.ListDBsReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.ListDBsReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbsList: jspb.Message.toObjectList(msg.getDbsList(), proto.threads.pb.ListDBsReply.DB.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ListDBsReply}\n */\n\n\nproto.threads.pb.ListDBsReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ListDBsReply();\n  return proto.threads.pb.ListDBsReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ListDBsReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ListDBsReply}\n */\n\n\nproto.threads.pb.ListDBsReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.threads.pb.ListDBsReply.DB();\n        reader.readMessage(value, proto.threads.pb.ListDBsReply.DB.deserializeBinaryFromReader);\n        msg.addDbs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.ListDBsReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ListDBsReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ListDBsReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.ListDBsReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.threads.pb.ListDBsReply.DB.serializeBinaryToWriter);\n  }\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.ListDBsReply.DB.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.ListDBsReply.DB.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.ListDBsReply.DB} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.ListDBsReply.DB.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbid: msg.getDbid_asB64(),\n      info: (f = msg.getInfo()) && proto.threads.pb.GetDBInfoReply.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ListDBsReply.DB}\n */\n\n\nproto.threads.pb.ListDBsReply.DB.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ListDBsReply.DB();\n  return proto.threads.pb.ListDBsReply.DB.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ListDBsReply.DB} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ListDBsReply.DB}\n */\n\n\nproto.threads.pb.ListDBsReply.DB.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDbid(value);\n        break;\n\n      case 2:\n        var value = new proto.threads.pb.GetDBInfoReply();\n        reader.readMessage(value, proto.threads.pb.GetDBInfoReply.deserializeBinaryFromReader);\n        msg.setInfo(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.ListDBsReply.DB.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ListDBsReply.DB.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ListDBsReply.DB} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.ListDBsReply.DB.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getInfo();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.threads.pb.GetDBInfoReply.serializeBinaryToWriter);\n  }\n};\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.ListDBsReply.DB.prototype.getDbid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\n\n\nproto.threads.pb.ListDBsReply.DB.prototype.getDbid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDbid())\n  );\n};\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.ListDBsReply.DB.prototype.getDbid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDbid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.ListDBsReply.DB} returns this\n */\n\n\nproto.threads.pb.ListDBsReply.DB.prototype.setDbid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional GetDBInfoReply info = 2;\n * @return {?proto.threads.pb.GetDBInfoReply}\n */\n\n\nproto.threads.pb.ListDBsReply.DB.prototype.getInfo = function () {\n  return (\n    /** @type{?proto.threads.pb.GetDBInfoReply} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.GetDBInfoReply, 2)\n  );\n};\n/**\n * @param {?proto.threads.pb.GetDBInfoReply|undefined} value\n * @return {!proto.threads.pb.ListDBsReply.DB} returns this\n*/\n\n\nproto.threads.pb.ListDBsReply.DB.prototype.setInfo = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.ListDBsReply.DB} returns this\n */\n\n\nproto.threads.pb.ListDBsReply.DB.prototype.clearInfo = function () {\n  return this.setInfo(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.ListDBsReply.DB.prototype.hasInfo = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * repeated DB dbs = 1;\n * @return {!Array<!proto.threads.pb.ListDBsReply.DB>}\n */\n\n\nproto.threads.pb.ListDBsReply.prototype.getDbsList = function () {\n  return (\n    /** @type{!Array<!proto.threads.pb.ListDBsReply.DB>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.threads.pb.ListDBsReply.DB, 1)\n  );\n};\n/**\n * @param {!Array<!proto.threads.pb.ListDBsReply.DB>} value\n * @return {!proto.threads.pb.ListDBsReply} returns this\n*/\n\n\nproto.threads.pb.ListDBsReply.prototype.setDbsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.threads.pb.ListDBsReply.DB=} opt_value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.ListDBsReply.DB}\n */\n\n\nproto.threads.pb.ListDBsReply.prototype.addDbs = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.threads.pb.ListDBsReply.DB, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.ListDBsReply} returns this\n */\n\n\nproto.threads.pb.ListDBsReply.prototype.clearDbsList = function () {\n  return this.setDbsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.GetDBInfoRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.GetDBInfoRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.GetDBInfoRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.GetDBInfoRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbid: msg.getDbid_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.GetDBInfoRequest}\n */\n\n\nproto.threads.pb.GetDBInfoRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.GetDBInfoRequest();\n  return proto.threads.pb.GetDBInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.GetDBInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.GetDBInfoRequest}\n */\n\n\nproto.threads.pb.GetDBInfoRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDbid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.GetDBInfoRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.GetDBInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.GetDBInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.GetDBInfoRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n};\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.GetDBInfoRequest.prototype.getDbid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\n\n\nproto.threads.pb.GetDBInfoRequest.prototype.getDbid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDbid())\n  );\n};\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.GetDBInfoRequest.prototype.getDbid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDbid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.GetDBInfoRequest} returns this\n */\n\n\nproto.threads.pb.GetDBInfoRequest.prototype.setDbid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.threads.pb.GetDBInfoReply.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.GetDBInfoReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.GetDBInfoReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.GetDBInfoReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.GetDBInfoReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addrsList: msg.getAddrsList_asB64(),\n      key: msg.getKey_asB64(),\n      name: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.GetDBInfoReply}\n */\n\n\nproto.threads.pb.GetDBInfoReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.GetDBInfoReply();\n  return proto.threads.pb.GetDBInfoReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.GetDBInfoReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.GetDBInfoReply}\n */\n\n\nproto.threads.pb.GetDBInfoReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.addAddrs(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setKey(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.GetDBInfoReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.GetDBInfoReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.GetDBInfoReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.GetDBInfoReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddrsList_asU8();\n\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(1, f);\n  }\n\n  f = message.getKey_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * repeated bytes addrs = 1;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\n\n\nproto.threads.pb.GetDBInfoReply.prototype.getAddrsList = function () {\n  return (\n    /** @type {!(Array<!Uint8Array>|Array<string>)} */\n    jspb.Message.getRepeatedField(this, 1)\n  );\n};\n/**\n * repeated bytes addrs = 1;\n * This is a type-conversion wrapper around `getAddrsList()`\n * @return {!Array<string>}\n */\n\n\nproto.threads.pb.GetDBInfoReply.prototype.getAddrsList_asB64 = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.bytesListAsB64(this.getAddrsList())\n  );\n};\n/**\n * repeated bytes addrs = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddrsList()`\n * @return {!Array<!Uint8Array>}\n */\n\n\nproto.threads.pb.GetDBInfoReply.prototype.getAddrsList_asU8 = function () {\n  return (\n    /** @type {!Array<!Uint8Array>} */\n    jspb.Message.bytesListAsU8(this.getAddrsList())\n  );\n};\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!proto.threads.pb.GetDBInfoReply} returns this\n */\n\n\nproto.threads.pb.GetDBInfoReply.prototype.setAddrsList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.GetDBInfoReply} returns this\n */\n\n\nproto.threads.pb.GetDBInfoReply.prototype.addAddrs = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.GetDBInfoReply} returns this\n */\n\n\nproto.threads.pb.GetDBInfoReply.prototype.clearAddrsList = function () {\n  return this.setAddrsList([]);\n};\n/**\n * optional bytes key = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.GetDBInfoReply.prototype.getKey = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes key = 2;\n * This is a type-conversion wrapper around `getKey()`\n * @return {string}\n */\n\n\nproto.threads.pb.GetDBInfoReply.prototype.getKey_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getKey())\n  );\n};\n/**\n * optional bytes key = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getKey()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.GetDBInfoReply.prototype.getKey_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getKey())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.GetDBInfoReply} returns this\n */\n\n\nproto.threads.pb.GetDBInfoReply.prototype.setKey = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n/**\n * optional string name = 3;\n * @return {string}\n */\n\n\nproto.threads.pb.GetDBInfoReply.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.GetDBInfoReply} returns this\n */\n\n\nproto.threads.pb.GetDBInfoReply.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.DeleteDBRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.DeleteDBRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.DeleteDBRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.DeleteDBRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbid: msg.getDbid_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.DeleteDBRequest}\n */\n\n\nproto.threads.pb.DeleteDBRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.DeleteDBRequest();\n  return proto.threads.pb.DeleteDBRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.DeleteDBRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.DeleteDBRequest}\n */\n\n\nproto.threads.pb.DeleteDBRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDbid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.DeleteDBRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.DeleteDBRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.DeleteDBRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.DeleteDBRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n};\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.DeleteDBRequest.prototype.getDbid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\n\n\nproto.threads.pb.DeleteDBRequest.prototype.getDbid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDbid())\n  );\n};\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.DeleteDBRequest.prototype.getDbid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDbid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.DeleteDBRequest} returns this\n */\n\n\nproto.threads.pb.DeleteDBRequest.prototype.setDbid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.DeleteDBReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.DeleteDBReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.DeleteDBReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.DeleteDBReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.DeleteDBReply}\n */\n\n\nproto.threads.pb.DeleteDBReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.DeleteDBReply();\n  return proto.threads.pb.DeleteDBReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.DeleteDBReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.DeleteDBReply}\n */\n\n\nproto.threads.pb.DeleteDBReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.DeleteDBReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.DeleteDBReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.DeleteDBReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.DeleteDBReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.NewCollectionRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.NewCollectionRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.NewCollectionRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.NewCollectionRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbid: msg.getDbid_asB64(),\n      config: (f = msg.getConfig()) && proto.threads.pb.CollectionConfig.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.NewCollectionRequest}\n */\n\n\nproto.threads.pb.NewCollectionRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.NewCollectionRequest();\n  return proto.threads.pb.NewCollectionRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.NewCollectionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.NewCollectionRequest}\n */\n\n\nproto.threads.pb.NewCollectionRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDbid(value);\n        break;\n\n      case 2:\n        var value = new proto.threads.pb.CollectionConfig();\n        reader.readMessage(value, proto.threads.pb.CollectionConfig.deserializeBinaryFromReader);\n        msg.setConfig(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.NewCollectionRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.NewCollectionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.NewCollectionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.NewCollectionRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getConfig();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.threads.pb.CollectionConfig.serializeBinaryToWriter);\n  }\n};\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.NewCollectionRequest.prototype.getDbid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\n\n\nproto.threads.pb.NewCollectionRequest.prototype.getDbid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDbid())\n  );\n};\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.NewCollectionRequest.prototype.getDbid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDbid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.NewCollectionRequest} returns this\n */\n\n\nproto.threads.pb.NewCollectionRequest.prototype.setDbid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional CollectionConfig config = 2;\n * @return {?proto.threads.pb.CollectionConfig}\n */\n\n\nproto.threads.pb.NewCollectionRequest.prototype.getConfig = function () {\n  return (\n    /** @type{?proto.threads.pb.CollectionConfig} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.CollectionConfig, 2)\n  );\n};\n/**\n * @param {?proto.threads.pb.CollectionConfig|undefined} value\n * @return {!proto.threads.pb.NewCollectionRequest} returns this\n*/\n\n\nproto.threads.pb.NewCollectionRequest.prototype.setConfig = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.NewCollectionRequest} returns this\n */\n\n\nproto.threads.pb.NewCollectionRequest.prototype.clearConfig = function () {\n  return this.setConfig(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.NewCollectionRequest.prototype.hasConfig = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.NewCollectionReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.NewCollectionReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.NewCollectionReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.NewCollectionReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.NewCollectionReply}\n */\n\n\nproto.threads.pb.NewCollectionReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.NewCollectionReply();\n  return proto.threads.pb.NewCollectionReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.NewCollectionReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.NewCollectionReply}\n */\n\n\nproto.threads.pb.NewCollectionReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.NewCollectionReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.NewCollectionReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.NewCollectionReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.NewCollectionReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.UpdateCollectionRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.UpdateCollectionRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.UpdateCollectionRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.UpdateCollectionRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbid: msg.getDbid_asB64(),\n      config: (f = msg.getConfig()) && proto.threads.pb.CollectionConfig.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.UpdateCollectionRequest}\n */\n\n\nproto.threads.pb.UpdateCollectionRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.UpdateCollectionRequest();\n  return proto.threads.pb.UpdateCollectionRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.UpdateCollectionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.UpdateCollectionRequest}\n */\n\n\nproto.threads.pb.UpdateCollectionRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDbid(value);\n        break;\n\n      case 2:\n        var value = new proto.threads.pb.CollectionConfig();\n        reader.readMessage(value, proto.threads.pb.CollectionConfig.deserializeBinaryFromReader);\n        msg.setConfig(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.UpdateCollectionRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.UpdateCollectionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.UpdateCollectionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.UpdateCollectionRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getConfig();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.threads.pb.CollectionConfig.serializeBinaryToWriter);\n  }\n};\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.UpdateCollectionRequest.prototype.getDbid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\n\n\nproto.threads.pb.UpdateCollectionRequest.prototype.getDbid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDbid())\n  );\n};\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.UpdateCollectionRequest.prototype.getDbid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDbid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.UpdateCollectionRequest} returns this\n */\n\n\nproto.threads.pb.UpdateCollectionRequest.prototype.setDbid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional CollectionConfig config = 2;\n * @return {?proto.threads.pb.CollectionConfig}\n */\n\n\nproto.threads.pb.UpdateCollectionRequest.prototype.getConfig = function () {\n  return (\n    /** @type{?proto.threads.pb.CollectionConfig} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.CollectionConfig, 2)\n  );\n};\n/**\n * @param {?proto.threads.pb.CollectionConfig|undefined} value\n * @return {!proto.threads.pb.UpdateCollectionRequest} returns this\n*/\n\n\nproto.threads.pb.UpdateCollectionRequest.prototype.setConfig = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.UpdateCollectionRequest} returns this\n */\n\n\nproto.threads.pb.UpdateCollectionRequest.prototype.clearConfig = function () {\n  return this.setConfig(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.UpdateCollectionRequest.prototype.hasConfig = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.UpdateCollectionReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.UpdateCollectionReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.UpdateCollectionReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.UpdateCollectionReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.UpdateCollectionReply}\n */\n\n\nproto.threads.pb.UpdateCollectionReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.UpdateCollectionReply();\n  return proto.threads.pb.UpdateCollectionReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.UpdateCollectionReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.UpdateCollectionReply}\n */\n\n\nproto.threads.pb.UpdateCollectionReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.UpdateCollectionReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.UpdateCollectionReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.UpdateCollectionReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.UpdateCollectionReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.DeleteCollectionRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.DeleteCollectionRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.DeleteCollectionRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.DeleteCollectionRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbid: msg.getDbid_asB64(),\n      name: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.DeleteCollectionRequest}\n */\n\n\nproto.threads.pb.DeleteCollectionRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.DeleteCollectionRequest();\n  return proto.threads.pb.DeleteCollectionRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.DeleteCollectionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.DeleteCollectionRequest}\n */\n\n\nproto.threads.pb.DeleteCollectionRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDbid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.DeleteCollectionRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.DeleteCollectionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.DeleteCollectionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.DeleteCollectionRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.DeleteCollectionRequest.prototype.getDbid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\n\n\nproto.threads.pb.DeleteCollectionRequest.prototype.getDbid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDbid())\n  );\n};\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.DeleteCollectionRequest.prototype.getDbid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDbid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.DeleteCollectionRequest} returns this\n */\n\n\nproto.threads.pb.DeleteCollectionRequest.prototype.setDbid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string name = 2;\n * @return {string}\n */\n\n\nproto.threads.pb.DeleteCollectionRequest.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.DeleteCollectionRequest} returns this\n */\n\n\nproto.threads.pb.DeleteCollectionRequest.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.DeleteCollectionReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.DeleteCollectionReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.DeleteCollectionReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.DeleteCollectionReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.DeleteCollectionReply}\n */\n\n\nproto.threads.pb.DeleteCollectionReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.DeleteCollectionReply();\n  return proto.threads.pb.DeleteCollectionReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.DeleteCollectionReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.DeleteCollectionReply}\n */\n\n\nproto.threads.pb.DeleteCollectionReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.DeleteCollectionReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.DeleteCollectionReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.DeleteCollectionReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.DeleteCollectionReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.GetCollectionInfoRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.GetCollectionInfoRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.GetCollectionInfoRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.GetCollectionInfoRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbid: msg.getDbid_asB64(),\n      name: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.GetCollectionInfoRequest}\n */\n\n\nproto.threads.pb.GetCollectionInfoRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.GetCollectionInfoRequest();\n  return proto.threads.pb.GetCollectionInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.GetCollectionInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.GetCollectionInfoRequest}\n */\n\n\nproto.threads.pb.GetCollectionInfoRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDbid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.GetCollectionInfoRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.GetCollectionInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.GetCollectionInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.GetCollectionInfoRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.GetCollectionInfoRequest.prototype.getDbid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\n\n\nproto.threads.pb.GetCollectionInfoRequest.prototype.getDbid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDbid())\n  );\n};\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.GetCollectionInfoRequest.prototype.getDbid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDbid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.GetCollectionInfoRequest} returns this\n */\n\n\nproto.threads.pb.GetCollectionInfoRequest.prototype.setDbid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string name = 2;\n * @return {string}\n */\n\n\nproto.threads.pb.GetCollectionInfoRequest.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.GetCollectionInfoRequest} returns this\n */\n\n\nproto.threads.pb.GetCollectionInfoRequest.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.threads.pb.GetCollectionInfoReply.repeatedFields_ = [3];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.GetCollectionInfoReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.GetCollectionInfoReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.GetCollectionInfoReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.GetCollectionInfoReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      schema: msg.getSchema_asB64(),\n      indexesList: jspb.Message.toObjectList(msg.getIndexesList(), proto.threads.pb.Index.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.GetCollectionInfoReply}\n */\n\n\nproto.threads.pb.GetCollectionInfoReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.GetCollectionInfoReply();\n  return proto.threads.pb.GetCollectionInfoReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.GetCollectionInfoReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.GetCollectionInfoReply}\n */\n\n\nproto.threads.pb.GetCollectionInfoReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setSchema(value);\n        break;\n\n      case 3:\n        var value = new proto.threads.pb.Index();\n        reader.readMessage(value, proto.threads.pb.Index.deserializeBinaryFromReader);\n        msg.addIndexes(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.GetCollectionInfoReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.GetCollectionInfoReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.GetCollectionInfoReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.GetCollectionInfoReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getSchema_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n\n  f = message.getIndexesList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(3, f, proto.threads.pb.Index.serializeBinaryToWriter);\n  }\n};\n/**\n * optional string name = 1;\n * @return {string}\n */\n\n\nproto.threads.pb.GetCollectionInfoReply.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.GetCollectionInfoReply} returns this\n */\n\n\nproto.threads.pb.GetCollectionInfoReply.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional bytes schema = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.GetCollectionInfoReply.prototype.getSchema = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes schema = 2;\n * This is a type-conversion wrapper around `getSchema()`\n * @return {string}\n */\n\n\nproto.threads.pb.GetCollectionInfoReply.prototype.getSchema_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getSchema())\n  );\n};\n/**\n * optional bytes schema = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSchema()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.GetCollectionInfoReply.prototype.getSchema_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getSchema())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.GetCollectionInfoReply} returns this\n */\n\n\nproto.threads.pb.GetCollectionInfoReply.prototype.setSchema = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n/**\n * repeated Index indexes = 3;\n * @return {!Array<!proto.threads.pb.Index>}\n */\n\n\nproto.threads.pb.GetCollectionInfoReply.prototype.getIndexesList = function () {\n  return (\n    /** @type{!Array<!proto.threads.pb.Index>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.threads.pb.Index, 3)\n  );\n};\n/**\n * @param {!Array<!proto.threads.pb.Index>} value\n * @return {!proto.threads.pb.GetCollectionInfoReply} returns this\n*/\n\n\nproto.threads.pb.GetCollectionInfoReply.prototype.setIndexesList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n/**\n * @param {!proto.threads.pb.Index=} opt_value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.Index}\n */\n\n\nproto.threads.pb.GetCollectionInfoReply.prototype.addIndexes = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.threads.pb.Index, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.GetCollectionInfoReply} returns this\n */\n\n\nproto.threads.pb.GetCollectionInfoReply.prototype.clearIndexesList = function () {\n  return this.setIndexesList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.GetCollectionIndexesRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.GetCollectionIndexesRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.GetCollectionIndexesRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.GetCollectionIndexesRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbid: msg.getDbid_asB64(),\n      name: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.GetCollectionIndexesRequest}\n */\n\n\nproto.threads.pb.GetCollectionIndexesRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.GetCollectionIndexesRequest();\n  return proto.threads.pb.GetCollectionIndexesRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.GetCollectionIndexesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.GetCollectionIndexesRequest}\n */\n\n\nproto.threads.pb.GetCollectionIndexesRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDbid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.GetCollectionIndexesRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.GetCollectionIndexesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.GetCollectionIndexesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.GetCollectionIndexesRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.GetCollectionIndexesRequest.prototype.getDbid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\n\n\nproto.threads.pb.GetCollectionIndexesRequest.prototype.getDbid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDbid())\n  );\n};\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.GetCollectionIndexesRequest.prototype.getDbid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDbid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.GetCollectionIndexesRequest} returns this\n */\n\n\nproto.threads.pb.GetCollectionIndexesRequest.prototype.setDbid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string name = 2;\n * @return {string}\n */\n\n\nproto.threads.pb.GetCollectionIndexesRequest.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.GetCollectionIndexesRequest} returns this\n */\n\n\nproto.threads.pb.GetCollectionIndexesRequest.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.threads.pb.GetCollectionIndexesReply.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.GetCollectionIndexesReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.GetCollectionIndexesReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.GetCollectionIndexesReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.GetCollectionIndexesReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      indexesList: jspb.Message.toObjectList(msg.getIndexesList(), proto.threads.pb.Index.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.GetCollectionIndexesReply}\n */\n\n\nproto.threads.pb.GetCollectionIndexesReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.GetCollectionIndexesReply();\n  return proto.threads.pb.GetCollectionIndexesReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.GetCollectionIndexesReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.GetCollectionIndexesReply}\n */\n\n\nproto.threads.pb.GetCollectionIndexesReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.threads.pb.Index();\n        reader.readMessage(value, proto.threads.pb.Index.deserializeBinaryFromReader);\n        msg.addIndexes(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.GetCollectionIndexesReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.GetCollectionIndexesReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.GetCollectionIndexesReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.GetCollectionIndexesReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getIndexesList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.threads.pb.Index.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated Index indexes = 1;\n * @return {!Array<!proto.threads.pb.Index>}\n */\n\n\nproto.threads.pb.GetCollectionIndexesReply.prototype.getIndexesList = function () {\n  return (\n    /** @type{!Array<!proto.threads.pb.Index>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.threads.pb.Index, 1)\n  );\n};\n/**\n * @param {!Array<!proto.threads.pb.Index>} value\n * @return {!proto.threads.pb.GetCollectionIndexesReply} returns this\n*/\n\n\nproto.threads.pb.GetCollectionIndexesReply.prototype.setIndexesList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.threads.pb.Index=} opt_value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.Index}\n */\n\n\nproto.threads.pb.GetCollectionIndexesReply.prototype.addIndexes = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.threads.pb.Index, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.GetCollectionIndexesReply} returns this\n */\n\n\nproto.threads.pb.GetCollectionIndexesReply.prototype.clearIndexesList = function () {\n  return this.setIndexesList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.ListCollectionsRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.ListCollectionsRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.ListCollectionsRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.ListCollectionsRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbid: msg.getDbid_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ListCollectionsRequest}\n */\n\n\nproto.threads.pb.ListCollectionsRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ListCollectionsRequest();\n  return proto.threads.pb.ListCollectionsRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ListCollectionsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ListCollectionsRequest}\n */\n\n\nproto.threads.pb.ListCollectionsRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDbid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.ListCollectionsRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ListCollectionsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ListCollectionsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.ListCollectionsRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n};\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.ListCollectionsRequest.prototype.getDbid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\n\n\nproto.threads.pb.ListCollectionsRequest.prototype.getDbid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDbid())\n  );\n};\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.ListCollectionsRequest.prototype.getDbid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDbid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.ListCollectionsRequest} returns this\n */\n\n\nproto.threads.pb.ListCollectionsRequest.prototype.setDbid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.threads.pb.ListCollectionsReply.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.ListCollectionsReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.ListCollectionsReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.ListCollectionsReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.ListCollectionsReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      collectionsList: jspb.Message.toObjectList(msg.getCollectionsList(), proto.threads.pb.GetCollectionInfoReply.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ListCollectionsReply}\n */\n\n\nproto.threads.pb.ListCollectionsReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ListCollectionsReply();\n  return proto.threads.pb.ListCollectionsReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ListCollectionsReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ListCollectionsReply}\n */\n\n\nproto.threads.pb.ListCollectionsReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.threads.pb.GetCollectionInfoReply();\n        reader.readMessage(value, proto.threads.pb.GetCollectionInfoReply.deserializeBinaryFromReader);\n        msg.addCollections(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.ListCollectionsReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ListCollectionsReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ListCollectionsReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.ListCollectionsReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCollectionsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.threads.pb.GetCollectionInfoReply.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated GetCollectionInfoReply collections = 1;\n * @return {!Array<!proto.threads.pb.GetCollectionInfoReply>}\n */\n\n\nproto.threads.pb.ListCollectionsReply.prototype.getCollectionsList = function () {\n  return (\n    /** @type{!Array<!proto.threads.pb.GetCollectionInfoReply>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.threads.pb.GetCollectionInfoReply, 1)\n  );\n};\n/**\n * @param {!Array<!proto.threads.pb.GetCollectionInfoReply>} value\n * @return {!proto.threads.pb.ListCollectionsReply} returns this\n*/\n\n\nproto.threads.pb.ListCollectionsReply.prototype.setCollectionsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.threads.pb.GetCollectionInfoReply=} opt_value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.GetCollectionInfoReply}\n */\n\n\nproto.threads.pb.ListCollectionsReply.prototype.addCollections = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.threads.pb.GetCollectionInfoReply, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.ListCollectionsReply} returns this\n */\n\n\nproto.threads.pb.ListCollectionsReply.prototype.clearCollectionsList = function () {\n  return this.setCollectionsList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.threads.pb.CreateRequest.repeatedFields_ = [3];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.CreateRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.CreateRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.CreateRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.CreateRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbid: msg.getDbid_asB64(),\n      collectionname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      instancesList: msg.getInstancesList_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.CreateRequest}\n */\n\n\nproto.threads.pb.CreateRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.CreateRequest();\n  return proto.threads.pb.CreateRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.CreateRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.CreateRequest}\n */\n\n\nproto.threads.pb.CreateRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDbid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCollectionname(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.addInstances(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.CreateRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.CreateRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.CreateRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.CreateRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getCollectionname();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getInstancesList_asU8();\n\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(3, f);\n  }\n};\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.CreateRequest.prototype.getDbid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\n\n\nproto.threads.pb.CreateRequest.prototype.getDbid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDbid())\n  );\n};\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.CreateRequest.prototype.getDbid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDbid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.CreateRequest} returns this\n */\n\n\nproto.threads.pb.CreateRequest.prototype.setDbid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string collectionName = 2;\n * @return {string}\n */\n\n\nproto.threads.pb.CreateRequest.prototype.getCollectionname = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.CreateRequest} returns this\n */\n\n\nproto.threads.pb.CreateRequest.prototype.setCollectionname = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * repeated bytes instances = 3;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\n\n\nproto.threads.pb.CreateRequest.prototype.getInstancesList = function () {\n  return (\n    /** @type {!(Array<!Uint8Array>|Array<string>)} */\n    jspb.Message.getRepeatedField(this, 3)\n  );\n};\n/**\n * repeated bytes instances = 3;\n * This is a type-conversion wrapper around `getInstancesList()`\n * @return {!Array<string>}\n */\n\n\nproto.threads.pb.CreateRequest.prototype.getInstancesList_asB64 = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.bytesListAsB64(this.getInstancesList())\n  );\n};\n/**\n * repeated bytes instances = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getInstancesList()`\n * @return {!Array<!Uint8Array>}\n */\n\n\nproto.threads.pb.CreateRequest.prototype.getInstancesList_asU8 = function () {\n  return (\n    /** @type {!Array<!Uint8Array>} */\n    jspb.Message.bytesListAsU8(this.getInstancesList())\n  );\n};\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!proto.threads.pb.CreateRequest} returns this\n */\n\n\nproto.threads.pb.CreateRequest.prototype.setInstancesList = function (value) {\n  return jspb.Message.setField(this, 3, value || []);\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.CreateRequest} returns this\n */\n\n\nproto.threads.pb.CreateRequest.prototype.addInstances = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.CreateRequest} returns this\n */\n\n\nproto.threads.pb.CreateRequest.prototype.clearInstancesList = function () {\n  return this.setInstancesList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.threads.pb.CreateReply.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.CreateReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.CreateReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.CreateReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.CreateReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      instanceidsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.CreateReply}\n */\n\n\nproto.threads.pb.CreateReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.CreateReply();\n  return proto.threads.pb.CreateReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.CreateReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.CreateReply}\n */\n\n\nproto.threads.pb.CreateReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addInstanceids(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.CreateReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.CreateReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.CreateReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.CreateReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getInstanceidsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(1, f);\n  }\n};\n/**\n * repeated string instanceIDs = 1;\n * @return {!Array<string>}\n */\n\n\nproto.threads.pb.CreateReply.prototype.getInstanceidsList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 1)\n  );\n};\n/**\n * @param {!Array<string>} value\n * @return {!proto.threads.pb.CreateReply} returns this\n */\n\n\nproto.threads.pb.CreateReply.prototype.setInstanceidsList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.CreateReply} returns this\n */\n\n\nproto.threads.pb.CreateReply.prototype.addInstanceids = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.CreateReply} returns this\n */\n\n\nproto.threads.pb.CreateReply.prototype.clearInstanceidsList = function () {\n  return this.setInstanceidsList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.threads.pb.SaveRequest.repeatedFields_ = [3];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.SaveRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.SaveRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.SaveRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.SaveRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbid: msg.getDbid_asB64(),\n      collectionname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      instancesList: msg.getInstancesList_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.SaveRequest}\n */\n\n\nproto.threads.pb.SaveRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.SaveRequest();\n  return proto.threads.pb.SaveRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.SaveRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.SaveRequest}\n */\n\n\nproto.threads.pb.SaveRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDbid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCollectionname(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.addInstances(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.SaveRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.SaveRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.SaveRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.SaveRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getCollectionname();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getInstancesList_asU8();\n\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(3, f);\n  }\n};\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.SaveRequest.prototype.getDbid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\n\n\nproto.threads.pb.SaveRequest.prototype.getDbid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDbid())\n  );\n};\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.SaveRequest.prototype.getDbid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDbid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.SaveRequest} returns this\n */\n\n\nproto.threads.pb.SaveRequest.prototype.setDbid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string collectionName = 2;\n * @return {string}\n */\n\n\nproto.threads.pb.SaveRequest.prototype.getCollectionname = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.SaveRequest} returns this\n */\n\n\nproto.threads.pb.SaveRequest.prototype.setCollectionname = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * repeated bytes instances = 3;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\n\n\nproto.threads.pb.SaveRequest.prototype.getInstancesList = function () {\n  return (\n    /** @type {!(Array<!Uint8Array>|Array<string>)} */\n    jspb.Message.getRepeatedField(this, 3)\n  );\n};\n/**\n * repeated bytes instances = 3;\n * This is a type-conversion wrapper around `getInstancesList()`\n * @return {!Array<string>}\n */\n\n\nproto.threads.pb.SaveRequest.prototype.getInstancesList_asB64 = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.bytesListAsB64(this.getInstancesList())\n  );\n};\n/**\n * repeated bytes instances = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getInstancesList()`\n * @return {!Array<!Uint8Array>}\n */\n\n\nproto.threads.pb.SaveRequest.prototype.getInstancesList_asU8 = function () {\n  return (\n    /** @type {!Array<!Uint8Array>} */\n    jspb.Message.bytesListAsU8(this.getInstancesList())\n  );\n};\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!proto.threads.pb.SaveRequest} returns this\n */\n\n\nproto.threads.pb.SaveRequest.prototype.setInstancesList = function (value) {\n  return jspb.Message.setField(this, 3, value || []);\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.SaveRequest} returns this\n */\n\n\nproto.threads.pb.SaveRequest.prototype.addInstances = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.SaveRequest} returns this\n */\n\n\nproto.threads.pb.SaveRequest.prototype.clearInstancesList = function () {\n  return this.setInstancesList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.SaveReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.SaveReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.SaveReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.SaveReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.SaveReply}\n */\n\n\nproto.threads.pb.SaveReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.SaveReply();\n  return proto.threads.pb.SaveReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.SaveReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.SaveReply}\n */\n\n\nproto.threads.pb.SaveReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.SaveReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.SaveReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.SaveReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.SaveReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.threads.pb.DeleteRequest.repeatedFields_ = [3];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.DeleteRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.DeleteRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.DeleteRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.DeleteRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbid: msg.getDbid_asB64(),\n      collectionname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      instanceidsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.DeleteRequest}\n */\n\n\nproto.threads.pb.DeleteRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.DeleteRequest();\n  return proto.threads.pb.DeleteRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.DeleteRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.DeleteRequest}\n */\n\n\nproto.threads.pb.DeleteRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDbid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCollectionname(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addInstanceids(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.DeleteRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.DeleteRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.DeleteRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.DeleteRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getCollectionname();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getInstanceidsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(3, f);\n  }\n};\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.DeleteRequest.prototype.getDbid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\n\n\nproto.threads.pb.DeleteRequest.prototype.getDbid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDbid())\n  );\n};\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.DeleteRequest.prototype.getDbid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDbid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.DeleteRequest} returns this\n */\n\n\nproto.threads.pb.DeleteRequest.prototype.setDbid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string collectionName = 2;\n * @return {string}\n */\n\n\nproto.threads.pb.DeleteRequest.prototype.getCollectionname = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.DeleteRequest} returns this\n */\n\n\nproto.threads.pb.DeleteRequest.prototype.setCollectionname = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * repeated string instanceIDs = 3;\n * @return {!Array<string>}\n */\n\n\nproto.threads.pb.DeleteRequest.prototype.getInstanceidsList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 3)\n  );\n};\n/**\n * @param {!Array<string>} value\n * @return {!proto.threads.pb.DeleteRequest} returns this\n */\n\n\nproto.threads.pb.DeleteRequest.prototype.setInstanceidsList = function (value) {\n  return jspb.Message.setField(this, 3, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.DeleteRequest} returns this\n */\n\n\nproto.threads.pb.DeleteRequest.prototype.addInstanceids = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.DeleteRequest} returns this\n */\n\n\nproto.threads.pb.DeleteRequest.prototype.clearInstanceidsList = function () {\n  return this.setInstanceidsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.DeleteReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.DeleteReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.DeleteReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.DeleteReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.DeleteReply}\n */\n\n\nproto.threads.pb.DeleteReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.DeleteReply();\n  return proto.threads.pb.DeleteReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.DeleteReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.DeleteReply}\n */\n\n\nproto.threads.pb.DeleteReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.DeleteReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.DeleteReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.DeleteReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.DeleteReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.threads.pb.HasRequest.repeatedFields_ = [3];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.HasRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.HasRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.HasRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.HasRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbid: msg.getDbid_asB64(),\n      collectionname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      instanceidsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.HasRequest}\n */\n\n\nproto.threads.pb.HasRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.HasRequest();\n  return proto.threads.pb.HasRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.HasRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.HasRequest}\n */\n\n\nproto.threads.pb.HasRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDbid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCollectionname(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addInstanceids(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.HasRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.HasRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.HasRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.HasRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getCollectionname();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getInstanceidsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(3, f);\n  }\n};\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.HasRequest.prototype.getDbid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\n\n\nproto.threads.pb.HasRequest.prototype.getDbid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDbid())\n  );\n};\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.HasRequest.prototype.getDbid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDbid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.HasRequest} returns this\n */\n\n\nproto.threads.pb.HasRequest.prototype.setDbid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string collectionName = 2;\n * @return {string}\n */\n\n\nproto.threads.pb.HasRequest.prototype.getCollectionname = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.HasRequest} returns this\n */\n\n\nproto.threads.pb.HasRequest.prototype.setCollectionname = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * repeated string instanceIDs = 3;\n * @return {!Array<string>}\n */\n\n\nproto.threads.pb.HasRequest.prototype.getInstanceidsList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 3)\n  );\n};\n/**\n * @param {!Array<string>} value\n * @return {!proto.threads.pb.HasRequest} returns this\n */\n\n\nproto.threads.pb.HasRequest.prototype.setInstanceidsList = function (value) {\n  return jspb.Message.setField(this, 3, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.HasRequest} returns this\n */\n\n\nproto.threads.pb.HasRequest.prototype.addInstanceids = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.HasRequest} returns this\n */\n\n\nproto.threads.pb.HasRequest.prototype.clearInstanceidsList = function () {\n  return this.setInstanceidsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.HasReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.HasReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.HasReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.HasReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      exists: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.HasReply}\n */\n\n\nproto.threads.pb.HasReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.HasReply();\n  return proto.threads.pb.HasReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.HasReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.HasReply}\n */\n\n\nproto.threads.pb.HasReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setExists(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.HasReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.HasReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.HasReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.HasReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getExists();\n\n  if (f) {\n    writer.writeBool(1, f);\n  }\n};\n/**\n * optional bool exists = 1;\n * @return {boolean}\n */\n\n\nproto.threads.pb.HasReply.prototype.getExists = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 1, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.threads.pb.HasReply} returns this\n */\n\n\nproto.threads.pb.HasReply.prototype.setExists = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.FindRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.FindRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.FindRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.FindRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbid: msg.getDbid_asB64(),\n      collectionname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      queryjson: msg.getQueryjson_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.FindRequest}\n */\n\n\nproto.threads.pb.FindRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.FindRequest();\n  return proto.threads.pb.FindRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.FindRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.FindRequest}\n */\n\n\nproto.threads.pb.FindRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDbid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCollectionname(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setQueryjson(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.FindRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.FindRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.FindRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.FindRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getCollectionname();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getQueryjson_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n};\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.FindRequest.prototype.getDbid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\n\n\nproto.threads.pb.FindRequest.prototype.getDbid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDbid())\n  );\n};\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.FindRequest.prototype.getDbid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDbid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.FindRequest} returns this\n */\n\n\nproto.threads.pb.FindRequest.prototype.setDbid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string collectionName = 2;\n * @return {string}\n */\n\n\nproto.threads.pb.FindRequest.prototype.getCollectionname = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.FindRequest} returns this\n */\n\n\nproto.threads.pb.FindRequest.prototype.setCollectionname = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional bytes queryJSON = 3;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.FindRequest.prototype.getQueryjson = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes queryJSON = 3;\n * This is a type-conversion wrapper around `getQueryjson()`\n * @return {string}\n */\n\n\nproto.threads.pb.FindRequest.prototype.getQueryjson_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getQueryjson())\n  );\n};\n/**\n * optional bytes queryJSON = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getQueryjson()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.FindRequest.prototype.getQueryjson_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getQueryjson())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.FindRequest} returns this\n */\n\n\nproto.threads.pb.FindRequest.prototype.setQueryjson = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.threads.pb.FindReply.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.FindReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.FindReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.FindReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.FindReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      instancesList: msg.getInstancesList_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.FindReply}\n */\n\n\nproto.threads.pb.FindReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.FindReply();\n  return proto.threads.pb.FindReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.FindReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.FindReply}\n */\n\n\nproto.threads.pb.FindReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.addInstances(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.FindReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.FindReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.FindReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.FindReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getInstancesList_asU8();\n\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(1, f);\n  }\n};\n/**\n * repeated bytes instances = 1;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\n\n\nproto.threads.pb.FindReply.prototype.getInstancesList = function () {\n  return (\n    /** @type {!(Array<!Uint8Array>|Array<string>)} */\n    jspb.Message.getRepeatedField(this, 1)\n  );\n};\n/**\n * repeated bytes instances = 1;\n * This is a type-conversion wrapper around `getInstancesList()`\n * @return {!Array<string>}\n */\n\n\nproto.threads.pb.FindReply.prototype.getInstancesList_asB64 = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.bytesListAsB64(this.getInstancesList())\n  );\n};\n/**\n * repeated bytes instances = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getInstancesList()`\n * @return {!Array<!Uint8Array>}\n */\n\n\nproto.threads.pb.FindReply.prototype.getInstancesList_asU8 = function () {\n  return (\n    /** @type {!Array<!Uint8Array>} */\n    jspb.Message.bytesListAsU8(this.getInstancesList())\n  );\n};\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!proto.threads.pb.FindReply} returns this\n */\n\n\nproto.threads.pb.FindReply.prototype.setInstancesList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.FindReply} returns this\n */\n\n\nproto.threads.pb.FindReply.prototype.addInstances = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.FindReply} returns this\n */\n\n\nproto.threads.pb.FindReply.prototype.clearInstancesList = function () {\n  return this.setInstancesList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.FindByIDRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.FindByIDRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.FindByIDRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.FindByIDRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbid: msg.getDbid_asB64(),\n      collectionname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      instanceid: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.FindByIDRequest}\n */\n\n\nproto.threads.pb.FindByIDRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.FindByIDRequest();\n  return proto.threads.pb.FindByIDRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.FindByIDRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.FindByIDRequest}\n */\n\n\nproto.threads.pb.FindByIDRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDbid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCollectionname(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setInstanceid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.FindByIDRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.FindByIDRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.FindByIDRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.FindByIDRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getCollectionname();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getInstanceid();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.FindByIDRequest.prototype.getDbid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\n\n\nproto.threads.pb.FindByIDRequest.prototype.getDbid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDbid())\n  );\n};\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.FindByIDRequest.prototype.getDbid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDbid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.FindByIDRequest} returns this\n */\n\n\nproto.threads.pb.FindByIDRequest.prototype.setDbid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string collectionName = 2;\n * @return {string}\n */\n\n\nproto.threads.pb.FindByIDRequest.prototype.getCollectionname = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.FindByIDRequest} returns this\n */\n\n\nproto.threads.pb.FindByIDRequest.prototype.setCollectionname = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string instanceID = 3;\n * @return {string}\n */\n\n\nproto.threads.pb.FindByIDRequest.prototype.getInstanceid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.FindByIDRequest} returns this\n */\n\n\nproto.threads.pb.FindByIDRequest.prototype.setInstanceid = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.FindByIDReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.FindByIDReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.FindByIDReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.FindByIDReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      instance: msg.getInstance_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.FindByIDReply}\n */\n\n\nproto.threads.pb.FindByIDReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.FindByIDReply();\n  return proto.threads.pb.FindByIDReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.FindByIDReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.FindByIDReply}\n */\n\n\nproto.threads.pb.FindByIDReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setInstance(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.FindByIDReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.FindByIDReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.FindByIDReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.FindByIDReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getInstance_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n};\n/**\n * optional bytes instance = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.FindByIDReply.prototype.getInstance = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes instance = 1;\n * This is a type-conversion wrapper around `getInstance()`\n * @return {string}\n */\n\n\nproto.threads.pb.FindByIDReply.prototype.getInstance_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getInstance())\n  );\n};\n/**\n * optional bytes instance = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getInstance()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.FindByIDReply.prototype.getInstance_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getInstance())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.FindByIDReply} returns this\n */\n\n\nproto.threads.pb.FindByIDReply.prototype.setInstance = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.StartTransactionRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.StartTransactionRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.StartTransactionRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.StartTransactionRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbid: msg.getDbid_asB64(),\n      collectionname: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.StartTransactionRequest}\n */\n\n\nproto.threads.pb.StartTransactionRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.StartTransactionRequest();\n  return proto.threads.pb.StartTransactionRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.StartTransactionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.StartTransactionRequest}\n */\n\n\nproto.threads.pb.StartTransactionRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDbid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCollectionname(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.StartTransactionRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.StartTransactionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.StartTransactionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.StartTransactionRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getCollectionname();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.StartTransactionRequest.prototype.getDbid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\n\n\nproto.threads.pb.StartTransactionRequest.prototype.getDbid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDbid())\n  );\n};\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.StartTransactionRequest.prototype.getDbid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDbid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.StartTransactionRequest} returns this\n */\n\n\nproto.threads.pb.StartTransactionRequest.prototype.setDbid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string collectionName = 2;\n * @return {string}\n */\n\n\nproto.threads.pb.StartTransactionRequest.prototype.getCollectionname = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.StartTransactionRequest} returns this\n */\n\n\nproto.threads.pb.StartTransactionRequest.prototype.setCollectionname = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.threads.pb.ReadTransactionRequest.oneofGroups_ = [[1, 2, 3, 4]];\n/**\n * @enum {number}\n */\n\nproto.threads.pb.ReadTransactionRequest.OptionCase = {\n  OPTION_NOT_SET: 0,\n  STARTTRANSACTIONREQUEST: 1,\n  HASREQUEST: 2,\n  FINDREQUEST: 3,\n  FINDBYIDREQUEST: 4\n};\n/**\n * @return {proto.threads.pb.ReadTransactionRequest.OptionCase}\n */\n\nproto.threads.pb.ReadTransactionRequest.prototype.getOptionCase = function () {\n  return (\n    /** @type {proto.threads.pb.ReadTransactionRequest.OptionCase} */\n    jspb.Message.computeOneofCase(this, proto.threads.pb.ReadTransactionRequest.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.ReadTransactionRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.ReadTransactionRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.ReadTransactionRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.ReadTransactionRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      starttransactionrequest: (f = msg.getStarttransactionrequest()) && proto.threads.pb.StartTransactionRequest.toObject(includeInstance, f),\n      hasrequest: (f = msg.getHasrequest()) && proto.threads.pb.HasRequest.toObject(includeInstance, f),\n      findrequest: (f = msg.getFindrequest()) && proto.threads.pb.FindRequest.toObject(includeInstance, f),\n      findbyidrequest: (f = msg.getFindbyidrequest()) && proto.threads.pb.FindByIDRequest.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ReadTransactionRequest}\n */\n\n\nproto.threads.pb.ReadTransactionRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ReadTransactionRequest();\n  return proto.threads.pb.ReadTransactionRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ReadTransactionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ReadTransactionRequest}\n */\n\n\nproto.threads.pb.ReadTransactionRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.threads.pb.StartTransactionRequest();\n        reader.readMessage(value, proto.threads.pb.StartTransactionRequest.deserializeBinaryFromReader);\n        msg.setStarttransactionrequest(value);\n        break;\n\n      case 2:\n        var value = new proto.threads.pb.HasRequest();\n        reader.readMessage(value, proto.threads.pb.HasRequest.deserializeBinaryFromReader);\n        msg.setHasrequest(value);\n        break;\n\n      case 3:\n        var value = new proto.threads.pb.FindRequest();\n        reader.readMessage(value, proto.threads.pb.FindRequest.deserializeBinaryFromReader);\n        msg.setFindrequest(value);\n        break;\n\n      case 4:\n        var value = new proto.threads.pb.FindByIDRequest();\n        reader.readMessage(value, proto.threads.pb.FindByIDRequest.deserializeBinaryFromReader);\n        msg.setFindbyidrequest(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.ReadTransactionRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ReadTransactionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ReadTransactionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.ReadTransactionRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getStarttransactionrequest();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.threads.pb.StartTransactionRequest.serializeBinaryToWriter);\n  }\n\n  f = message.getHasrequest();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.threads.pb.HasRequest.serializeBinaryToWriter);\n  }\n\n  f = message.getFindrequest();\n\n  if (f != null) {\n    writer.writeMessage(3, f, proto.threads.pb.FindRequest.serializeBinaryToWriter);\n  }\n\n  f = message.getFindbyidrequest();\n\n  if (f != null) {\n    writer.writeMessage(4, f, proto.threads.pb.FindByIDRequest.serializeBinaryToWriter);\n  }\n};\n/**\n * optional StartTransactionRequest startTransactionRequest = 1;\n * @return {?proto.threads.pb.StartTransactionRequest}\n */\n\n\nproto.threads.pb.ReadTransactionRequest.prototype.getStarttransactionrequest = function () {\n  return (\n    /** @type{?proto.threads.pb.StartTransactionRequest} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.StartTransactionRequest, 1)\n  );\n};\n/**\n * @param {?proto.threads.pb.StartTransactionRequest|undefined} value\n * @return {!proto.threads.pb.ReadTransactionRequest} returns this\n*/\n\n\nproto.threads.pb.ReadTransactionRequest.prototype.setStarttransactionrequest = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.threads.pb.ReadTransactionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.ReadTransactionRequest} returns this\n */\n\n\nproto.threads.pb.ReadTransactionRequest.prototype.clearStarttransactionrequest = function () {\n  return this.setStarttransactionrequest(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.ReadTransactionRequest.prototype.hasStarttransactionrequest = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional HasRequest hasRequest = 2;\n * @return {?proto.threads.pb.HasRequest}\n */\n\n\nproto.threads.pb.ReadTransactionRequest.prototype.getHasrequest = function () {\n  return (\n    /** @type{?proto.threads.pb.HasRequest} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.HasRequest, 2)\n  );\n};\n/**\n * @param {?proto.threads.pb.HasRequest|undefined} value\n * @return {!proto.threads.pb.ReadTransactionRequest} returns this\n*/\n\n\nproto.threads.pb.ReadTransactionRequest.prototype.setHasrequest = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.threads.pb.ReadTransactionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.ReadTransactionRequest} returns this\n */\n\n\nproto.threads.pb.ReadTransactionRequest.prototype.clearHasrequest = function () {\n  return this.setHasrequest(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.ReadTransactionRequest.prototype.hasHasrequest = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional FindRequest findRequest = 3;\n * @return {?proto.threads.pb.FindRequest}\n */\n\n\nproto.threads.pb.ReadTransactionRequest.prototype.getFindrequest = function () {\n  return (\n    /** @type{?proto.threads.pb.FindRequest} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.FindRequest, 3)\n  );\n};\n/**\n * @param {?proto.threads.pb.FindRequest|undefined} value\n * @return {!proto.threads.pb.ReadTransactionRequest} returns this\n*/\n\n\nproto.threads.pb.ReadTransactionRequest.prototype.setFindrequest = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 3, proto.threads.pb.ReadTransactionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.ReadTransactionRequest} returns this\n */\n\n\nproto.threads.pb.ReadTransactionRequest.prototype.clearFindrequest = function () {\n  return this.setFindrequest(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.ReadTransactionRequest.prototype.hasFindrequest = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional FindByIDRequest findByIDRequest = 4;\n * @return {?proto.threads.pb.FindByIDRequest}\n */\n\n\nproto.threads.pb.ReadTransactionRequest.prototype.getFindbyidrequest = function () {\n  return (\n    /** @type{?proto.threads.pb.FindByIDRequest} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.FindByIDRequest, 4)\n  );\n};\n/**\n * @param {?proto.threads.pb.FindByIDRequest|undefined} value\n * @return {!proto.threads.pb.ReadTransactionRequest} returns this\n*/\n\n\nproto.threads.pb.ReadTransactionRequest.prototype.setFindbyidrequest = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 4, proto.threads.pb.ReadTransactionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.ReadTransactionRequest} returns this\n */\n\n\nproto.threads.pb.ReadTransactionRequest.prototype.clearFindbyidrequest = function () {\n  return this.setFindbyidrequest(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.ReadTransactionRequest.prototype.hasFindbyidrequest = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.threads.pb.ReadTransactionReply.oneofGroups_ = [[1, 2, 3]];\n/**\n * @enum {number}\n */\n\nproto.threads.pb.ReadTransactionReply.OptionCase = {\n  OPTION_NOT_SET: 0,\n  HASREPLY: 1,\n  FINDREPLY: 2,\n  FINDBYIDREPLY: 3\n};\n/**\n * @return {proto.threads.pb.ReadTransactionReply.OptionCase}\n */\n\nproto.threads.pb.ReadTransactionReply.prototype.getOptionCase = function () {\n  return (\n    /** @type {proto.threads.pb.ReadTransactionReply.OptionCase} */\n    jspb.Message.computeOneofCase(this, proto.threads.pb.ReadTransactionReply.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.ReadTransactionReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.ReadTransactionReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.ReadTransactionReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.ReadTransactionReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      hasreply: (f = msg.getHasreply()) && proto.threads.pb.HasReply.toObject(includeInstance, f),\n      findreply: (f = msg.getFindreply()) && proto.threads.pb.FindReply.toObject(includeInstance, f),\n      findbyidreply: (f = msg.getFindbyidreply()) && proto.threads.pb.FindByIDReply.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ReadTransactionReply}\n */\n\n\nproto.threads.pb.ReadTransactionReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ReadTransactionReply();\n  return proto.threads.pb.ReadTransactionReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ReadTransactionReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ReadTransactionReply}\n */\n\n\nproto.threads.pb.ReadTransactionReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.threads.pb.HasReply();\n        reader.readMessage(value, proto.threads.pb.HasReply.deserializeBinaryFromReader);\n        msg.setHasreply(value);\n        break;\n\n      case 2:\n        var value = new proto.threads.pb.FindReply();\n        reader.readMessage(value, proto.threads.pb.FindReply.deserializeBinaryFromReader);\n        msg.setFindreply(value);\n        break;\n\n      case 3:\n        var value = new proto.threads.pb.FindByIDReply();\n        reader.readMessage(value, proto.threads.pb.FindByIDReply.deserializeBinaryFromReader);\n        msg.setFindbyidreply(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.ReadTransactionReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ReadTransactionReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ReadTransactionReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.ReadTransactionReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getHasreply();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.threads.pb.HasReply.serializeBinaryToWriter);\n  }\n\n  f = message.getFindreply();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.threads.pb.FindReply.serializeBinaryToWriter);\n  }\n\n  f = message.getFindbyidreply();\n\n  if (f != null) {\n    writer.writeMessage(3, f, proto.threads.pb.FindByIDReply.serializeBinaryToWriter);\n  }\n};\n/**\n * optional HasReply hasReply = 1;\n * @return {?proto.threads.pb.HasReply}\n */\n\n\nproto.threads.pb.ReadTransactionReply.prototype.getHasreply = function () {\n  return (\n    /** @type{?proto.threads.pb.HasReply} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.HasReply, 1)\n  );\n};\n/**\n * @param {?proto.threads.pb.HasReply|undefined} value\n * @return {!proto.threads.pb.ReadTransactionReply} returns this\n*/\n\n\nproto.threads.pb.ReadTransactionReply.prototype.setHasreply = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.threads.pb.ReadTransactionReply.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.ReadTransactionReply} returns this\n */\n\n\nproto.threads.pb.ReadTransactionReply.prototype.clearHasreply = function () {\n  return this.setHasreply(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.ReadTransactionReply.prototype.hasHasreply = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional FindReply findReply = 2;\n * @return {?proto.threads.pb.FindReply}\n */\n\n\nproto.threads.pb.ReadTransactionReply.prototype.getFindreply = function () {\n  return (\n    /** @type{?proto.threads.pb.FindReply} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.FindReply, 2)\n  );\n};\n/**\n * @param {?proto.threads.pb.FindReply|undefined} value\n * @return {!proto.threads.pb.ReadTransactionReply} returns this\n*/\n\n\nproto.threads.pb.ReadTransactionReply.prototype.setFindreply = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.threads.pb.ReadTransactionReply.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.ReadTransactionReply} returns this\n */\n\n\nproto.threads.pb.ReadTransactionReply.prototype.clearFindreply = function () {\n  return this.setFindreply(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.ReadTransactionReply.prototype.hasFindreply = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional FindByIDReply findByIDReply = 3;\n * @return {?proto.threads.pb.FindByIDReply}\n */\n\n\nproto.threads.pb.ReadTransactionReply.prototype.getFindbyidreply = function () {\n  return (\n    /** @type{?proto.threads.pb.FindByIDReply} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.FindByIDReply, 3)\n  );\n};\n/**\n * @param {?proto.threads.pb.FindByIDReply|undefined} value\n * @return {!proto.threads.pb.ReadTransactionReply} returns this\n*/\n\n\nproto.threads.pb.ReadTransactionReply.prototype.setFindbyidreply = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 3, proto.threads.pb.ReadTransactionReply.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.ReadTransactionReply} returns this\n */\n\n\nproto.threads.pb.ReadTransactionReply.prototype.clearFindbyidreply = function () {\n  return this.setFindbyidreply(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.ReadTransactionReply.prototype.hasFindbyidreply = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.threads.pb.WriteTransactionRequest.oneofGroups_ = [[1, 2, 3, 4, 5, 6, 7]];\n/**\n * @enum {number}\n */\n\nproto.threads.pb.WriteTransactionRequest.OptionCase = {\n  OPTION_NOT_SET: 0,\n  STARTTRANSACTIONREQUEST: 1,\n  CREATEREQUEST: 2,\n  SAVEREQUEST: 3,\n  DELETEREQUEST: 4,\n  HASREQUEST: 5,\n  FINDREQUEST: 6,\n  FINDBYIDREQUEST: 7\n};\n/**\n * @return {proto.threads.pb.WriteTransactionRequest.OptionCase}\n */\n\nproto.threads.pb.WriteTransactionRequest.prototype.getOptionCase = function () {\n  return (\n    /** @type {proto.threads.pb.WriteTransactionRequest.OptionCase} */\n    jspb.Message.computeOneofCase(this, proto.threads.pb.WriteTransactionRequest.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.WriteTransactionRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.WriteTransactionRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.WriteTransactionRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.WriteTransactionRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      starttransactionrequest: (f = msg.getStarttransactionrequest()) && proto.threads.pb.StartTransactionRequest.toObject(includeInstance, f),\n      createrequest: (f = msg.getCreaterequest()) && proto.threads.pb.CreateRequest.toObject(includeInstance, f),\n      saverequest: (f = msg.getSaverequest()) && proto.threads.pb.SaveRequest.toObject(includeInstance, f),\n      deleterequest: (f = msg.getDeleterequest()) && proto.threads.pb.DeleteRequest.toObject(includeInstance, f),\n      hasrequest: (f = msg.getHasrequest()) && proto.threads.pb.HasRequest.toObject(includeInstance, f),\n      findrequest: (f = msg.getFindrequest()) && proto.threads.pb.FindRequest.toObject(includeInstance, f),\n      findbyidrequest: (f = msg.getFindbyidrequest()) && proto.threads.pb.FindByIDRequest.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.WriteTransactionRequest}\n */\n\n\nproto.threads.pb.WriteTransactionRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.WriteTransactionRequest();\n  return proto.threads.pb.WriteTransactionRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.WriteTransactionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.WriteTransactionRequest}\n */\n\n\nproto.threads.pb.WriteTransactionRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.threads.pb.StartTransactionRequest();\n        reader.readMessage(value, proto.threads.pb.StartTransactionRequest.deserializeBinaryFromReader);\n        msg.setStarttransactionrequest(value);\n        break;\n\n      case 2:\n        var value = new proto.threads.pb.CreateRequest();\n        reader.readMessage(value, proto.threads.pb.CreateRequest.deserializeBinaryFromReader);\n        msg.setCreaterequest(value);\n        break;\n\n      case 3:\n        var value = new proto.threads.pb.SaveRequest();\n        reader.readMessage(value, proto.threads.pb.SaveRequest.deserializeBinaryFromReader);\n        msg.setSaverequest(value);\n        break;\n\n      case 4:\n        var value = new proto.threads.pb.DeleteRequest();\n        reader.readMessage(value, proto.threads.pb.DeleteRequest.deserializeBinaryFromReader);\n        msg.setDeleterequest(value);\n        break;\n\n      case 5:\n        var value = new proto.threads.pb.HasRequest();\n        reader.readMessage(value, proto.threads.pb.HasRequest.deserializeBinaryFromReader);\n        msg.setHasrequest(value);\n        break;\n\n      case 6:\n        var value = new proto.threads.pb.FindRequest();\n        reader.readMessage(value, proto.threads.pb.FindRequest.deserializeBinaryFromReader);\n        msg.setFindrequest(value);\n        break;\n\n      case 7:\n        var value = new proto.threads.pb.FindByIDRequest();\n        reader.readMessage(value, proto.threads.pb.FindByIDRequest.deserializeBinaryFromReader);\n        msg.setFindbyidrequest(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.WriteTransactionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.WriteTransactionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.WriteTransactionRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getStarttransactionrequest();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.threads.pb.StartTransactionRequest.serializeBinaryToWriter);\n  }\n\n  f = message.getCreaterequest();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.threads.pb.CreateRequest.serializeBinaryToWriter);\n  }\n\n  f = message.getSaverequest();\n\n  if (f != null) {\n    writer.writeMessage(3, f, proto.threads.pb.SaveRequest.serializeBinaryToWriter);\n  }\n\n  f = message.getDeleterequest();\n\n  if (f != null) {\n    writer.writeMessage(4, f, proto.threads.pb.DeleteRequest.serializeBinaryToWriter);\n  }\n\n  f = message.getHasrequest();\n\n  if (f != null) {\n    writer.writeMessage(5, f, proto.threads.pb.HasRequest.serializeBinaryToWriter);\n  }\n\n  f = message.getFindrequest();\n\n  if (f != null) {\n    writer.writeMessage(6, f, proto.threads.pb.FindRequest.serializeBinaryToWriter);\n  }\n\n  f = message.getFindbyidrequest();\n\n  if (f != null) {\n    writer.writeMessage(7, f, proto.threads.pb.FindByIDRequest.serializeBinaryToWriter);\n  }\n};\n/**\n * optional StartTransactionRequest startTransactionRequest = 1;\n * @return {?proto.threads.pb.StartTransactionRequest}\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.getStarttransactionrequest = function () {\n  return (\n    /** @type{?proto.threads.pb.StartTransactionRequest} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.StartTransactionRequest, 1)\n  );\n};\n/**\n * @param {?proto.threads.pb.StartTransactionRequest|undefined} value\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n*/\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.setStarttransactionrequest = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.threads.pb.WriteTransactionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.clearStarttransactionrequest = function () {\n  return this.setStarttransactionrequest(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.hasStarttransactionrequest = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional CreateRequest createRequest = 2;\n * @return {?proto.threads.pb.CreateRequest}\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.getCreaterequest = function () {\n  return (\n    /** @type{?proto.threads.pb.CreateRequest} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.CreateRequest, 2)\n  );\n};\n/**\n * @param {?proto.threads.pb.CreateRequest|undefined} value\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n*/\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.setCreaterequest = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.threads.pb.WriteTransactionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.clearCreaterequest = function () {\n  return this.setCreaterequest(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.hasCreaterequest = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional SaveRequest saveRequest = 3;\n * @return {?proto.threads.pb.SaveRequest}\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.getSaverequest = function () {\n  return (\n    /** @type{?proto.threads.pb.SaveRequest} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.SaveRequest, 3)\n  );\n};\n/**\n * @param {?proto.threads.pb.SaveRequest|undefined} value\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n*/\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.setSaverequest = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 3, proto.threads.pb.WriteTransactionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.clearSaverequest = function () {\n  return this.setSaverequest(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.hasSaverequest = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional DeleteRequest deleteRequest = 4;\n * @return {?proto.threads.pb.DeleteRequest}\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.getDeleterequest = function () {\n  return (\n    /** @type{?proto.threads.pb.DeleteRequest} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.DeleteRequest, 4)\n  );\n};\n/**\n * @param {?proto.threads.pb.DeleteRequest|undefined} value\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n*/\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.setDeleterequest = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 4, proto.threads.pb.WriteTransactionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.clearDeleterequest = function () {\n  return this.setDeleterequest(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.hasDeleterequest = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional HasRequest hasRequest = 5;\n * @return {?proto.threads.pb.HasRequest}\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.getHasrequest = function () {\n  return (\n    /** @type{?proto.threads.pb.HasRequest} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.HasRequest, 5)\n  );\n};\n/**\n * @param {?proto.threads.pb.HasRequest|undefined} value\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n*/\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.setHasrequest = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 5, proto.threads.pb.WriteTransactionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.clearHasrequest = function () {\n  return this.setHasrequest(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.hasHasrequest = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional FindRequest findRequest = 6;\n * @return {?proto.threads.pb.FindRequest}\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.getFindrequest = function () {\n  return (\n    /** @type{?proto.threads.pb.FindRequest} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.FindRequest, 6)\n  );\n};\n/**\n * @param {?proto.threads.pb.FindRequest|undefined} value\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n*/\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.setFindrequest = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 6, proto.threads.pb.WriteTransactionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.clearFindrequest = function () {\n  return this.setFindrequest(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.hasFindrequest = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional FindByIDRequest findByIDRequest = 7;\n * @return {?proto.threads.pb.FindByIDRequest}\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.getFindbyidrequest = function () {\n  return (\n    /** @type{?proto.threads.pb.FindByIDRequest} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.FindByIDRequest, 7)\n  );\n};\n/**\n * @param {?proto.threads.pb.FindByIDRequest|undefined} value\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n*/\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.setFindbyidrequest = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 7, proto.threads.pb.WriteTransactionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.clearFindbyidrequest = function () {\n  return this.setFindbyidrequest(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.WriteTransactionRequest.prototype.hasFindbyidrequest = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.threads.pb.WriteTransactionReply.oneofGroups_ = [[1, 2, 3, 4, 5, 6]];\n/**\n * @enum {number}\n */\n\nproto.threads.pb.WriteTransactionReply.OptionCase = {\n  OPTION_NOT_SET: 0,\n  CREATEREPLY: 1,\n  SAVEREPLY: 2,\n  DELETEREPLY: 3,\n  HASREPLY: 4,\n  FINDREPLY: 5,\n  FINDBYIDREPLY: 6\n};\n/**\n * @return {proto.threads.pb.WriteTransactionReply.OptionCase}\n */\n\nproto.threads.pb.WriteTransactionReply.prototype.getOptionCase = function () {\n  return (\n    /** @type {proto.threads.pb.WriteTransactionReply.OptionCase} */\n    jspb.Message.computeOneofCase(this, proto.threads.pb.WriteTransactionReply.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.WriteTransactionReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.WriteTransactionReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.WriteTransactionReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.WriteTransactionReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      createreply: (f = msg.getCreatereply()) && proto.threads.pb.CreateReply.toObject(includeInstance, f),\n      savereply: (f = msg.getSavereply()) && proto.threads.pb.SaveReply.toObject(includeInstance, f),\n      deletereply: (f = msg.getDeletereply()) && proto.threads.pb.DeleteReply.toObject(includeInstance, f),\n      hasreply: (f = msg.getHasreply()) && proto.threads.pb.HasReply.toObject(includeInstance, f),\n      findreply: (f = msg.getFindreply()) && proto.threads.pb.FindReply.toObject(includeInstance, f),\n      findbyidreply: (f = msg.getFindbyidreply()) && proto.threads.pb.FindByIDReply.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.WriteTransactionReply}\n */\n\n\nproto.threads.pb.WriteTransactionReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.WriteTransactionReply();\n  return proto.threads.pb.WriteTransactionReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.WriteTransactionReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.WriteTransactionReply}\n */\n\n\nproto.threads.pb.WriteTransactionReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.threads.pb.CreateReply();\n        reader.readMessage(value, proto.threads.pb.CreateReply.deserializeBinaryFromReader);\n        msg.setCreatereply(value);\n        break;\n\n      case 2:\n        var value = new proto.threads.pb.SaveReply();\n        reader.readMessage(value, proto.threads.pb.SaveReply.deserializeBinaryFromReader);\n        msg.setSavereply(value);\n        break;\n\n      case 3:\n        var value = new proto.threads.pb.DeleteReply();\n        reader.readMessage(value, proto.threads.pb.DeleteReply.deserializeBinaryFromReader);\n        msg.setDeletereply(value);\n        break;\n\n      case 4:\n        var value = new proto.threads.pb.HasReply();\n        reader.readMessage(value, proto.threads.pb.HasReply.deserializeBinaryFromReader);\n        msg.setHasreply(value);\n        break;\n\n      case 5:\n        var value = new proto.threads.pb.FindReply();\n        reader.readMessage(value, proto.threads.pb.FindReply.deserializeBinaryFromReader);\n        msg.setFindreply(value);\n        break;\n\n      case 6:\n        var value = new proto.threads.pb.FindByIDReply();\n        reader.readMessage(value, proto.threads.pb.FindByIDReply.deserializeBinaryFromReader);\n        msg.setFindbyidreply(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.WriteTransactionReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.WriteTransactionReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.WriteTransactionReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCreatereply();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.threads.pb.CreateReply.serializeBinaryToWriter);\n  }\n\n  f = message.getSavereply();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.threads.pb.SaveReply.serializeBinaryToWriter);\n  }\n\n  f = message.getDeletereply();\n\n  if (f != null) {\n    writer.writeMessage(3, f, proto.threads.pb.DeleteReply.serializeBinaryToWriter);\n  }\n\n  f = message.getHasreply();\n\n  if (f != null) {\n    writer.writeMessage(4, f, proto.threads.pb.HasReply.serializeBinaryToWriter);\n  }\n\n  f = message.getFindreply();\n\n  if (f != null) {\n    writer.writeMessage(5, f, proto.threads.pb.FindReply.serializeBinaryToWriter);\n  }\n\n  f = message.getFindbyidreply();\n\n  if (f != null) {\n    writer.writeMessage(6, f, proto.threads.pb.FindByIDReply.serializeBinaryToWriter);\n  }\n};\n/**\n * optional CreateReply createReply = 1;\n * @return {?proto.threads.pb.CreateReply}\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.getCreatereply = function () {\n  return (\n    /** @type{?proto.threads.pb.CreateReply} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.CreateReply, 1)\n  );\n};\n/**\n * @param {?proto.threads.pb.CreateReply|undefined} value\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n*/\n\n\nproto.threads.pb.WriteTransactionReply.prototype.setCreatereply = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.threads.pb.WriteTransactionReply.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.clearCreatereply = function () {\n  return this.setCreatereply(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.hasCreatereply = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional SaveReply saveReply = 2;\n * @return {?proto.threads.pb.SaveReply}\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.getSavereply = function () {\n  return (\n    /** @type{?proto.threads.pb.SaveReply} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.SaveReply, 2)\n  );\n};\n/**\n * @param {?proto.threads.pb.SaveReply|undefined} value\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n*/\n\n\nproto.threads.pb.WriteTransactionReply.prototype.setSavereply = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.threads.pb.WriteTransactionReply.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.clearSavereply = function () {\n  return this.setSavereply(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.hasSavereply = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional DeleteReply deleteReply = 3;\n * @return {?proto.threads.pb.DeleteReply}\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.getDeletereply = function () {\n  return (\n    /** @type{?proto.threads.pb.DeleteReply} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.DeleteReply, 3)\n  );\n};\n/**\n * @param {?proto.threads.pb.DeleteReply|undefined} value\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n*/\n\n\nproto.threads.pb.WriteTransactionReply.prototype.setDeletereply = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 3, proto.threads.pb.WriteTransactionReply.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.clearDeletereply = function () {\n  return this.setDeletereply(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.hasDeletereply = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional HasReply hasReply = 4;\n * @return {?proto.threads.pb.HasReply}\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.getHasreply = function () {\n  return (\n    /** @type{?proto.threads.pb.HasReply} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.HasReply, 4)\n  );\n};\n/**\n * @param {?proto.threads.pb.HasReply|undefined} value\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n*/\n\n\nproto.threads.pb.WriteTransactionReply.prototype.setHasreply = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 4, proto.threads.pb.WriteTransactionReply.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.clearHasreply = function () {\n  return this.setHasreply(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.hasHasreply = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional FindReply findReply = 5;\n * @return {?proto.threads.pb.FindReply}\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.getFindreply = function () {\n  return (\n    /** @type{?proto.threads.pb.FindReply} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.FindReply, 5)\n  );\n};\n/**\n * @param {?proto.threads.pb.FindReply|undefined} value\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n*/\n\n\nproto.threads.pb.WriteTransactionReply.prototype.setFindreply = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 5, proto.threads.pb.WriteTransactionReply.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.clearFindreply = function () {\n  return this.setFindreply(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.hasFindreply = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional FindByIDReply findByIDReply = 6;\n * @return {?proto.threads.pb.FindByIDReply}\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.getFindbyidreply = function () {\n  return (\n    /** @type{?proto.threads.pb.FindByIDReply} */\n    jspb.Message.getWrapperField(this, proto.threads.pb.FindByIDReply, 6)\n  );\n};\n/**\n * @param {?proto.threads.pb.FindByIDReply|undefined} value\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n*/\n\n\nproto.threads.pb.WriteTransactionReply.prototype.setFindbyidreply = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 6, proto.threads.pb.WriteTransactionReply.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.clearFindbyidreply = function () {\n  return this.setFindbyidreply(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.threads.pb.WriteTransactionReply.prototype.hasFindbyidreply = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.threads.pb.ListenRequest.repeatedFields_ = [2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.ListenRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.ListenRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.ListenRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.ListenRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dbid: msg.getDbid_asB64(),\n      filtersList: jspb.Message.toObjectList(msg.getFiltersList(), proto.threads.pb.ListenRequest.Filter.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ListenRequest}\n */\n\n\nproto.threads.pb.ListenRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ListenRequest();\n  return proto.threads.pb.ListenRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ListenRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ListenRequest}\n */\n\n\nproto.threads.pb.ListenRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDbid(value);\n        break;\n\n      case 2:\n        var value = new proto.threads.pb.ListenRequest.Filter();\n        reader.readMessage(value, proto.threads.pb.ListenRequest.Filter.deserializeBinaryFromReader);\n        msg.addFilters(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.ListenRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ListenRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ListenRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.ListenRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getFiltersList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(2, f, proto.threads.pb.ListenRequest.Filter.serializeBinaryToWriter);\n  }\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.ListenRequest.Filter.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.ListenRequest.Filter.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.ListenRequest.Filter} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.ListenRequest.Filter.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      collectionname: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      instanceid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      action: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ListenRequest.Filter}\n */\n\n\nproto.threads.pb.ListenRequest.Filter.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ListenRequest.Filter();\n  return proto.threads.pb.ListenRequest.Filter.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ListenRequest.Filter} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ListenRequest.Filter}\n */\n\n\nproto.threads.pb.ListenRequest.Filter.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCollectionname(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setInstanceid(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!proto.threads.pb.ListenRequest.Filter.Action} */\n        reader.readEnum();\n        msg.setAction(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.ListenRequest.Filter.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ListenRequest.Filter.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ListenRequest.Filter} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.ListenRequest.Filter.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCollectionname();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getInstanceid();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getAction();\n\n  if (f !== 0.0) {\n    writer.writeEnum(3, f);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.threads.pb.ListenRequest.Filter.Action = {\n  ALL: 0,\n  CREATE: 1,\n  SAVE: 2,\n  DELETE: 3\n};\n/**\n * optional string collectionName = 1;\n * @return {string}\n */\n\nproto.threads.pb.ListenRequest.Filter.prototype.getCollectionname = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.ListenRequest.Filter} returns this\n */\n\n\nproto.threads.pb.ListenRequest.Filter.prototype.setCollectionname = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string instanceID = 2;\n * @return {string}\n */\n\n\nproto.threads.pb.ListenRequest.Filter.prototype.getInstanceid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.ListenRequest.Filter} returns this\n */\n\n\nproto.threads.pb.ListenRequest.Filter.prototype.setInstanceid = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional Action action = 3;\n * @return {!proto.threads.pb.ListenRequest.Filter.Action}\n */\n\n\nproto.threads.pb.ListenRequest.Filter.prototype.getAction = function () {\n  return (\n    /** @type {!proto.threads.pb.ListenRequest.Filter.Action} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {!proto.threads.pb.ListenRequest.Filter.Action} value\n * @return {!proto.threads.pb.ListenRequest.Filter} returns this\n */\n\n\nproto.threads.pb.ListenRequest.Filter.prototype.setAction = function (value) {\n  return jspb.Message.setProto3EnumField(this, 3, value);\n};\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.ListenRequest.prototype.getDbid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\n\n\nproto.threads.pb.ListenRequest.prototype.getDbid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDbid())\n  );\n};\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.ListenRequest.prototype.getDbid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDbid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.ListenRequest} returns this\n */\n\n\nproto.threads.pb.ListenRequest.prototype.setDbid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * repeated Filter filters = 2;\n * @return {!Array<!proto.threads.pb.ListenRequest.Filter>}\n */\n\n\nproto.threads.pb.ListenRequest.prototype.getFiltersList = function () {\n  return (\n    /** @type{!Array<!proto.threads.pb.ListenRequest.Filter>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.threads.pb.ListenRequest.Filter, 2)\n  );\n};\n/**\n * @param {!Array<!proto.threads.pb.ListenRequest.Filter>} value\n * @return {!proto.threads.pb.ListenRequest} returns this\n*/\n\n\nproto.threads.pb.ListenRequest.prototype.setFiltersList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n/**\n * @param {!proto.threads.pb.ListenRequest.Filter=} opt_value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.ListenRequest.Filter}\n */\n\n\nproto.threads.pb.ListenRequest.prototype.addFilters = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.threads.pb.ListenRequest.Filter, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.ListenRequest} returns this\n */\n\n\nproto.threads.pb.ListenRequest.prototype.clearFiltersList = function () {\n  return this.setFiltersList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.threads.pb.ListenReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.threads.pb.ListenReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.threads.pb.ListenReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.threads.pb.ListenReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      collectionname: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      instanceid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      action: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      instance: msg.getInstance_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ListenReply}\n */\n\n\nproto.threads.pb.ListenReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ListenReply();\n  return proto.threads.pb.ListenReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ListenReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ListenReply}\n */\n\n\nproto.threads.pb.ListenReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCollectionname(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setInstanceid(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!proto.threads.pb.ListenReply.Action} */\n        reader.readEnum();\n        msg.setAction(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setInstance(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.ListenReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ListenReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ListenReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.threads.pb.ListenReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCollectionname();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getInstanceid();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getAction();\n\n  if (f !== 0.0) {\n    writer.writeEnum(3, f);\n  }\n\n  f = message.getInstance_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(4, f);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.threads.pb.ListenReply.Action = {\n  CREATE: 0,\n  SAVE: 1,\n  DELETE: 2\n};\n/**\n * optional string collectionName = 1;\n * @return {string}\n */\n\nproto.threads.pb.ListenReply.prototype.getCollectionname = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.ListenReply} returns this\n */\n\n\nproto.threads.pb.ListenReply.prototype.setCollectionname = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string instanceID = 2;\n * @return {string}\n */\n\n\nproto.threads.pb.ListenReply.prototype.getInstanceid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.threads.pb.ListenReply} returns this\n */\n\n\nproto.threads.pb.ListenReply.prototype.setInstanceid = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional Action action = 3;\n * @return {!proto.threads.pb.ListenReply.Action}\n */\n\n\nproto.threads.pb.ListenReply.prototype.getAction = function () {\n  return (\n    /** @type {!proto.threads.pb.ListenReply.Action} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {!proto.threads.pb.ListenReply.Action} value\n * @return {!proto.threads.pb.ListenReply} returns this\n */\n\n\nproto.threads.pb.ListenReply.prototype.setAction = function (value) {\n  return jspb.Message.setProto3EnumField(this, 3, value);\n};\n/**\n * optional bytes instance = 4;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.threads.pb.ListenReply.prototype.getInstance = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * optional bytes instance = 4;\n * This is a type-conversion wrapper around `getInstance()`\n * @return {string}\n */\n\n\nproto.threads.pb.ListenReply.prototype.getInstance_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getInstance())\n  );\n};\n/**\n * optional bytes instance = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getInstance()`\n * @return {!Uint8Array}\n */\n\n\nproto.threads.pb.ListenReply.prototype.getInstance_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getInstance())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.ListenReply} returns this\n */\n\n\nproto.threads.pb.ListenReply.prototype.setInstance = function (value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\ngoog.object.extend(exports, proto.threads.pb);","map":{"version":3,"sources":["/Users/nassarhayat/apps/textiletable/js-examples/bucket-photo-gallery/node_modules/@textile/threads-client-grpc/threads_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","threads","pb","GetTokenRequest","opt_data","Message","initialize","oneofGroups_","inherits","DEBUG","COMPILED","displayName","GetTokenReply","NewDBRequest","repeatedFields_","NewDBFromAddrRequest","CollectionConfig","Index","NewDBReply","ListDBsRequest","ListDBsReply","DB","GetDBInfoRequest","GetDBInfoReply","DeleteDBRequest","DeleteDBReply","NewCollectionRequest","NewCollectionReply","UpdateCollectionRequest","UpdateCollectionReply","DeleteCollectionRequest","DeleteCollectionReply","GetCollectionInfoRequest","GetCollectionInfoReply","GetCollectionIndexesRequest","GetCollectionIndexesReply","ListCollectionsRequest","ListCollectionsReply","CreateRequest","CreateReply","SaveRequest","SaveReply","DeleteRequest","DeleteReply","HasRequest","HasReply","FindRequest","FindReply","FindByIDRequest","FindByIDReply","StartTransactionRequest","ReadTransactionRequest","ReadTransactionReply","WriteTransactionRequest","WriteTransactionReply","ListenRequest","Filter","ListenReply","PayloadCase","PAYLOAD_NOT_SET","KEY","SIGNATURE","prototype","getPayloadCase","computeOneofCase","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","f","obj","key","getFieldWithDefault","signature","getSignature_asB64","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setKey","readBytes","setSignature","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getField","writeString","writeBytes","getKey","setOneofField","clearKey","hasKey","getSignature","bytesAsB64","getSignature_asU8","bytesAsU8","clearSignature","hasSignature","CHALLENGE","TOKEN","challenge","getChallenge_asB64","token","setChallenge","setToken","getChallenge","getChallenge_asU8","clearChallenge","hasChallenge","getToken","clearToken","hasToken","dbid","getDbid_asB64","collectionsList","toObjectList","getCollectionsList","name","setDbid","readMessage","addCollections","setName","getDbid_asU8","length","writeRepeatedMessage","getName","getDbid","setProto3BytesField","getRepeatedWrapperField","setCollectionsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearCollectionsList","setProto3StringField","addr","getAddr_asB64","getKey_asB64","block","getBooleanFieldWithDefault","setAddr","readBool","setBlock","getAddr_asU8","getKey_asU8","getBlock","writeBool","getAddr","setProto3BooleanField","schema","getSchema_asB64","indexesList","getIndexesList","setSchema","addIndexes","getSchema_asU8","getSchema","setIndexesList","clearIndexesList","path","unique","setPath","setUnique","getPath","getUnique","dbsList","getDbsList","addDbs","info","getInfo","setInfo","writeMessage","getWrapperField","setWrapperField","clearInfo","hasInfo","setDbsList","clearDbsList","addrsList","getAddrsList_asB64","addAddrs","getAddrsList_asU8","writeRepeatedBytes","getAddrsList","getRepeatedField","bytesListAsB64","bytesListAsU8","setAddrsList","setField","addToRepeatedField","clearAddrsList","config","getConfig","setConfig","clearConfig","hasConfig","collectionname","instancesList","getInstancesList_asB64","setCollectionname","addInstances","getCollectionname","getInstancesList_asU8","getInstancesList","setInstancesList","clearInstancesList","instanceidsList","addInstanceids","getInstanceidsList","writeRepeatedString","setInstanceidsList","clearInstanceidsList","exists","setExists","getExists","queryjson","getQueryjson_asB64","setQueryjson","getQueryjson_asU8","getQueryjson","instanceid","setInstanceid","getInstanceid","instance","getInstance_asB64","setInstance","getInstance_asU8","getInstance","OptionCase","OPTION_NOT_SET","STARTTRANSACTIONREQUEST","HASREQUEST","FINDREQUEST","FINDBYIDREQUEST","getOptionCase","starttransactionrequest","getStarttransactionrequest","hasrequest","getHasrequest","findrequest","getFindrequest","findbyidrequest","getFindbyidrequest","setStarttransactionrequest","setHasrequest","setFindrequest","setFindbyidrequest","setOneofWrapperField","clearStarttransactionrequest","hasStarttransactionrequest","clearHasrequest","hasHasrequest","clearFindrequest","hasFindrequest","clearFindbyidrequest","hasFindbyidrequest","HASREPLY","FINDREPLY","FINDBYIDREPLY","hasreply","getHasreply","findreply","getFindreply","findbyidreply","getFindbyidreply","setHasreply","setFindreply","setFindbyidreply","clearHasreply","hasHasreply","clearFindreply","hasFindreply","clearFindbyidreply","hasFindbyidreply","CREATEREQUEST","SAVEREQUEST","DELETEREQUEST","createrequest","getCreaterequest","saverequest","getSaverequest","deleterequest","getDeleterequest","setCreaterequest","setSaverequest","setDeleterequest","clearCreaterequest","hasCreaterequest","clearSaverequest","hasSaverequest","clearDeleterequest","hasDeleterequest","CREATEREPLY","SAVEREPLY","DELETEREPLY","createreply","getCreatereply","savereply","getSavereply","deletereply","getDeletereply","setCreatereply","setSavereply","setDeletereply","clearCreatereply","hasCreatereply","clearSavereply","hasSavereply","clearDeletereply","hasDeletereply","filtersList","getFiltersList","addFilters","action","readEnum","setAction","getAction","writeEnum","Action","ALL","CREATE","SAVE","DELETE","setProto3EnumField","setFiltersList","clearFiltersList","object","extend","exports"],"mappings":"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","sourcesContent":["// source: threads.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.threads.pb.CollectionConfig', null, global);\ngoog.exportSymbol('proto.threads.pb.CreateReply', null, global);\ngoog.exportSymbol('proto.threads.pb.CreateRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.DeleteCollectionReply', null, global);\ngoog.exportSymbol('proto.threads.pb.DeleteCollectionRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.DeleteDBReply', null, global);\ngoog.exportSymbol('proto.threads.pb.DeleteDBRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.DeleteReply', null, global);\ngoog.exportSymbol('proto.threads.pb.DeleteRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.FindByIDReply', null, global);\ngoog.exportSymbol('proto.threads.pb.FindByIDRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.FindReply', null, global);\ngoog.exportSymbol('proto.threads.pb.FindRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.GetCollectionIndexesReply', null, global);\ngoog.exportSymbol('proto.threads.pb.GetCollectionIndexesRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.GetCollectionInfoReply', null, global);\ngoog.exportSymbol('proto.threads.pb.GetCollectionInfoRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.GetDBInfoReply', null, global);\ngoog.exportSymbol('proto.threads.pb.GetDBInfoRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.GetTokenReply', null, global);\ngoog.exportSymbol('proto.threads.pb.GetTokenReply.PayloadCase', null, global);\ngoog.exportSymbol('proto.threads.pb.GetTokenRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.GetTokenRequest.PayloadCase', null, global);\ngoog.exportSymbol('proto.threads.pb.HasReply', null, global);\ngoog.exportSymbol('proto.threads.pb.HasRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.Index', null, global);\ngoog.exportSymbol('proto.threads.pb.ListCollectionsReply', null, global);\ngoog.exportSymbol('proto.threads.pb.ListCollectionsRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.ListDBsReply', null, global);\ngoog.exportSymbol('proto.threads.pb.ListDBsReply.DB', null, global);\ngoog.exportSymbol('proto.threads.pb.ListDBsRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.ListenReply', null, global);\ngoog.exportSymbol('proto.threads.pb.ListenReply.Action', null, global);\ngoog.exportSymbol('proto.threads.pb.ListenRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.ListenRequest.Filter', null, global);\ngoog.exportSymbol('proto.threads.pb.ListenRequest.Filter.Action', null, global);\ngoog.exportSymbol('proto.threads.pb.NewCollectionReply', null, global);\ngoog.exportSymbol('proto.threads.pb.NewCollectionRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.NewDBFromAddrRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.NewDBReply', null, global);\ngoog.exportSymbol('proto.threads.pb.NewDBRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.ReadTransactionReply', null, global);\ngoog.exportSymbol('proto.threads.pb.ReadTransactionReply.OptionCase', null, global);\ngoog.exportSymbol('proto.threads.pb.ReadTransactionRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.ReadTransactionRequest.OptionCase', null, global);\ngoog.exportSymbol('proto.threads.pb.SaveReply', null, global);\ngoog.exportSymbol('proto.threads.pb.SaveRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.StartTransactionRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.UpdateCollectionReply', null, global);\ngoog.exportSymbol('proto.threads.pb.UpdateCollectionRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.WriteTransactionReply', null, global);\ngoog.exportSymbol('proto.threads.pb.WriteTransactionReply.OptionCase', null, global);\ngoog.exportSymbol('proto.threads.pb.WriteTransactionRequest', null, global);\ngoog.exportSymbol('proto.threads.pb.WriteTransactionRequest.OptionCase', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.GetTokenRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.threads.pb.GetTokenRequest.oneofGroups_);\n};\ngoog.inherits(proto.threads.pb.GetTokenRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.GetTokenRequest.displayName = 'proto.threads.pb.GetTokenRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.GetTokenReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.threads.pb.GetTokenReply.oneofGroups_);\n};\ngoog.inherits(proto.threads.pb.GetTokenReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.GetTokenReply.displayName = 'proto.threads.pb.GetTokenReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.NewDBRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.NewDBRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.threads.pb.NewDBRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.NewDBRequest.displayName = 'proto.threads.pb.NewDBRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.NewDBFromAddrRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.NewDBFromAddrRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.threads.pb.NewDBFromAddrRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.NewDBFromAddrRequest.displayName = 'proto.threads.pb.NewDBFromAddrRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.CollectionConfig = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.CollectionConfig.repeatedFields_, null);\n};\ngoog.inherits(proto.threads.pb.CollectionConfig, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.CollectionConfig.displayName = 'proto.threads.pb.CollectionConfig';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.Index = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.Index, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.Index.displayName = 'proto.threads.pb.Index';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.NewDBReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.NewDBReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.NewDBReply.displayName = 'proto.threads.pb.NewDBReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.ListDBsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.ListDBsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ListDBsRequest.displayName = 'proto.threads.pb.ListDBsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.ListDBsReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.ListDBsReply.repeatedFields_, null);\n};\ngoog.inherits(proto.threads.pb.ListDBsReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ListDBsReply.displayName = 'proto.threads.pb.ListDBsReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.ListDBsReply.DB = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.ListDBsReply.DB, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ListDBsReply.DB.displayName = 'proto.threads.pb.ListDBsReply.DB';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.GetDBInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.GetDBInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.GetDBInfoRequest.displayName = 'proto.threads.pb.GetDBInfoRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.GetDBInfoReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.GetDBInfoReply.repeatedFields_, null);\n};\ngoog.inherits(proto.threads.pb.GetDBInfoReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.GetDBInfoReply.displayName = 'proto.threads.pb.GetDBInfoReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.DeleteDBRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.DeleteDBRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.DeleteDBRequest.displayName = 'proto.threads.pb.DeleteDBRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.DeleteDBReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.DeleteDBReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.DeleteDBReply.displayName = 'proto.threads.pb.DeleteDBReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.NewCollectionRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.NewCollectionRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.NewCollectionRequest.displayName = 'proto.threads.pb.NewCollectionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.NewCollectionReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.NewCollectionReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.NewCollectionReply.displayName = 'proto.threads.pb.NewCollectionReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.UpdateCollectionRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.UpdateCollectionRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.UpdateCollectionRequest.displayName = 'proto.threads.pb.UpdateCollectionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.UpdateCollectionReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.UpdateCollectionReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.UpdateCollectionReply.displayName = 'proto.threads.pb.UpdateCollectionReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.DeleteCollectionRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.DeleteCollectionRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.DeleteCollectionRequest.displayName = 'proto.threads.pb.DeleteCollectionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.DeleteCollectionReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.DeleteCollectionReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.DeleteCollectionReply.displayName = 'proto.threads.pb.DeleteCollectionReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.GetCollectionInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.GetCollectionInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.GetCollectionInfoRequest.displayName = 'proto.threads.pb.GetCollectionInfoRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.GetCollectionInfoReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.GetCollectionInfoReply.repeatedFields_, null);\n};\ngoog.inherits(proto.threads.pb.GetCollectionInfoReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.GetCollectionInfoReply.displayName = 'proto.threads.pb.GetCollectionInfoReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.GetCollectionIndexesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.GetCollectionIndexesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.GetCollectionIndexesRequest.displayName = 'proto.threads.pb.GetCollectionIndexesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.GetCollectionIndexesReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.GetCollectionIndexesReply.repeatedFields_, null);\n};\ngoog.inherits(proto.threads.pb.GetCollectionIndexesReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.GetCollectionIndexesReply.displayName = 'proto.threads.pb.GetCollectionIndexesReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.ListCollectionsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.ListCollectionsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ListCollectionsRequest.displayName = 'proto.threads.pb.ListCollectionsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.ListCollectionsReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.ListCollectionsReply.repeatedFields_, null);\n};\ngoog.inherits(proto.threads.pb.ListCollectionsReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ListCollectionsReply.displayName = 'proto.threads.pb.ListCollectionsReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.CreateRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.CreateRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.threads.pb.CreateRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.CreateRequest.displayName = 'proto.threads.pb.CreateRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.CreateReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.CreateReply.repeatedFields_, null);\n};\ngoog.inherits(proto.threads.pb.CreateReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.CreateReply.displayName = 'proto.threads.pb.CreateReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.SaveRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.SaveRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.threads.pb.SaveRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.SaveRequest.displayName = 'proto.threads.pb.SaveRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.SaveReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.SaveReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.SaveReply.displayName = 'proto.threads.pb.SaveReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.DeleteRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.DeleteRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.threads.pb.DeleteRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.DeleteRequest.displayName = 'proto.threads.pb.DeleteRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.DeleteReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.DeleteReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.DeleteReply.displayName = 'proto.threads.pb.DeleteReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.HasRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.HasRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.threads.pb.HasRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.HasRequest.displayName = 'proto.threads.pb.HasRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.HasReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.HasReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.HasReply.displayName = 'proto.threads.pb.HasReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.FindRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.FindRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.FindRequest.displayName = 'proto.threads.pb.FindRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.FindReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.FindReply.repeatedFields_, null);\n};\ngoog.inherits(proto.threads.pb.FindReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.FindReply.displayName = 'proto.threads.pb.FindReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.FindByIDRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.FindByIDRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.FindByIDRequest.displayName = 'proto.threads.pb.FindByIDRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.FindByIDReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.FindByIDReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.FindByIDReply.displayName = 'proto.threads.pb.FindByIDReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.StartTransactionRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.StartTransactionRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.StartTransactionRequest.displayName = 'proto.threads.pb.StartTransactionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.ReadTransactionRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.threads.pb.ReadTransactionRequest.oneofGroups_);\n};\ngoog.inherits(proto.threads.pb.ReadTransactionRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ReadTransactionRequest.displayName = 'proto.threads.pb.ReadTransactionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.ReadTransactionReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.threads.pb.ReadTransactionReply.oneofGroups_);\n};\ngoog.inherits(proto.threads.pb.ReadTransactionReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ReadTransactionReply.displayName = 'proto.threads.pb.ReadTransactionReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.WriteTransactionRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.threads.pb.WriteTransactionRequest.oneofGroups_);\n};\ngoog.inherits(proto.threads.pb.WriteTransactionRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.WriteTransactionRequest.displayName = 'proto.threads.pb.WriteTransactionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.WriteTransactionReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.threads.pb.WriteTransactionReply.oneofGroups_);\n};\ngoog.inherits(proto.threads.pb.WriteTransactionReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.WriteTransactionReply.displayName = 'proto.threads.pb.WriteTransactionReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.ListenRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.threads.pb.ListenRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.threads.pb.ListenRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ListenRequest.displayName = 'proto.threads.pb.ListenRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.ListenRequest.Filter = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.ListenRequest.Filter, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ListenRequest.Filter.displayName = 'proto.threads.pb.ListenRequest.Filter';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.threads.pb.ListenReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.threads.pb.ListenReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.threads.pb.ListenReply.displayName = 'proto.threads.pb.ListenReply';\n}\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.threads.pb.GetTokenRequest.oneofGroups_ = [[1,2]];\n\n/**\n * @enum {number}\n */\nproto.threads.pb.GetTokenRequest.PayloadCase = {\n  PAYLOAD_NOT_SET: 0,\n  KEY: 1,\n  SIGNATURE: 2\n};\n\n/**\n * @return {proto.threads.pb.GetTokenRequest.PayloadCase}\n */\nproto.threads.pb.GetTokenRequest.prototype.getPayloadCase = function() {\n  return /** @type {proto.threads.pb.GetTokenRequest.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.threads.pb.GetTokenRequest.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.GetTokenRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.GetTokenRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.GetTokenRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.GetTokenRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    key: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    signature: msg.getSignature_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.GetTokenRequest}\n */\nproto.threads.pb.GetTokenRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.GetTokenRequest;\n  return proto.threads.pb.GetTokenRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.GetTokenRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.GetTokenRequest}\n */\nproto.threads.pb.GetTokenRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKey(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.GetTokenRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.GetTokenRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.GetTokenRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.GetTokenRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string key = 1;\n * @return {string}\n */\nproto.threads.pb.GetTokenRequest.prototype.getKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.GetTokenRequest} returns this\n */\nproto.threads.pb.GetTokenRequest.prototype.setKey = function(value) {\n  return jspb.Message.setOneofField(this, 1, proto.threads.pb.GetTokenRequest.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.threads.pb.GetTokenRequest} returns this\n */\nproto.threads.pb.GetTokenRequest.prototype.clearKey = function() {\n  return jspb.Message.setOneofField(this, 1, proto.threads.pb.GetTokenRequest.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.GetTokenRequest.prototype.hasKey = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes signature = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.GetTokenRequest.prototype.getSignature = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes signature = 2;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.threads.pb.GetTokenRequest.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.GetTokenRequest.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.GetTokenRequest} returns this\n */\nproto.threads.pb.GetTokenRequest.prototype.setSignature = function(value) {\n  return jspb.Message.setOneofField(this, 2, proto.threads.pb.GetTokenRequest.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.threads.pb.GetTokenRequest} returns this\n */\nproto.threads.pb.GetTokenRequest.prototype.clearSignature = function() {\n  return jspb.Message.setOneofField(this, 2, proto.threads.pb.GetTokenRequest.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.GetTokenRequest.prototype.hasSignature = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.threads.pb.GetTokenReply.oneofGroups_ = [[1,2]];\n\n/**\n * @enum {number}\n */\nproto.threads.pb.GetTokenReply.PayloadCase = {\n  PAYLOAD_NOT_SET: 0,\n  CHALLENGE: 1,\n  TOKEN: 2\n};\n\n/**\n * @return {proto.threads.pb.GetTokenReply.PayloadCase}\n */\nproto.threads.pb.GetTokenReply.prototype.getPayloadCase = function() {\n  return /** @type {proto.threads.pb.GetTokenReply.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.threads.pb.GetTokenReply.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.GetTokenReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.GetTokenReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.GetTokenReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.GetTokenReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    challenge: msg.getChallenge_asB64(),\n    token: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.GetTokenReply}\n */\nproto.threads.pb.GetTokenReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.GetTokenReply;\n  return proto.threads.pb.GetTokenReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.GetTokenReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.GetTokenReply}\n */\nproto.threads.pb.GetTokenReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChallenge(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setToken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.GetTokenReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.GetTokenReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.GetTokenReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.GetTokenReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes challenge = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.GetTokenReply.prototype.getChallenge = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes challenge = 1;\n * This is a type-conversion wrapper around `getChallenge()`\n * @return {string}\n */\nproto.threads.pb.GetTokenReply.prototype.getChallenge_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChallenge()));\n};\n\n\n/**\n * optional bytes challenge = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChallenge()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.GetTokenReply.prototype.getChallenge_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChallenge()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.GetTokenReply} returns this\n */\nproto.threads.pb.GetTokenReply.prototype.setChallenge = function(value) {\n  return jspb.Message.setOneofField(this, 1, proto.threads.pb.GetTokenReply.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.threads.pb.GetTokenReply} returns this\n */\nproto.threads.pb.GetTokenReply.prototype.clearChallenge = function() {\n  return jspb.Message.setOneofField(this, 1, proto.threads.pb.GetTokenReply.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.GetTokenReply.prototype.hasChallenge = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string token = 2;\n * @return {string}\n */\nproto.threads.pb.GetTokenReply.prototype.getToken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.GetTokenReply} returns this\n */\nproto.threads.pb.GetTokenReply.prototype.setToken = function(value) {\n  return jspb.Message.setOneofField(this, 2, proto.threads.pb.GetTokenReply.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.threads.pb.GetTokenReply} returns this\n */\nproto.threads.pb.GetTokenReply.prototype.clearToken = function() {\n  return jspb.Message.setOneofField(this, 2, proto.threads.pb.GetTokenReply.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.GetTokenReply.prototype.hasToken = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.threads.pb.NewDBRequest.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.NewDBRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.NewDBRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.NewDBRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.NewDBRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbid: msg.getDbid_asB64(),\n    collectionsList: jspb.Message.toObjectList(msg.getCollectionsList(),\n    proto.threads.pb.CollectionConfig.toObject, includeInstance),\n    name: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.NewDBRequest}\n */\nproto.threads.pb.NewDBRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.NewDBRequest;\n  return proto.threads.pb.NewDBRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.NewDBRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.NewDBRequest}\n */\nproto.threads.pb.NewDBRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDbid(value);\n      break;\n    case 2:\n      var value = new proto.threads.pb.CollectionConfig;\n      reader.readMessage(value,proto.threads.pb.CollectionConfig.deserializeBinaryFromReader);\n      msg.addCollections(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.NewDBRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.NewDBRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.NewDBRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.NewDBRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getCollectionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.threads.pb.CollectionConfig.serializeBinaryToWriter\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.NewDBRequest.prototype.getDbid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\nproto.threads.pb.NewDBRequest.prototype.getDbid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDbid()));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.NewDBRequest.prototype.getDbid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDbid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.NewDBRequest} returns this\n */\nproto.threads.pb.NewDBRequest.prototype.setDbid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * repeated CollectionConfig collections = 2;\n * @return {!Array<!proto.threads.pb.CollectionConfig>}\n */\nproto.threads.pb.NewDBRequest.prototype.getCollectionsList = function() {\n  return /** @type{!Array<!proto.threads.pb.CollectionConfig>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.threads.pb.CollectionConfig, 2));\n};\n\n\n/**\n * @param {!Array<!proto.threads.pb.CollectionConfig>} value\n * @return {!proto.threads.pb.NewDBRequest} returns this\n*/\nproto.threads.pb.NewDBRequest.prototype.setCollectionsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.threads.pb.CollectionConfig=} opt_value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.CollectionConfig}\n */\nproto.threads.pb.NewDBRequest.prototype.addCollections = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.threads.pb.CollectionConfig, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.NewDBRequest} returns this\n */\nproto.threads.pb.NewDBRequest.prototype.clearCollectionsList = function() {\n  return this.setCollectionsList([]);\n};\n\n\n/**\n * optional string name = 3;\n * @return {string}\n */\nproto.threads.pb.NewDBRequest.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.NewDBRequest} returns this\n */\nproto.threads.pb.NewDBRequest.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.threads.pb.NewDBFromAddrRequest.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.NewDBFromAddrRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.NewDBFromAddrRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.NewDBFromAddrRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.NewDBFromAddrRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addr: msg.getAddr_asB64(),\n    key: msg.getKey_asB64(),\n    collectionsList: jspb.Message.toObjectList(msg.getCollectionsList(),\n    proto.threads.pb.CollectionConfig.toObject, includeInstance),\n    name: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    block: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.NewDBFromAddrRequest}\n */\nproto.threads.pb.NewDBFromAddrRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.NewDBFromAddrRequest;\n  return proto.threads.pb.NewDBFromAddrRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.NewDBFromAddrRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.NewDBFromAddrRequest}\n */\nproto.threads.pb.NewDBFromAddrRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddr(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setKey(value);\n      break;\n    case 3:\n      var value = new proto.threads.pb.CollectionConfig;\n      reader.readMessage(value,proto.threads.pb.CollectionConfig.deserializeBinaryFromReader);\n      msg.addCollections(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setBlock(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.NewDBFromAddrRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.NewDBFromAddrRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.NewDBFromAddrRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.NewDBFromAddrRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddr_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getCollectionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.threads.pb.CollectionConfig.serializeBinaryToWriter\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getBlock();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes addr = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.NewDBFromAddrRequest.prototype.getAddr = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes addr = 1;\n * This is a type-conversion wrapper around `getAddr()`\n * @return {string}\n */\nproto.threads.pb.NewDBFromAddrRequest.prototype.getAddr_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddr()));\n};\n\n\n/**\n * optional bytes addr = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddr()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.NewDBFromAddrRequest.prototype.getAddr_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddr()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.NewDBFromAddrRequest} returns this\n */\nproto.threads.pb.NewDBFromAddrRequest.prototype.setAddr = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes key = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.NewDBFromAddrRequest.prototype.getKey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes key = 2;\n * This is a type-conversion wrapper around `getKey()`\n * @return {string}\n */\nproto.threads.pb.NewDBFromAddrRequest.prototype.getKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getKey()));\n};\n\n\n/**\n * optional bytes key = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getKey()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.NewDBFromAddrRequest.prototype.getKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.NewDBFromAddrRequest} returns this\n */\nproto.threads.pb.NewDBFromAddrRequest.prototype.setKey = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * repeated CollectionConfig collections = 3;\n * @return {!Array<!proto.threads.pb.CollectionConfig>}\n */\nproto.threads.pb.NewDBFromAddrRequest.prototype.getCollectionsList = function() {\n  return /** @type{!Array<!proto.threads.pb.CollectionConfig>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.threads.pb.CollectionConfig, 3));\n};\n\n\n/**\n * @param {!Array<!proto.threads.pb.CollectionConfig>} value\n * @return {!proto.threads.pb.NewDBFromAddrRequest} returns this\n*/\nproto.threads.pb.NewDBFromAddrRequest.prototype.setCollectionsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.threads.pb.CollectionConfig=} opt_value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.CollectionConfig}\n */\nproto.threads.pb.NewDBFromAddrRequest.prototype.addCollections = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.threads.pb.CollectionConfig, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.NewDBFromAddrRequest} returns this\n */\nproto.threads.pb.NewDBFromAddrRequest.prototype.clearCollectionsList = function() {\n  return this.setCollectionsList([]);\n};\n\n\n/**\n * optional string name = 4;\n * @return {string}\n */\nproto.threads.pb.NewDBFromAddrRequest.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.NewDBFromAddrRequest} returns this\n */\nproto.threads.pb.NewDBFromAddrRequest.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional bool block = 5;\n * @return {boolean}\n */\nproto.threads.pb.NewDBFromAddrRequest.prototype.getBlock = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.threads.pb.NewDBFromAddrRequest} returns this\n */\nproto.threads.pb.NewDBFromAddrRequest.prototype.setBlock = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.threads.pb.CollectionConfig.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.CollectionConfig.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.CollectionConfig.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.CollectionConfig} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.CollectionConfig.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    schema: msg.getSchema_asB64(),\n    indexesList: jspb.Message.toObjectList(msg.getIndexesList(),\n    proto.threads.pb.Index.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.CollectionConfig}\n */\nproto.threads.pb.CollectionConfig.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.CollectionConfig;\n  return proto.threads.pb.CollectionConfig.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.CollectionConfig} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.CollectionConfig}\n */\nproto.threads.pb.CollectionConfig.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSchema(value);\n      break;\n    case 3:\n      var value = new proto.threads.pb.Index;\n      reader.readMessage(value,proto.threads.pb.Index.deserializeBinaryFromReader);\n      msg.addIndexes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.CollectionConfig.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.CollectionConfig.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.CollectionConfig} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.CollectionConfig.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getSchema_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getIndexesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.threads.pb.Index.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.threads.pb.CollectionConfig.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.CollectionConfig} returns this\n */\nproto.threads.pb.CollectionConfig.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bytes schema = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.CollectionConfig.prototype.getSchema = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes schema = 2;\n * This is a type-conversion wrapper around `getSchema()`\n * @return {string}\n */\nproto.threads.pb.CollectionConfig.prototype.getSchema_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSchema()));\n};\n\n\n/**\n * optional bytes schema = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSchema()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.CollectionConfig.prototype.getSchema_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSchema()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.CollectionConfig} returns this\n */\nproto.threads.pb.CollectionConfig.prototype.setSchema = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * repeated Index indexes = 3;\n * @return {!Array<!proto.threads.pb.Index>}\n */\nproto.threads.pb.CollectionConfig.prototype.getIndexesList = function() {\n  return /** @type{!Array<!proto.threads.pb.Index>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.threads.pb.Index, 3));\n};\n\n\n/**\n * @param {!Array<!proto.threads.pb.Index>} value\n * @return {!proto.threads.pb.CollectionConfig} returns this\n*/\nproto.threads.pb.CollectionConfig.prototype.setIndexesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.threads.pb.Index=} opt_value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.Index}\n */\nproto.threads.pb.CollectionConfig.prototype.addIndexes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.threads.pb.Index, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.CollectionConfig} returns this\n */\nproto.threads.pb.CollectionConfig.prototype.clearIndexesList = function() {\n  return this.setIndexesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.Index.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.Index.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.Index} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.Index.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    path: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    unique: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.Index}\n */\nproto.threads.pb.Index.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.Index;\n  return proto.threads.pb.Index.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.Index} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.Index}\n */\nproto.threads.pb.Index.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPath(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setUnique(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.Index.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.Index.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.Index} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.Index.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPath();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getUnique();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string path = 1;\n * @return {string}\n */\nproto.threads.pb.Index.prototype.getPath = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.Index} returns this\n */\nproto.threads.pb.Index.prototype.setPath = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bool unique = 2;\n * @return {boolean}\n */\nproto.threads.pb.Index.prototype.getUnique = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.threads.pb.Index} returns this\n */\nproto.threads.pb.Index.prototype.setUnique = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.NewDBReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.NewDBReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.NewDBReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.NewDBReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.NewDBReply}\n */\nproto.threads.pb.NewDBReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.NewDBReply;\n  return proto.threads.pb.NewDBReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.NewDBReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.NewDBReply}\n */\nproto.threads.pb.NewDBReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.NewDBReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.NewDBReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.NewDBReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.NewDBReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.ListDBsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.ListDBsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.ListDBsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ListDBsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ListDBsRequest}\n */\nproto.threads.pb.ListDBsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ListDBsRequest;\n  return proto.threads.pb.ListDBsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ListDBsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ListDBsRequest}\n */\nproto.threads.pb.ListDBsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.ListDBsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ListDBsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ListDBsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ListDBsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.threads.pb.ListDBsReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.ListDBsReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.ListDBsReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.ListDBsReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ListDBsReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbsList: jspb.Message.toObjectList(msg.getDbsList(),\n    proto.threads.pb.ListDBsReply.DB.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ListDBsReply}\n */\nproto.threads.pb.ListDBsReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ListDBsReply;\n  return proto.threads.pb.ListDBsReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ListDBsReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ListDBsReply}\n */\nproto.threads.pb.ListDBsReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.threads.pb.ListDBsReply.DB;\n      reader.readMessage(value,proto.threads.pb.ListDBsReply.DB.deserializeBinaryFromReader);\n      msg.addDbs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.ListDBsReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ListDBsReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ListDBsReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ListDBsReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.threads.pb.ListDBsReply.DB.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.ListDBsReply.DB.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.ListDBsReply.DB.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.ListDBsReply.DB} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ListDBsReply.DB.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbid: msg.getDbid_asB64(),\n    info: (f = msg.getInfo()) && proto.threads.pb.GetDBInfoReply.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ListDBsReply.DB}\n */\nproto.threads.pb.ListDBsReply.DB.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ListDBsReply.DB;\n  return proto.threads.pb.ListDBsReply.DB.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ListDBsReply.DB} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ListDBsReply.DB}\n */\nproto.threads.pb.ListDBsReply.DB.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDbid(value);\n      break;\n    case 2:\n      var value = new proto.threads.pb.GetDBInfoReply;\n      reader.readMessage(value,proto.threads.pb.GetDBInfoReply.deserializeBinaryFromReader);\n      msg.setInfo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.ListDBsReply.DB.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ListDBsReply.DB.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ListDBsReply.DB} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ListDBsReply.DB.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getInfo();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.threads.pb.GetDBInfoReply.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.ListDBsReply.DB.prototype.getDbid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\nproto.threads.pb.ListDBsReply.DB.prototype.getDbid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDbid()));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.ListDBsReply.DB.prototype.getDbid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDbid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.ListDBsReply.DB} returns this\n */\nproto.threads.pb.ListDBsReply.DB.prototype.setDbid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional GetDBInfoReply info = 2;\n * @return {?proto.threads.pb.GetDBInfoReply}\n */\nproto.threads.pb.ListDBsReply.DB.prototype.getInfo = function() {\n  return /** @type{?proto.threads.pb.GetDBInfoReply} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.GetDBInfoReply, 2));\n};\n\n\n/**\n * @param {?proto.threads.pb.GetDBInfoReply|undefined} value\n * @return {!proto.threads.pb.ListDBsReply.DB} returns this\n*/\nproto.threads.pb.ListDBsReply.DB.prototype.setInfo = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.ListDBsReply.DB} returns this\n */\nproto.threads.pb.ListDBsReply.DB.prototype.clearInfo = function() {\n  return this.setInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.ListDBsReply.DB.prototype.hasInfo = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * repeated DB dbs = 1;\n * @return {!Array<!proto.threads.pb.ListDBsReply.DB>}\n */\nproto.threads.pb.ListDBsReply.prototype.getDbsList = function() {\n  return /** @type{!Array<!proto.threads.pb.ListDBsReply.DB>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.threads.pb.ListDBsReply.DB, 1));\n};\n\n\n/**\n * @param {!Array<!proto.threads.pb.ListDBsReply.DB>} value\n * @return {!proto.threads.pb.ListDBsReply} returns this\n*/\nproto.threads.pb.ListDBsReply.prototype.setDbsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.threads.pb.ListDBsReply.DB=} opt_value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.ListDBsReply.DB}\n */\nproto.threads.pb.ListDBsReply.prototype.addDbs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.threads.pb.ListDBsReply.DB, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.ListDBsReply} returns this\n */\nproto.threads.pb.ListDBsReply.prototype.clearDbsList = function() {\n  return this.setDbsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.GetDBInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.GetDBInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.GetDBInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.GetDBInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbid: msg.getDbid_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.GetDBInfoRequest}\n */\nproto.threads.pb.GetDBInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.GetDBInfoRequest;\n  return proto.threads.pb.GetDBInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.GetDBInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.GetDBInfoRequest}\n */\nproto.threads.pb.GetDBInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDbid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.GetDBInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.GetDBInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.GetDBInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.GetDBInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.GetDBInfoRequest.prototype.getDbid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\nproto.threads.pb.GetDBInfoRequest.prototype.getDbid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDbid()));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.GetDBInfoRequest.prototype.getDbid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDbid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.GetDBInfoRequest} returns this\n */\nproto.threads.pb.GetDBInfoRequest.prototype.setDbid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.threads.pb.GetDBInfoReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.GetDBInfoReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.GetDBInfoReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.GetDBInfoReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.GetDBInfoReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addrsList: msg.getAddrsList_asB64(),\n    key: msg.getKey_asB64(),\n    name: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.GetDBInfoReply}\n */\nproto.threads.pb.GetDBInfoReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.GetDBInfoReply;\n  return proto.threads.pb.GetDBInfoReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.GetDBInfoReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.GetDBInfoReply}\n */\nproto.threads.pb.GetDBInfoReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addAddrs(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setKey(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.GetDBInfoReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.GetDBInfoReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.GetDBInfoReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.GetDBInfoReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddrsList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      1,\n      f\n    );\n  }\n  f = message.getKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated bytes addrs = 1;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.threads.pb.GetDBInfoReply.prototype.getAddrsList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * repeated bytes addrs = 1;\n * This is a type-conversion wrapper around `getAddrsList()`\n * @return {!Array<string>}\n */\nproto.threads.pb.GetDBInfoReply.prototype.getAddrsList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getAddrsList()));\n};\n\n\n/**\n * repeated bytes addrs = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddrsList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.threads.pb.GetDBInfoReply.prototype.getAddrsList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getAddrsList()));\n};\n\n\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!proto.threads.pb.GetDBInfoReply} returns this\n */\nproto.threads.pb.GetDBInfoReply.prototype.setAddrsList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.GetDBInfoReply} returns this\n */\nproto.threads.pb.GetDBInfoReply.prototype.addAddrs = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.GetDBInfoReply} returns this\n */\nproto.threads.pb.GetDBInfoReply.prototype.clearAddrsList = function() {\n  return this.setAddrsList([]);\n};\n\n\n/**\n * optional bytes key = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.GetDBInfoReply.prototype.getKey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes key = 2;\n * This is a type-conversion wrapper around `getKey()`\n * @return {string}\n */\nproto.threads.pb.GetDBInfoReply.prototype.getKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getKey()));\n};\n\n\n/**\n * optional bytes key = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getKey()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.GetDBInfoReply.prototype.getKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.GetDBInfoReply} returns this\n */\nproto.threads.pb.GetDBInfoReply.prototype.setKey = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional string name = 3;\n * @return {string}\n */\nproto.threads.pb.GetDBInfoReply.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.GetDBInfoReply} returns this\n */\nproto.threads.pb.GetDBInfoReply.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.DeleteDBRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.DeleteDBRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.DeleteDBRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.DeleteDBRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbid: msg.getDbid_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.DeleteDBRequest}\n */\nproto.threads.pb.DeleteDBRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.DeleteDBRequest;\n  return proto.threads.pb.DeleteDBRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.DeleteDBRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.DeleteDBRequest}\n */\nproto.threads.pb.DeleteDBRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDbid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.DeleteDBRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.DeleteDBRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.DeleteDBRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.DeleteDBRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.DeleteDBRequest.prototype.getDbid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\nproto.threads.pb.DeleteDBRequest.prototype.getDbid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDbid()));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.DeleteDBRequest.prototype.getDbid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDbid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.DeleteDBRequest} returns this\n */\nproto.threads.pb.DeleteDBRequest.prototype.setDbid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.DeleteDBReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.DeleteDBReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.DeleteDBReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.DeleteDBReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.DeleteDBReply}\n */\nproto.threads.pb.DeleteDBReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.DeleteDBReply;\n  return proto.threads.pb.DeleteDBReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.DeleteDBReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.DeleteDBReply}\n */\nproto.threads.pb.DeleteDBReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.DeleteDBReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.DeleteDBReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.DeleteDBReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.DeleteDBReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.NewCollectionRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.NewCollectionRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.NewCollectionRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.NewCollectionRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbid: msg.getDbid_asB64(),\n    config: (f = msg.getConfig()) && proto.threads.pb.CollectionConfig.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.NewCollectionRequest}\n */\nproto.threads.pb.NewCollectionRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.NewCollectionRequest;\n  return proto.threads.pb.NewCollectionRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.NewCollectionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.NewCollectionRequest}\n */\nproto.threads.pb.NewCollectionRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDbid(value);\n      break;\n    case 2:\n      var value = new proto.threads.pb.CollectionConfig;\n      reader.readMessage(value,proto.threads.pb.CollectionConfig.deserializeBinaryFromReader);\n      msg.setConfig(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.NewCollectionRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.NewCollectionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.NewCollectionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.NewCollectionRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getConfig();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.threads.pb.CollectionConfig.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.NewCollectionRequest.prototype.getDbid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\nproto.threads.pb.NewCollectionRequest.prototype.getDbid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDbid()));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.NewCollectionRequest.prototype.getDbid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDbid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.NewCollectionRequest} returns this\n */\nproto.threads.pb.NewCollectionRequest.prototype.setDbid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional CollectionConfig config = 2;\n * @return {?proto.threads.pb.CollectionConfig}\n */\nproto.threads.pb.NewCollectionRequest.prototype.getConfig = function() {\n  return /** @type{?proto.threads.pb.CollectionConfig} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.CollectionConfig, 2));\n};\n\n\n/**\n * @param {?proto.threads.pb.CollectionConfig|undefined} value\n * @return {!proto.threads.pb.NewCollectionRequest} returns this\n*/\nproto.threads.pb.NewCollectionRequest.prototype.setConfig = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.NewCollectionRequest} returns this\n */\nproto.threads.pb.NewCollectionRequest.prototype.clearConfig = function() {\n  return this.setConfig(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.NewCollectionRequest.prototype.hasConfig = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.NewCollectionReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.NewCollectionReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.NewCollectionReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.NewCollectionReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.NewCollectionReply}\n */\nproto.threads.pb.NewCollectionReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.NewCollectionReply;\n  return proto.threads.pb.NewCollectionReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.NewCollectionReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.NewCollectionReply}\n */\nproto.threads.pb.NewCollectionReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.NewCollectionReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.NewCollectionReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.NewCollectionReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.NewCollectionReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.UpdateCollectionRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.UpdateCollectionRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.UpdateCollectionRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.UpdateCollectionRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbid: msg.getDbid_asB64(),\n    config: (f = msg.getConfig()) && proto.threads.pb.CollectionConfig.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.UpdateCollectionRequest}\n */\nproto.threads.pb.UpdateCollectionRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.UpdateCollectionRequest;\n  return proto.threads.pb.UpdateCollectionRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.UpdateCollectionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.UpdateCollectionRequest}\n */\nproto.threads.pb.UpdateCollectionRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDbid(value);\n      break;\n    case 2:\n      var value = new proto.threads.pb.CollectionConfig;\n      reader.readMessage(value,proto.threads.pb.CollectionConfig.deserializeBinaryFromReader);\n      msg.setConfig(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.UpdateCollectionRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.UpdateCollectionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.UpdateCollectionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.UpdateCollectionRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getConfig();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.threads.pb.CollectionConfig.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.UpdateCollectionRequest.prototype.getDbid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\nproto.threads.pb.UpdateCollectionRequest.prototype.getDbid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDbid()));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.UpdateCollectionRequest.prototype.getDbid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDbid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.UpdateCollectionRequest} returns this\n */\nproto.threads.pb.UpdateCollectionRequest.prototype.setDbid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional CollectionConfig config = 2;\n * @return {?proto.threads.pb.CollectionConfig}\n */\nproto.threads.pb.UpdateCollectionRequest.prototype.getConfig = function() {\n  return /** @type{?proto.threads.pb.CollectionConfig} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.CollectionConfig, 2));\n};\n\n\n/**\n * @param {?proto.threads.pb.CollectionConfig|undefined} value\n * @return {!proto.threads.pb.UpdateCollectionRequest} returns this\n*/\nproto.threads.pb.UpdateCollectionRequest.prototype.setConfig = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.UpdateCollectionRequest} returns this\n */\nproto.threads.pb.UpdateCollectionRequest.prototype.clearConfig = function() {\n  return this.setConfig(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.UpdateCollectionRequest.prototype.hasConfig = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.UpdateCollectionReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.UpdateCollectionReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.UpdateCollectionReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.UpdateCollectionReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.UpdateCollectionReply}\n */\nproto.threads.pb.UpdateCollectionReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.UpdateCollectionReply;\n  return proto.threads.pb.UpdateCollectionReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.UpdateCollectionReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.UpdateCollectionReply}\n */\nproto.threads.pb.UpdateCollectionReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.UpdateCollectionReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.UpdateCollectionReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.UpdateCollectionReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.UpdateCollectionReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.DeleteCollectionRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.DeleteCollectionRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.DeleteCollectionRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.DeleteCollectionRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbid: msg.getDbid_asB64(),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.DeleteCollectionRequest}\n */\nproto.threads.pb.DeleteCollectionRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.DeleteCollectionRequest;\n  return proto.threads.pb.DeleteCollectionRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.DeleteCollectionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.DeleteCollectionRequest}\n */\nproto.threads.pb.DeleteCollectionRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDbid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.DeleteCollectionRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.DeleteCollectionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.DeleteCollectionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.DeleteCollectionRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.DeleteCollectionRequest.prototype.getDbid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\nproto.threads.pb.DeleteCollectionRequest.prototype.getDbid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDbid()));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.DeleteCollectionRequest.prototype.getDbid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDbid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.DeleteCollectionRequest} returns this\n */\nproto.threads.pb.DeleteCollectionRequest.prototype.setDbid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.threads.pb.DeleteCollectionRequest.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.DeleteCollectionRequest} returns this\n */\nproto.threads.pb.DeleteCollectionRequest.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.DeleteCollectionReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.DeleteCollectionReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.DeleteCollectionReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.DeleteCollectionReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.DeleteCollectionReply}\n */\nproto.threads.pb.DeleteCollectionReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.DeleteCollectionReply;\n  return proto.threads.pb.DeleteCollectionReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.DeleteCollectionReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.DeleteCollectionReply}\n */\nproto.threads.pb.DeleteCollectionReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.DeleteCollectionReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.DeleteCollectionReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.DeleteCollectionReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.DeleteCollectionReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.GetCollectionInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.GetCollectionInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.GetCollectionInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.GetCollectionInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbid: msg.getDbid_asB64(),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.GetCollectionInfoRequest}\n */\nproto.threads.pb.GetCollectionInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.GetCollectionInfoRequest;\n  return proto.threads.pb.GetCollectionInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.GetCollectionInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.GetCollectionInfoRequest}\n */\nproto.threads.pb.GetCollectionInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDbid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.GetCollectionInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.GetCollectionInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.GetCollectionInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.GetCollectionInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.GetCollectionInfoRequest.prototype.getDbid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\nproto.threads.pb.GetCollectionInfoRequest.prototype.getDbid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDbid()));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.GetCollectionInfoRequest.prototype.getDbid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDbid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.GetCollectionInfoRequest} returns this\n */\nproto.threads.pb.GetCollectionInfoRequest.prototype.setDbid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.threads.pb.GetCollectionInfoRequest.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.GetCollectionInfoRequest} returns this\n */\nproto.threads.pb.GetCollectionInfoRequest.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.threads.pb.GetCollectionInfoReply.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.GetCollectionInfoReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.GetCollectionInfoReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.GetCollectionInfoReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.GetCollectionInfoReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    schema: msg.getSchema_asB64(),\n    indexesList: jspb.Message.toObjectList(msg.getIndexesList(),\n    proto.threads.pb.Index.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.GetCollectionInfoReply}\n */\nproto.threads.pb.GetCollectionInfoReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.GetCollectionInfoReply;\n  return proto.threads.pb.GetCollectionInfoReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.GetCollectionInfoReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.GetCollectionInfoReply}\n */\nproto.threads.pb.GetCollectionInfoReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSchema(value);\n      break;\n    case 3:\n      var value = new proto.threads.pb.Index;\n      reader.readMessage(value,proto.threads.pb.Index.deserializeBinaryFromReader);\n      msg.addIndexes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.GetCollectionInfoReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.GetCollectionInfoReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.GetCollectionInfoReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.GetCollectionInfoReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getSchema_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getIndexesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.threads.pb.Index.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.threads.pb.GetCollectionInfoReply.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.GetCollectionInfoReply} returns this\n */\nproto.threads.pb.GetCollectionInfoReply.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bytes schema = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.GetCollectionInfoReply.prototype.getSchema = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes schema = 2;\n * This is a type-conversion wrapper around `getSchema()`\n * @return {string}\n */\nproto.threads.pb.GetCollectionInfoReply.prototype.getSchema_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSchema()));\n};\n\n\n/**\n * optional bytes schema = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSchema()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.GetCollectionInfoReply.prototype.getSchema_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSchema()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.GetCollectionInfoReply} returns this\n */\nproto.threads.pb.GetCollectionInfoReply.prototype.setSchema = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * repeated Index indexes = 3;\n * @return {!Array<!proto.threads.pb.Index>}\n */\nproto.threads.pb.GetCollectionInfoReply.prototype.getIndexesList = function() {\n  return /** @type{!Array<!proto.threads.pb.Index>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.threads.pb.Index, 3));\n};\n\n\n/**\n * @param {!Array<!proto.threads.pb.Index>} value\n * @return {!proto.threads.pb.GetCollectionInfoReply} returns this\n*/\nproto.threads.pb.GetCollectionInfoReply.prototype.setIndexesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.threads.pb.Index=} opt_value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.Index}\n */\nproto.threads.pb.GetCollectionInfoReply.prototype.addIndexes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.threads.pb.Index, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.GetCollectionInfoReply} returns this\n */\nproto.threads.pb.GetCollectionInfoReply.prototype.clearIndexesList = function() {\n  return this.setIndexesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.GetCollectionIndexesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.GetCollectionIndexesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.GetCollectionIndexesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.GetCollectionIndexesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbid: msg.getDbid_asB64(),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.GetCollectionIndexesRequest}\n */\nproto.threads.pb.GetCollectionIndexesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.GetCollectionIndexesRequest;\n  return proto.threads.pb.GetCollectionIndexesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.GetCollectionIndexesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.GetCollectionIndexesRequest}\n */\nproto.threads.pb.GetCollectionIndexesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDbid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.GetCollectionIndexesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.GetCollectionIndexesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.GetCollectionIndexesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.GetCollectionIndexesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.GetCollectionIndexesRequest.prototype.getDbid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\nproto.threads.pb.GetCollectionIndexesRequest.prototype.getDbid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDbid()));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.GetCollectionIndexesRequest.prototype.getDbid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDbid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.GetCollectionIndexesRequest} returns this\n */\nproto.threads.pb.GetCollectionIndexesRequest.prototype.setDbid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.threads.pb.GetCollectionIndexesRequest.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.GetCollectionIndexesRequest} returns this\n */\nproto.threads.pb.GetCollectionIndexesRequest.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.threads.pb.GetCollectionIndexesReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.GetCollectionIndexesReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.GetCollectionIndexesReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.GetCollectionIndexesReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.GetCollectionIndexesReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    indexesList: jspb.Message.toObjectList(msg.getIndexesList(),\n    proto.threads.pb.Index.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.GetCollectionIndexesReply}\n */\nproto.threads.pb.GetCollectionIndexesReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.GetCollectionIndexesReply;\n  return proto.threads.pb.GetCollectionIndexesReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.GetCollectionIndexesReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.GetCollectionIndexesReply}\n */\nproto.threads.pb.GetCollectionIndexesReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.threads.pb.Index;\n      reader.readMessage(value,proto.threads.pb.Index.deserializeBinaryFromReader);\n      msg.addIndexes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.GetCollectionIndexesReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.GetCollectionIndexesReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.GetCollectionIndexesReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.GetCollectionIndexesReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIndexesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.threads.pb.Index.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Index indexes = 1;\n * @return {!Array<!proto.threads.pb.Index>}\n */\nproto.threads.pb.GetCollectionIndexesReply.prototype.getIndexesList = function() {\n  return /** @type{!Array<!proto.threads.pb.Index>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.threads.pb.Index, 1));\n};\n\n\n/**\n * @param {!Array<!proto.threads.pb.Index>} value\n * @return {!proto.threads.pb.GetCollectionIndexesReply} returns this\n*/\nproto.threads.pb.GetCollectionIndexesReply.prototype.setIndexesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.threads.pb.Index=} opt_value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.Index}\n */\nproto.threads.pb.GetCollectionIndexesReply.prototype.addIndexes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.threads.pb.Index, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.GetCollectionIndexesReply} returns this\n */\nproto.threads.pb.GetCollectionIndexesReply.prototype.clearIndexesList = function() {\n  return this.setIndexesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.ListCollectionsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.ListCollectionsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.ListCollectionsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ListCollectionsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbid: msg.getDbid_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ListCollectionsRequest}\n */\nproto.threads.pb.ListCollectionsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ListCollectionsRequest;\n  return proto.threads.pb.ListCollectionsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ListCollectionsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ListCollectionsRequest}\n */\nproto.threads.pb.ListCollectionsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDbid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.ListCollectionsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ListCollectionsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ListCollectionsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ListCollectionsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.ListCollectionsRequest.prototype.getDbid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\nproto.threads.pb.ListCollectionsRequest.prototype.getDbid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDbid()));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.ListCollectionsRequest.prototype.getDbid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDbid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.ListCollectionsRequest} returns this\n */\nproto.threads.pb.ListCollectionsRequest.prototype.setDbid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.threads.pb.ListCollectionsReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.ListCollectionsReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.ListCollectionsReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.ListCollectionsReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ListCollectionsReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    collectionsList: jspb.Message.toObjectList(msg.getCollectionsList(),\n    proto.threads.pb.GetCollectionInfoReply.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ListCollectionsReply}\n */\nproto.threads.pb.ListCollectionsReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ListCollectionsReply;\n  return proto.threads.pb.ListCollectionsReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ListCollectionsReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ListCollectionsReply}\n */\nproto.threads.pb.ListCollectionsReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.threads.pb.GetCollectionInfoReply;\n      reader.readMessage(value,proto.threads.pb.GetCollectionInfoReply.deserializeBinaryFromReader);\n      msg.addCollections(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.ListCollectionsReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ListCollectionsReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ListCollectionsReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ListCollectionsReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCollectionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.threads.pb.GetCollectionInfoReply.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated GetCollectionInfoReply collections = 1;\n * @return {!Array<!proto.threads.pb.GetCollectionInfoReply>}\n */\nproto.threads.pb.ListCollectionsReply.prototype.getCollectionsList = function() {\n  return /** @type{!Array<!proto.threads.pb.GetCollectionInfoReply>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.threads.pb.GetCollectionInfoReply, 1));\n};\n\n\n/**\n * @param {!Array<!proto.threads.pb.GetCollectionInfoReply>} value\n * @return {!proto.threads.pb.ListCollectionsReply} returns this\n*/\nproto.threads.pb.ListCollectionsReply.prototype.setCollectionsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.threads.pb.GetCollectionInfoReply=} opt_value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.GetCollectionInfoReply}\n */\nproto.threads.pb.ListCollectionsReply.prototype.addCollections = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.threads.pb.GetCollectionInfoReply, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.ListCollectionsReply} returns this\n */\nproto.threads.pb.ListCollectionsReply.prototype.clearCollectionsList = function() {\n  return this.setCollectionsList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.threads.pb.CreateRequest.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.CreateRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.CreateRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.CreateRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.CreateRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbid: msg.getDbid_asB64(),\n    collectionname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    instancesList: msg.getInstancesList_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.CreateRequest}\n */\nproto.threads.pb.CreateRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.CreateRequest;\n  return proto.threads.pb.CreateRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.CreateRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.CreateRequest}\n */\nproto.threads.pb.CreateRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDbid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCollectionname(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addInstances(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.CreateRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.CreateRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.CreateRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.CreateRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getCollectionname();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getInstancesList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.CreateRequest.prototype.getDbid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\nproto.threads.pb.CreateRequest.prototype.getDbid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDbid()));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.CreateRequest.prototype.getDbid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDbid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.CreateRequest} returns this\n */\nproto.threads.pb.CreateRequest.prototype.setDbid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional string collectionName = 2;\n * @return {string}\n */\nproto.threads.pb.CreateRequest.prototype.getCollectionname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.CreateRequest} returns this\n */\nproto.threads.pb.CreateRequest.prototype.setCollectionname = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated bytes instances = 3;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.threads.pb.CreateRequest.prototype.getInstancesList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));\n};\n\n\n/**\n * repeated bytes instances = 3;\n * This is a type-conversion wrapper around `getInstancesList()`\n * @return {!Array<string>}\n */\nproto.threads.pb.CreateRequest.prototype.getInstancesList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getInstancesList()));\n};\n\n\n/**\n * repeated bytes instances = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getInstancesList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.threads.pb.CreateRequest.prototype.getInstancesList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getInstancesList()));\n};\n\n\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!proto.threads.pb.CreateRequest} returns this\n */\nproto.threads.pb.CreateRequest.prototype.setInstancesList = function(value) {\n  return jspb.Message.setField(this, 3, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.CreateRequest} returns this\n */\nproto.threads.pb.CreateRequest.prototype.addInstances = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.CreateRequest} returns this\n */\nproto.threads.pb.CreateRequest.prototype.clearInstancesList = function() {\n  return this.setInstancesList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.threads.pb.CreateReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.CreateReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.CreateReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.CreateReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.CreateReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    instanceidsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.CreateReply}\n */\nproto.threads.pb.CreateReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.CreateReply;\n  return proto.threads.pb.CreateReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.CreateReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.CreateReply}\n */\nproto.threads.pb.CreateReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addInstanceids(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.CreateReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.CreateReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.CreateReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.CreateReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInstanceidsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated string instanceIDs = 1;\n * @return {!Array<string>}\n */\nproto.threads.pb.CreateReply.prototype.getInstanceidsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.threads.pb.CreateReply} returns this\n */\nproto.threads.pb.CreateReply.prototype.setInstanceidsList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.CreateReply} returns this\n */\nproto.threads.pb.CreateReply.prototype.addInstanceids = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.CreateReply} returns this\n */\nproto.threads.pb.CreateReply.prototype.clearInstanceidsList = function() {\n  return this.setInstanceidsList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.threads.pb.SaveRequest.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.SaveRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.SaveRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.SaveRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.SaveRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbid: msg.getDbid_asB64(),\n    collectionname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    instancesList: msg.getInstancesList_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.SaveRequest}\n */\nproto.threads.pb.SaveRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.SaveRequest;\n  return proto.threads.pb.SaveRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.SaveRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.SaveRequest}\n */\nproto.threads.pb.SaveRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDbid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCollectionname(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addInstances(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.SaveRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.SaveRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.SaveRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.SaveRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getCollectionname();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getInstancesList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.SaveRequest.prototype.getDbid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\nproto.threads.pb.SaveRequest.prototype.getDbid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDbid()));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.SaveRequest.prototype.getDbid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDbid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.SaveRequest} returns this\n */\nproto.threads.pb.SaveRequest.prototype.setDbid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional string collectionName = 2;\n * @return {string}\n */\nproto.threads.pb.SaveRequest.prototype.getCollectionname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.SaveRequest} returns this\n */\nproto.threads.pb.SaveRequest.prototype.setCollectionname = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated bytes instances = 3;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.threads.pb.SaveRequest.prototype.getInstancesList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));\n};\n\n\n/**\n * repeated bytes instances = 3;\n * This is a type-conversion wrapper around `getInstancesList()`\n * @return {!Array<string>}\n */\nproto.threads.pb.SaveRequest.prototype.getInstancesList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getInstancesList()));\n};\n\n\n/**\n * repeated bytes instances = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getInstancesList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.threads.pb.SaveRequest.prototype.getInstancesList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getInstancesList()));\n};\n\n\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!proto.threads.pb.SaveRequest} returns this\n */\nproto.threads.pb.SaveRequest.prototype.setInstancesList = function(value) {\n  return jspb.Message.setField(this, 3, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.SaveRequest} returns this\n */\nproto.threads.pb.SaveRequest.prototype.addInstances = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.SaveRequest} returns this\n */\nproto.threads.pb.SaveRequest.prototype.clearInstancesList = function() {\n  return this.setInstancesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.SaveReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.SaveReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.SaveReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.SaveReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.SaveReply}\n */\nproto.threads.pb.SaveReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.SaveReply;\n  return proto.threads.pb.SaveReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.SaveReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.SaveReply}\n */\nproto.threads.pb.SaveReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.SaveReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.SaveReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.SaveReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.SaveReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.threads.pb.DeleteRequest.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.DeleteRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.DeleteRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.DeleteRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.DeleteRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbid: msg.getDbid_asB64(),\n    collectionname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    instanceidsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.DeleteRequest}\n */\nproto.threads.pb.DeleteRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.DeleteRequest;\n  return proto.threads.pb.DeleteRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.DeleteRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.DeleteRequest}\n */\nproto.threads.pb.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDbid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCollectionname(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addInstanceids(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.DeleteRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.DeleteRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.DeleteRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.DeleteRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getCollectionname();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getInstanceidsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.DeleteRequest.prototype.getDbid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\nproto.threads.pb.DeleteRequest.prototype.getDbid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDbid()));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.DeleteRequest.prototype.getDbid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDbid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.DeleteRequest} returns this\n */\nproto.threads.pb.DeleteRequest.prototype.setDbid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional string collectionName = 2;\n * @return {string}\n */\nproto.threads.pb.DeleteRequest.prototype.getCollectionname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.DeleteRequest} returns this\n */\nproto.threads.pb.DeleteRequest.prototype.setCollectionname = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated string instanceIDs = 3;\n * @return {!Array<string>}\n */\nproto.threads.pb.DeleteRequest.prototype.getInstanceidsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.threads.pb.DeleteRequest} returns this\n */\nproto.threads.pb.DeleteRequest.prototype.setInstanceidsList = function(value) {\n  return jspb.Message.setField(this, 3, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.DeleteRequest} returns this\n */\nproto.threads.pb.DeleteRequest.prototype.addInstanceids = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.DeleteRequest} returns this\n */\nproto.threads.pb.DeleteRequest.prototype.clearInstanceidsList = function() {\n  return this.setInstanceidsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.DeleteReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.DeleteReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.DeleteReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.DeleteReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.DeleteReply}\n */\nproto.threads.pb.DeleteReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.DeleteReply;\n  return proto.threads.pb.DeleteReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.DeleteReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.DeleteReply}\n */\nproto.threads.pb.DeleteReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.DeleteReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.DeleteReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.DeleteReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.DeleteReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.threads.pb.HasRequest.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.HasRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.HasRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.HasRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.HasRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbid: msg.getDbid_asB64(),\n    collectionname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    instanceidsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.HasRequest}\n */\nproto.threads.pb.HasRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.HasRequest;\n  return proto.threads.pb.HasRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.HasRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.HasRequest}\n */\nproto.threads.pb.HasRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDbid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCollectionname(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addInstanceids(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.HasRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.HasRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.HasRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.HasRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getCollectionname();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getInstanceidsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.HasRequest.prototype.getDbid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\nproto.threads.pb.HasRequest.prototype.getDbid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDbid()));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.HasRequest.prototype.getDbid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDbid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.HasRequest} returns this\n */\nproto.threads.pb.HasRequest.prototype.setDbid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional string collectionName = 2;\n * @return {string}\n */\nproto.threads.pb.HasRequest.prototype.getCollectionname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.HasRequest} returns this\n */\nproto.threads.pb.HasRequest.prototype.setCollectionname = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated string instanceIDs = 3;\n * @return {!Array<string>}\n */\nproto.threads.pb.HasRequest.prototype.getInstanceidsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.threads.pb.HasRequest} returns this\n */\nproto.threads.pb.HasRequest.prototype.setInstanceidsList = function(value) {\n  return jspb.Message.setField(this, 3, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.HasRequest} returns this\n */\nproto.threads.pb.HasRequest.prototype.addInstanceids = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.HasRequest} returns this\n */\nproto.threads.pb.HasRequest.prototype.clearInstanceidsList = function() {\n  return this.setInstanceidsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.HasReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.HasReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.HasReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.HasReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    exists: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.HasReply}\n */\nproto.threads.pb.HasReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.HasReply;\n  return proto.threads.pb.HasReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.HasReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.HasReply}\n */\nproto.threads.pb.HasReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setExists(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.HasReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.HasReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.HasReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.HasReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getExists();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool exists = 1;\n * @return {boolean}\n */\nproto.threads.pb.HasReply.prototype.getExists = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.threads.pb.HasReply} returns this\n */\nproto.threads.pb.HasReply.prototype.setExists = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.FindRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.FindRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.FindRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.FindRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbid: msg.getDbid_asB64(),\n    collectionname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    queryjson: msg.getQueryjson_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.FindRequest}\n */\nproto.threads.pb.FindRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.FindRequest;\n  return proto.threads.pb.FindRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.FindRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.FindRequest}\n */\nproto.threads.pb.FindRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDbid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCollectionname(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setQueryjson(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.FindRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.FindRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.FindRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.FindRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getCollectionname();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getQueryjson_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.FindRequest.prototype.getDbid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\nproto.threads.pb.FindRequest.prototype.getDbid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDbid()));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.FindRequest.prototype.getDbid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDbid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.FindRequest} returns this\n */\nproto.threads.pb.FindRequest.prototype.setDbid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional string collectionName = 2;\n * @return {string}\n */\nproto.threads.pb.FindRequest.prototype.getCollectionname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.FindRequest} returns this\n */\nproto.threads.pb.FindRequest.prototype.setCollectionname = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bytes queryJSON = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.FindRequest.prototype.getQueryjson = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes queryJSON = 3;\n * This is a type-conversion wrapper around `getQueryjson()`\n * @return {string}\n */\nproto.threads.pb.FindRequest.prototype.getQueryjson_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getQueryjson()));\n};\n\n\n/**\n * optional bytes queryJSON = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getQueryjson()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.FindRequest.prototype.getQueryjson_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getQueryjson()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.FindRequest} returns this\n */\nproto.threads.pb.FindRequest.prototype.setQueryjson = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.threads.pb.FindReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.FindReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.FindReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.FindReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.FindReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    instancesList: msg.getInstancesList_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.FindReply}\n */\nproto.threads.pb.FindReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.FindReply;\n  return proto.threads.pb.FindReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.FindReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.FindReply}\n */\nproto.threads.pb.FindReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addInstances(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.FindReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.FindReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.FindReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.FindReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInstancesList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated bytes instances = 1;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.threads.pb.FindReply.prototype.getInstancesList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * repeated bytes instances = 1;\n * This is a type-conversion wrapper around `getInstancesList()`\n * @return {!Array<string>}\n */\nproto.threads.pb.FindReply.prototype.getInstancesList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getInstancesList()));\n};\n\n\n/**\n * repeated bytes instances = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getInstancesList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.threads.pb.FindReply.prototype.getInstancesList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getInstancesList()));\n};\n\n\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!proto.threads.pb.FindReply} returns this\n */\nproto.threads.pb.FindReply.prototype.setInstancesList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.FindReply} returns this\n */\nproto.threads.pb.FindReply.prototype.addInstances = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.FindReply} returns this\n */\nproto.threads.pb.FindReply.prototype.clearInstancesList = function() {\n  return this.setInstancesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.FindByIDRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.FindByIDRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.FindByIDRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.FindByIDRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbid: msg.getDbid_asB64(),\n    collectionname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    instanceid: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.FindByIDRequest}\n */\nproto.threads.pb.FindByIDRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.FindByIDRequest;\n  return proto.threads.pb.FindByIDRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.FindByIDRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.FindByIDRequest}\n */\nproto.threads.pb.FindByIDRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDbid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCollectionname(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInstanceid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.FindByIDRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.FindByIDRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.FindByIDRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.FindByIDRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getCollectionname();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getInstanceid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.FindByIDRequest.prototype.getDbid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\nproto.threads.pb.FindByIDRequest.prototype.getDbid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDbid()));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.FindByIDRequest.prototype.getDbid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDbid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.FindByIDRequest} returns this\n */\nproto.threads.pb.FindByIDRequest.prototype.setDbid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional string collectionName = 2;\n * @return {string}\n */\nproto.threads.pb.FindByIDRequest.prototype.getCollectionname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.FindByIDRequest} returns this\n */\nproto.threads.pb.FindByIDRequest.prototype.setCollectionname = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string instanceID = 3;\n * @return {string}\n */\nproto.threads.pb.FindByIDRequest.prototype.getInstanceid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.FindByIDRequest} returns this\n */\nproto.threads.pb.FindByIDRequest.prototype.setInstanceid = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.FindByIDReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.FindByIDReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.FindByIDReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.FindByIDReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    instance: msg.getInstance_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.FindByIDReply}\n */\nproto.threads.pb.FindByIDReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.FindByIDReply;\n  return proto.threads.pb.FindByIDReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.FindByIDReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.FindByIDReply}\n */\nproto.threads.pb.FindByIDReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setInstance(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.FindByIDReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.FindByIDReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.FindByIDReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.FindByIDReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInstance_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes instance = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.FindByIDReply.prototype.getInstance = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes instance = 1;\n * This is a type-conversion wrapper around `getInstance()`\n * @return {string}\n */\nproto.threads.pb.FindByIDReply.prototype.getInstance_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getInstance()));\n};\n\n\n/**\n * optional bytes instance = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getInstance()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.FindByIDReply.prototype.getInstance_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getInstance()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.FindByIDReply} returns this\n */\nproto.threads.pb.FindByIDReply.prototype.setInstance = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.StartTransactionRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.StartTransactionRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.StartTransactionRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.StartTransactionRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbid: msg.getDbid_asB64(),\n    collectionname: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.StartTransactionRequest}\n */\nproto.threads.pb.StartTransactionRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.StartTransactionRequest;\n  return proto.threads.pb.StartTransactionRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.StartTransactionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.StartTransactionRequest}\n */\nproto.threads.pb.StartTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDbid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCollectionname(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.StartTransactionRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.StartTransactionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.StartTransactionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.StartTransactionRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getCollectionname();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.StartTransactionRequest.prototype.getDbid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\nproto.threads.pb.StartTransactionRequest.prototype.getDbid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDbid()));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.StartTransactionRequest.prototype.getDbid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDbid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.StartTransactionRequest} returns this\n */\nproto.threads.pb.StartTransactionRequest.prototype.setDbid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional string collectionName = 2;\n * @return {string}\n */\nproto.threads.pb.StartTransactionRequest.prototype.getCollectionname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.StartTransactionRequest} returns this\n */\nproto.threads.pb.StartTransactionRequest.prototype.setCollectionname = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.threads.pb.ReadTransactionRequest.oneofGroups_ = [[1,2,3,4]];\n\n/**\n * @enum {number}\n */\nproto.threads.pb.ReadTransactionRequest.OptionCase = {\n  OPTION_NOT_SET: 0,\n  STARTTRANSACTIONREQUEST: 1,\n  HASREQUEST: 2,\n  FINDREQUEST: 3,\n  FINDBYIDREQUEST: 4\n};\n\n/**\n * @return {proto.threads.pb.ReadTransactionRequest.OptionCase}\n */\nproto.threads.pb.ReadTransactionRequest.prototype.getOptionCase = function() {\n  return /** @type {proto.threads.pb.ReadTransactionRequest.OptionCase} */(jspb.Message.computeOneofCase(this, proto.threads.pb.ReadTransactionRequest.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.ReadTransactionRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.ReadTransactionRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.ReadTransactionRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ReadTransactionRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    starttransactionrequest: (f = msg.getStarttransactionrequest()) && proto.threads.pb.StartTransactionRequest.toObject(includeInstance, f),\n    hasrequest: (f = msg.getHasrequest()) && proto.threads.pb.HasRequest.toObject(includeInstance, f),\n    findrequest: (f = msg.getFindrequest()) && proto.threads.pb.FindRequest.toObject(includeInstance, f),\n    findbyidrequest: (f = msg.getFindbyidrequest()) && proto.threads.pb.FindByIDRequest.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ReadTransactionRequest}\n */\nproto.threads.pb.ReadTransactionRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ReadTransactionRequest;\n  return proto.threads.pb.ReadTransactionRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ReadTransactionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ReadTransactionRequest}\n */\nproto.threads.pb.ReadTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.threads.pb.StartTransactionRequest;\n      reader.readMessage(value,proto.threads.pb.StartTransactionRequest.deserializeBinaryFromReader);\n      msg.setStarttransactionrequest(value);\n      break;\n    case 2:\n      var value = new proto.threads.pb.HasRequest;\n      reader.readMessage(value,proto.threads.pb.HasRequest.deserializeBinaryFromReader);\n      msg.setHasrequest(value);\n      break;\n    case 3:\n      var value = new proto.threads.pb.FindRequest;\n      reader.readMessage(value,proto.threads.pb.FindRequest.deserializeBinaryFromReader);\n      msg.setFindrequest(value);\n      break;\n    case 4:\n      var value = new proto.threads.pb.FindByIDRequest;\n      reader.readMessage(value,proto.threads.pb.FindByIDRequest.deserializeBinaryFromReader);\n      msg.setFindbyidrequest(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.ReadTransactionRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ReadTransactionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ReadTransactionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ReadTransactionRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStarttransactionrequest();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.threads.pb.StartTransactionRequest.serializeBinaryToWriter\n    );\n  }\n  f = message.getHasrequest();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.threads.pb.HasRequest.serializeBinaryToWriter\n    );\n  }\n  f = message.getFindrequest();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.threads.pb.FindRequest.serializeBinaryToWriter\n    );\n  }\n  f = message.getFindbyidrequest();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.threads.pb.FindByIDRequest.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional StartTransactionRequest startTransactionRequest = 1;\n * @return {?proto.threads.pb.StartTransactionRequest}\n */\nproto.threads.pb.ReadTransactionRequest.prototype.getStarttransactionrequest = function() {\n  return /** @type{?proto.threads.pb.StartTransactionRequest} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.StartTransactionRequest, 1));\n};\n\n\n/**\n * @param {?proto.threads.pb.StartTransactionRequest|undefined} value\n * @return {!proto.threads.pb.ReadTransactionRequest} returns this\n*/\nproto.threads.pb.ReadTransactionRequest.prototype.setStarttransactionrequest = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.threads.pb.ReadTransactionRequest.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.ReadTransactionRequest} returns this\n */\nproto.threads.pb.ReadTransactionRequest.prototype.clearStarttransactionrequest = function() {\n  return this.setStarttransactionrequest(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.ReadTransactionRequest.prototype.hasStarttransactionrequest = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional HasRequest hasRequest = 2;\n * @return {?proto.threads.pb.HasRequest}\n */\nproto.threads.pb.ReadTransactionRequest.prototype.getHasrequest = function() {\n  return /** @type{?proto.threads.pb.HasRequest} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.HasRequest, 2));\n};\n\n\n/**\n * @param {?proto.threads.pb.HasRequest|undefined} value\n * @return {!proto.threads.pb.ReadTransactionRequest} returns this\n*/\nproto.threads.pb.ReadTransactionRequest.prototype.setHasrequest = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.threads.pb.ReadTransactionRequest.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.ReadTransactionRequest} returns this\n */\nproto.threads.pb.ReadTransactionRequest.prototype.clearHasrequest = function() {\n  return this.setHasrequest(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.ReadTransactionRequest.prototype.hasHasrequest = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional FindRequest findRequest = 3;\n * @return {?proto.threads.pb.FindRequest}\n */\nproto.threads.pb.ReadTransactionRequest.prototype.getFindrequest = function() {\n  return /** @type{?proto.threads.pb.FindRequest} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.FindRequest, 3));\n};\n\n\n/**\n * @param {?proto.threads.pb.FindRequest|undefined} value\n * @return {!proto.threads.pb.ReadTransactionRequest} returns this\n*/\nproto.threads.pb.ReadTransactionRequest.prototype.setFindrequest = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 3, proto.threads.pb.ReadTransactionRequest.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.ReadTransactionRequest} returns this\n */\nproto.threads.pb.ReadTransactionRequest.prototype.clearFindrequest = function() {\n  return this.setFindrequest(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.ReadTransactionRequest.prototype.hasFindrequest = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional FindByIDRequest findByIDRequest = 4;\n * @return {?proto.threads.pb.FindByIDRequest}\n */\nproto.threads.pb.ReadTransactionRequest.prototype.getFindbyidrequest = function() {\n  return /** @type{?proto.threads.pb.FindByIDRequest} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.FindByIDRequest, 4));\n};\n\n\n/**\n * @param {?proto.threads.pb.FindByIDRequest|undefined} value\n * @return {!proto.threads.pb.ReadTransactionRequest} returns this\n*/\nproto.threads.pb.ReadTransactionRequest.prototype.setFindbyidrequest = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 4, proto.threads.pb.ReadTransactionRequest.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.ReadTransactionRequest} returns this\n */\nproto.threads.pb.ReadTransactionRequest.prototype.clearFindbyidrequest = function() {\n  return this.setFindbyidrequest(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.ReadTransactionRequest.prototype.hasFindbyidrequest = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.threads.pb.ReadTransactionReply.oneofGroups_ = [[1,2,3]];\n\n/**\n * @enum {number}\n */\nproto.threads.pb.ReadTransactionReply.OptionCase = {\n  OPTION_NOT_SET: 0,\n  HASREPLY: 1,\n  FINDREPLY: 2,\n  FINDBYIDREPLY: 3\n};\n\n/**\n * @return {proto.threads.pb.ReadTransactionReply.OptionCase}\n */\nproto.threads.pb.ReadTransactionReply.prototype.getOptionCase = function() {\n  return /** @type {proto.threads.pb.ReadTransactionReply.OptionCase} */(jspb.Message.computeOneofCase(this, proto.threads.pb.ReadTransactionReply.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.ReadTransactionReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.ReadTransactionReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.ReadTransactionReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ReadTransactionReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hasreply: (f = msg.getHasreply()) && proto.threads.pb.HasReply.toObject(includeInstance, f),\n    findreply: (f = msg.getFindreply()) && proto.threads.pb.FindReply.toObject(includeInstance, f),\n    findbyidreply: (f = msg.getFindbyidreply()) && proto.threads.pb.FindByIDReply.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ReadTransactionReply}\n */\nproto.threads.pb.ReadTransactionReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ReadTransactionReply;\n  return proto.threads.pb.ReadTransactionReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ReadTransactionReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ReadTransactionReply}\n */\nproto.threads.pb.ReadTransactionReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.threads.pb.HasReply;\n      reader.readMessage(value,proto.threads.pb.HasReply.deserializeBinaryFromReader);\n      msg.setHasreply(value);\n      break;\n    case 2:\n      var value = new proto.threads.pb.FindReply;\n      reader.readMessage(value,proto.threads.pb.FindReply.deserializeBinaryFromReader);\n      msg.setFindreply(value);\n      break;\n    case 3:\n      var value = new proto.threads.pb.FindByIDReply;\n      reader.readMessage(value,proto.threads.pb.FindByIDReply.deserializeBinaryFromReader);\n      msg.setFindbyidreply(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.ReadTransactionReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ReadTransactionReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ReadTransactionReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ReadTransactionReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHasreply();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.threads.pb.HasReply.serializeBinaryToWriter\n    );\n  }\n  f = message.getFindreply();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.threads.pb.FindReply.serializeBinaryToWriter\n    );\n  }\n  f = message.getFindbyidreply();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.threads.pb.FindByIDReply.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional HasReply hasReply = 1;\n * @return {?proto.threads.pb.HasReply}\n */\nproto.threads.pb.ReadTransactionReply.prototype.getHasreply = function() {\n  return /** @type{?proto.threads.pb.HasReply} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.HasReply, 1));\n};\n\n\n/**\n * @param {?proto.threads.pb.HasReply|undefined} value\n * @return {!proto.threads.pb.ReadTransactionReply} returns this\n*/\nproto.threads.pb.ReadTransactionReply.prototype.setHasreply = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.threads.pb.ReadTransactionReply.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.ReadTransactionReply} returns this\n */\nproto.threads.pb.ReadTransactionReply.prototype.clearHasreply = function() {\n  return this.setHasreply(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.ReadTransactionReply.prototype.hasHasreply = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional FindReply findReply = 2;\n * @return {?proto.threads.pb.FindReply}\n */\nproto.threads.pb.ReadTransactionReply.prototype.getFindreply = function() {\n  return /** @type{?proto.threads.pb.FindReply} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.FindReply, 2));\n};\n\n\n/**\n * @param {?proto.threads.pb.FindReply|undefined} value\n * @return {!proto.threads.pb.ReadTransactionReply} returns this\n*/\nproto.threads.pb.ReadTransactionReply.prototype.setFindreply = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.threads.pb.ReadTransactionReply.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.ReadTransactionReply} returns this\n */\nproto.threads.pb.ReadTransactionReply.prototype.clearFindreply = function() {\n  return this.setFindreply(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.ReadTransactionReply.prototype.hasFindreply = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional FindByIDReply findByIDReply = 3;\n * @return {?proto.threads.pb.FindByIDReply}\n */\nproto.threads.pb.ReadTransactionReply.prototype.getFindbyidreply = function() {\n  return /** @type{?proto.threads.pb.FindByIDReply} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.FindByIDReply, 3));\n};\n\n\n/**\n * @param {?proto.threads.pb.FindByIDReply|undefined} value\n * @return {!proto.threads.pb.ReadTransactionReply} returns this\n*/\nproto.threads.pb.ReadTransactionReply.prototype.setFindbyidreply = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 3, proto.threads.pb.ReadTransactionReply.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.ReadTransactionReply} returns this\n */\nproto.threads.pb.ReadTransactionReply.prototype.clearFindbyidreply = function() {\n  return this.setFindbyidreply(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.ReadTransactionReply.prototype.hasFindbyidreply = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.threads.pb.WriteTransactionRequest.oneofGroups_ = [[1,2,3,4,5,6,7]];\n\n/**\n * @enum {number}\n */\nproto.threads.pb.WriteTransactionRequest.OptionCase = {\n  OPTION_NOT_SET: 0,\n  STARTTRANSACTIONREQUEST: 1,\n  CREATEREQUEST: 2,\n  SAVEREQUEST: 3,\n  DELETEREQUEST: 4,\n  HASREQUEST: 5,\n  FINDREQUEST: 6,\n  FINDBYIDREQUEST: 7\n};\n\n/**\n * @return {proto.threads.pb.WriteTransactionRequest.OptionCase}\n */\nproto.threads.pb.WriteTransactionRequest.prototype.getOptionCase = function() {\n  return /** @type {proto.threads.pb.WriteTransactionRequest.OptionCase} */(jspb.Message.computeOneofCase(this, proto.threads.pb.WriteTransactionRequest.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.WriteTransactionRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.WriteTransactionRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.WriteTransactionRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.WriteTransactionRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    starttransactionrequest: (f = msg.getStarttransactionrequest()) && proto.threads.pb.StartTransactionRequest.toObject(includeInstance, f),\n    createrequest: (f = msg.getCreaterequest()) && proto.threads.pb.CreateRequest.toObject(includeInstance, f),\n    saverequest: (f = msg.getSaverequest()) && proto.threads.pb.SaveRequest.toObject(includeInstance, f),\n    deleterequest: (f = msg.getDeleterequest()) && proto.threads.pb.DeleteRequest.toObject(includeInstance, f),\n    hasrequest: (f = msg.getHasrequest()) && proto.threads.pb.HasRequest.toObject(includeInstance, f),\n    findrequest: (f = msg.getFindrequest()) && proto.threads.pb.FindRequest.toObject(includeInstance, f),\n    findbyidrequest: (f = msg.getFindbyidrequest()) && proto.threads.pb.FindByIDRequest.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.WriteTransactionRequest}\n */\nproto.threads.pb.WriteTransactionRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.WriteTransactionRequest;\n  return proto.threads.pb.WriteTransactionRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.WriteTransactionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.WriteTransactionRequest}\n */\nproto.threads.pb.WriteTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.threads.pb.StartTransactionRequest;\n      reader.readMessage(value,proto.threads.pb.StartTransactionRequest.deserializeBinaryFromReader);\n      msg.setStarttransactionrequest(value);\n      break;\n    case 2:\n      var value = new proto.threads.pb.CreateRequest;\n      reader.readMessage(value,proto.threads.pb.CreateRequest.deserializeBinaryFromReader);\n      msg.setCreaterequest(value);\n      break;\n    case 3:\n      var value = new proto.threads.pb.SaveRequest;\n      reader.readMessage(value,proto.threads.pb.SaveRequest.deserializeBinaryFromReader);\n      msg.setSaverequest(value);\n      break;\n    case 4:\n      var value = new proto.threads.pb.DeleteRequest;\n      reader.readMessage(value,proto.threads.pb.DeleteRequest.deserializeBinaryFromReader);\n      msg.setDeleterequest(value);\n      break;\n    case 5:\n      var value = new proto.threads.pb.HasRequest;\n      reader.readMessage(value,proto.threads.pb.HasRequest.deserializeBinaryFromReader);\n      msg.setHasrequest(value);\n      break;\n    case 6:\n      var value = new proto.threads.pb.FindRequest;\n      reader.readMessage(value,proto.threads.pb.FindRequest.deserializeBinaryFromReader);\n      msg.setFindrequest(value);\n      break;\n    case 7:\n      var value = new proto.threads.pb.FindByIDRequest;\n      reader.readMessage(value,proto.threads.pb.FindByIDRequest.deserializeBinaryFromReader);\n      msg.setFindbyidrequest(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.WriteTransactionRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.WriteTransactionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.WriteTransactionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.WriteTransactionRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStarttransactionrequest();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.threads.pb.StartTransactionRequest.serializeBinaryToWriter\n    );\n  }\n  f = message.getCreaterequest();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.threads.pb.CreateRequest.serializeBinaryToWriter\n    );\n  }\n  f = message.getSaverequest();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.threads.pb.SaveRequest.serializeBinaryToWriter\n    );\n  }\n  f = message.getDeleterequest();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.threads.pb.DeleteRequest.serializeBinaryToWriter\n    );\n  }\n  f = message.getHasrequest();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.threads.pb.HasRequest.serializeBinaryToWriter\n    );\n  }\n  f = message.getFindrequest();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.threads.pb.FindRequest.serializeBinaryToWriter\n    );\n  }\n  f = message.getFindbyidrequest();\n  if (f != null) {\n    writer.writeMessage(\n      7,\n      f,\n      proto.threads.pb.FindByIDRequest.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional StartTransactionRequest startTransactionRequest = 1;\n * @return {?proto.threads.pb.StartTransactionRequest}\n */\nproto.threads.pb.WriteTransactionRequest.prototype.getStarttransactionrequest = function() {\n  return /** @type{?proto.threads.pb.StartTransactionRequest} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.StartTransactionRequest, 1));\n};\n\n\n/**\n * @param {?proto.threads.pb.StartTransactionRequest|undefined} value\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n*/\nproto.threads.pb.WriteTransactionRequest.prototype.setStarttransactionrequest = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.threads.pb.WriteTransactionRequest.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n */\nproto.threads.pb.WriteTransactionRequest.prototype.clearStarttransactionrequest = function() {\n  return this.setStarttransactionrequest(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.WriteTransactionRequest.prototype.hasStarttransactionrequest = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional CreateRequest createRequest = 2;\n * @return {?proto.threads.pb.CreateRequest}\n */\nproto.threads.pb.WriteTransactionRequest.prototype.getCreaterequest = function() {\n  return /** @type{?proto.threads.pb.CreateRequest} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.CreateRequest, 2));\n};\n\n\n/**\n * @param {?proto.threads.pb.CreateRequest|undefined} value\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n*/\nproto.threads.pb.WriteTransactionRequest.prototype.setCreaterequest = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.threads.pb.WriteTransactionRequest.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n */\nproto.threads.pb.WriteTransactionRequest.prototype.clearCreaterequest = function() {\n  return this.setCreaterequest(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.WriteTransactionRequest.prototype.hasCreaterequest = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional SaveRequest saveRequest = 3;\n * @return {?proto.threads.pb.SaveRequest}\n */\nproto.threads.pb.WriteTransactionRequest.prototype.getSaverequest = function() {\n  return /** @type{?proto.threads.pb.SaveRequest} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.SaveRequest, 3));\n};\n\n\n/**\n * @param {?proto.threads.pb.SaveRequest|undefined} value\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n*/\nproto.threads.pb.WriteTransactionRequest.prototype.setSaverequest = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 3, proto.threads.pb.WriteTransactionRequest.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n */\nproto.threads.pb.WriteTransactionRequest.prototype.clearSaverequest = function() {\n  return this.setSaverequest(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.WriteTransactionRequest.prototype.hasSaverequest = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional DeleteRequest deleteRequest = 4;\n * @return {?proto.threads.pb.DeleteRequest}\n */\nproto.threads.pb.WriteTransactionRequest.prototype.getDeleterequest = function() {\n  return /** @type{?proto.threads.pb.DeleteRequest} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.DeleteRequest, 4));\n};\n\n\n/**\n * @param {?proto.threads.pb.DeleteRequest|undefined} value\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n*/\nproto.threads.pb.WriteTransactionRequest.prototype.setDeleterequest = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 4, proto.threads.pb.WriteTransactionRequest.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n */\nproto.threads.pb.WriteTransactionRequest.prototype.clearDeleterequest = function() {\n  return this.setDeleterequest(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.WriteTransactionRequest.prototype.hasDeleterequest = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional HasRequest hasRequest = 5;\n * @return {?proto.threads.pb.HasRequest}\n */\nproto.threads.pb.WriteTransactionRequest.prototype.getHasrequest = function() {\n  return /** @type{?proto.threads.pb.HasRequest} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.HasRequest, 5));\n};\n\n\n/**\n * @param {?proto.threads.pb.HasRequest|undefined} value\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n*/\nproto.threads.pb.WriteTransactionRequest.prototype.setHasrequest = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 5, proto.threads.pb.WriteTransactionRequest.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n */\nproto.threads.pb.WriteTransactionRequest.prototype.clearHasrequest = function() {\n  return this.setHasrequest(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.WriteTransactionRequest.prototype.hasHasrequest = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional FindRequest findRequest = 6;\n * @return {?proto.threads.pb.FindRequest}\n */\nproto.threads.pb.WriteTransactionRequest.prototype.getFindrequest = function() {\n  return /** @type{?proto.threads.pb.FindRequest} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.FindRequest, 6));\n};\n\n\n/**\n * @param {?proto.threads.pb.FindRequest|undefined} value\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n*/\nproto.threads.pb.WriteTransactionRequest.prototype.setFindrequest = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 6, proto.threads.pb.WriteTransactionRequest.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n */\nproto.threads.pb.WriteTransactionRequest.prototype.clearFindrequest = function() {\n  return this.setFindrequest(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.WriteTransactionRequest.prototype.hasFindrequest = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional FindByIDRequest findByIDRequest = 7;\n * @return {?proto.threads.pb.FindByIDRequest}\n */\nproto.threads.pb.WriteTransactionRequest.prototype.getFindbyidrequest = function() {\n  return /** @type{?proto.threads.pb.FindByIDRequest} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.FindByIDRequest, 7));\n};\n\n\n/**\n * @param {?proto.threads.pb.FindByIDRequest|undefined} value\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n*/\nproto.threads.pb.WriteTransactionRequest.prototype.setFindbyidrequest = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 7, proto.threads.pb.WriteTransactionRequest.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionRequest} returns this\n */\nproto.threads.pb.WriteTransactionRequest.prototype.clearFindbyidrequest = function() {\n  return this.setFindbyidrequest(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.WriteTransactionRequest.prototype.hasFindbyidrequest = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.threads.pb.WriteTransactionReply.oneofGroups_ = [[1,2,3,4,5,6]];\n\n/**\n * @enum {number}\n */\nproto.threads.pb.WriteTransactionReply.OptionCase = {\n  OPTION_NOT_SET: 0,\n  CREATEREPLY: 1,\n  SAVEREPLY: 2,\n  DELETEREPLY: 3,\n  HASREPLY: 4,\n  FINDREPLY: 5,\n  FINDBYIDREPLY: 6\n};\n\n/**\n * @return {proto.threads.pb.WriteTransactionReply.OptionCase}\n */\nproto.threads.pb.WriteTransactionReply.prototype.getOptionCase = function() {\n  return /** @type {proto.threads.pb.WriteTransactionReply.OptionCase} */(jspb.Message.computeOneofCase(this, proto.threads.pb.WriteTransactionReply.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.WriteTransactionReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.WriteTransactionReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.WriteTransactionReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.WriteTransactionReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    createreply: (f = msg.getCreatereply()) && proto.threads.pb.CreateReply.toObject(includeInstance, f),\n    savereply: (f = msg.getSavereply()) && proto.threads.pb.SaveReply.toObject(includeInstance, f),\n    deletereply: (f = msg.getDeletereply()) && proto.threads.pb.DeleteReply.toObject(includeInstance, f),\n    hasreply: (f = msg.getHasreply()) && proto.threads.pb.HasReply.toObject(includeInstance, f),\n    findreply: (f = msg.getFindreply()) && proto.threads.pb.FindReply.toObject(includeInstance, f),\n    findbyidreply: (f = msg.getFindbyidreply()) && proto.threads.pb.FindByIDReply.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.WriteTransactionReply}\n */\nproto.threads.pb.WriteTransactionReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.WriteTransactionReply;\n  return proto.threads.pb.WriteTransactionReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.WriteTransactionReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.WriteTransactionReply}\n */\nproto.threads.pb.WriteTransactionReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.threads.pb.CreateReply;\n      reader.readMessage(value,proto.threads.pb.CreateReply.deserializeBinaryFromReader);\n      msg.setCreatereply(value);\n      break;\n    case 2:\n      var value = new proto.threads.pb.SaveReply;\n      reader.readMessage(value,proto.threads.pb.SaveReply.deserializeBinaryFromReader);\n      msg.setSavereply(value);\n      break;\n    case 3:\n      var value = new proto.threads.pb.DeleteReply;\n      reader.readMessage(value,proto.threads.pb.DeleteReply.deserializeBinaryFromReader);\n      msg.setDeletereply(value);\n      break;\n    case 4:\n      var value = new proto.threads.pb.HasReply;\n      reader.readMessage(value,proto.threads.pb.HasReply.deserializeBinaryFromReader);\n      msg.setHasreply(value);\n      break;\n    case 5:\n      var value = new proto.threads.pb.FindReply;\n      reader.readMessage(value,proto.threads.pb.FindReply.deserializeBinaryFromReader);\n      msg.setFindreply(value);\n      break;\n    case 6:\n      var value = new proto.threads.pb.FindByIDReply;\n      reader.readMessage(value,proto.threads.pb.FindByIDReply.deserializeBinaryFromReader);\n      msg.setFindbyidreply(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.WriteTransactionReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.WriteTransactionReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.WriteTransactionReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.WriteTransactionReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCreatereply();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.threads.pb.CreateReply.serializeBinaryToWriter\n    );\n  }\n  f = message.getSavereply();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.threads.pb.SaveReply.serializeBinaryToWriter\n    );\n  }\n  f = message.getDeletereply();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.threads.pb.DeleteReply.serializeBinaryToWriter\n    );\n  }\n  f = message.getHasreply();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.threads.pb.HasReply.serializeBinaryToWriter\n    );\n  }\n  f = message.getFindreply();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.threads.pb.FindReply.serializeBinaryToWriter\n    );\n  }\n  f = message.getFindbyidreply();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.threads.pb.FindByIDReply.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional CreateReply createReply = 1;\n * @return {?proto.threads.pb.CreateReply}\n */\nproto.threads.pb.WriteTransactionReply.prototype.getCreatereply = function() {\n  return /** @type{?proto.threads.pb.CreateReply} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.CreateReply, 1));\n};\n\n\n/**\n * @param {?proto.threads.pb.CreateReply|undefined} value\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n*/\nproto.threads.pb.WriteTransactionReply.prototype.setCreatereply = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.threads.pb.WriteTransactionReply.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n */\nproto.threads.pb.WriteTransactionReply.prototype.clearCreatereply = function() {\n  return this.setCreatereply(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.WriteTransactionReply.prototype.hasCreatereply = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional SaveReply saveReply = 2;\n * @return {?proto.threads.pb.SaveReply}\n */\nproto.threads.pb.WriteTransactionReply.prototype.getSavereply = function() {\n  return /** @type{?proto.threads.pb.SaveReply} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.SaveReply, 2));\n};\n\n\n/**\n * @param {?proto.threads.pb.SaveReply|undefined} value\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n*/\nproto.threads.pb.WriteTransactionReply.prototype.setSavereply = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.threads.pb.WriteTransactionReply.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n */\nproto.threads.pb.WriteTransactionReply.prototype.clearSavereply = function() {\n  return this.setSavereply(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.WriteTransactionReply.prototype.hasSavereply = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional DeleteReply deleteReply = 3;\n * @return {?proto.threads.pb.DeleteReply}\n */\nproto.threads.pb.WriteTransactionReply.prototype.getDeletereply = function() {\n  return /** @type{?proto.threads.pb.DeleteReply} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.DeleteReply, 3));\n};\n\n\n/**\n * @param {?proto.threads.pb.DeleteReply|undefined} value\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n*/\nproto.threads.pb.WriteTransactionReply.prototype.setDeletereply = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 3, proto.threads.pb.WriteTransactionReply.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n */\nproto.threads.pb.WriteTransactionReply.prototype.clearDeletereply = function() {\n  return this.setDeletereply(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.WriteTransactionReply.prototype.hasDeletereply = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional HasReply hasReply = 4;\n * @return {?proto.threads.pb.HasReply}\n */\nproto.threads.pb.WriteTransactionReply.prototype.getHasreply = function() {\n  return /** @type{?proto.threads.pb.HasReply} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.HasReply, 4));\n};\n\n\n/**\n * @param {?proto.threads.pb.HasReply|undefined} value\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n*/\nproto.threads.pb.WriteTransactionReply.prototype.setHasreply = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 4, proto.threads.pb.WriteTransactionReply.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n */\nproto.threads.pb.WriteTransactionReply.prototype.clearHasreply = function() {\n  return this.setHasreply(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.WriteTransactionReply.prototype.hasHasreply = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional FindReply findReply = 5;\n * @return {?proto.threads.pb.FindReply}\n */\nproto.threads.pb.WriteTransactionReply.prototype.getFindreply = function() {\n  return /** @type{?proto.threads.pb.FindReply} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.FindReply, 5));\n};\n\n\n/**\n * @param {?proto.threads.pb.FindReply|undefined} value\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n*/\nproto.threads.pb.WriteTransactionReply.prototype.setFindreply = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 5, proto.threads.pb.WriteTransactionReply.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n */\nproto.threads.pb.WriteTransactionReply.prototype.clearFindreply = function() {\n  return this.setFindreply(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.WriteTransactionReply.prototype.hasFindreply = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional FindByIDReply findByIDReply = 6;\n * @return {?proto.threads.pb.FindByIDReply}\n */\nproto.threads.pb.WriteTransactionReply.prototype.getFindbyidreply = function() {\n  return /** @type{?proto.threads.pb.FindByIDReply} */ (\n    jspb.Message.getWrapperField(this, proto.threads.pb.FindByIDReply, 6));\n};\n\n\n/**\n * @param {?proto.threads.pb.FindByIDReply|undefined} value\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n*/\nproto.threads.pb.WriteTransactionReply.prototype.setFindbyidreply = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 6, proto.threads.pb.WriteTransactionReply.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.threads.pb.WriteTransactionReply} returns this\n */\nproto.threads.pb.WriteTransactionReply.prototype.clearFindbyidreply = function() {\n  return this.setFindbyidreply(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.threads.pb.WriteTransactionReply.prototype.hasFindbyidreply = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.threads.pb.ListenRequest.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.ListenRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.ListenRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.ListenRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ListenRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dbid: msg.getDbid_asB64(),\n    filtersList: jspb.Message.toObjectList(msg.getFiltersList(),\n    proto.threads.pb.ListenRequest.Filter.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ListenRequest}\n */\nproto.threads.pb.ListenRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ListenRequest;\n  return proto.threads.pb.ListenRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ListenRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ListenRequest}\n */\nproto.threads.pb.ListenRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDbid(value);\n      break;\n    case 2:\n      var value = new proto.threads.pb.ListenRequest.Filter;\n      reader.readMessage(value,proto.threads.pb.ListenRequest.Filter.deserializeBinaryFromReader);\n      msg.addFilters(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.ListenRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ListenRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ListenRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ListenRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDbid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getFiltersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.threads.pb.ListenRequest.Filter.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.ListenRequest.Filter.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.ListenRequest.Filter.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.ListenRequest.Filter} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ListenRequest.Filter.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    collectionname: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    instanceid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    action: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ListenRequest.Filter}\n */\nproto.threads.pb.ListenRequest.Filter.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ListenRequest.Filter;\n  return proto.threads.pb.ListenRequest.Filter.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ListenRequest.Filter} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ListenRequest.Filter}\n */\nproto.threads.pb.ListenRequest.Filter.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCollectionname(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInstanceid(value);\n      break;\n    case 3:\n      var value = /** @type {!proto.threads.pb.ListenRequest.Filter.Action} */ (reader.readEnum());\n      msg.setAction(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.ListenRequest.Filter.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ListenRequest.Filter.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ListenRequest.Filter} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ListenRequest.Filter.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCollectionname();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getInstanceid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAction();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.threads.pb.ListenRequest.Filter.Action = {\n  ALL: 0,\n  CREATE: 1,\n  SAVE: 2,\n  DELETE: 3\n};\n\n/**\n * optional string collectionName = 1;\n * @return {string}\n */\nproto.threads.pb.ListenRequest.Filter.prototype.getCollectionname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.ListenRequest.Filter} returns this\n */\nproto.threads.pb.ListenRequest.Filter.prototype.setCollectionname = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string instanceID = 2;\n * @return {string}\n */\nproto.threads.pb.ListenRequest.Filter.prototype.getInstanceid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.ListenRequest.Filter} returns this\n */\nproto.threads.pb.ListenRequest.Filter.prototype.setInstanceid = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional Action action = 3;\n * @return {!proto.threads.pb.ListenRequest.Filter.Action}\n */\nproto.threads.pb.ListenRequest.Filter.prototype.getAction = function() {\n  return /** @type {!proto.threads.pb.ListenRequest.Filter.Action} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {!proto.threads.pb.ListenRequest.Filter.Action} value\n * @return {!proto.threads.pb.ListenRequest.Filter} returns this\n */\nproto.threads.pb.ListenRequest.Filter.prototype.setAction = function(value) {\n  return jspb.Message.setProto3EnumField(this, 3, value);\n};\n\n\n/**\n * optional bytes dbID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.ListenRequest.prototype.getDbid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * This is a type-conversion wrapper around `getDbid()`\n * @return {string}\n */\nproto.threads.pb.ListenRequest.prototype.getDbid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDbid()));\n};\n\n\n/**\n * optional bytes dbID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDbid()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.ListenRequest.prototype.getDbid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDbid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.ListenRequest} returns this\n */\nproto.threads.pb.ListenRequest.prototype.setDbid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * repeated Filter filters = 2;\n * @return {!Array<!proto.threads.pb.ListenRequest.Filter>}\n */\nproto.threads.pb.ListenRequest.prototype.getFiltersList = function() {\n  return /** @type{!Array<!proto.threads.pb.ListenRequest.Filter>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.threads.pb.ListenRequest.Filter, 2));\n};\n\n\n/**\n * @param {!Array<!proto.threads.pb.ListenRequest.Filter>} value\n * @return {!proto.threads.pb.ListenRequest} returns this\n*/\nproto.threads.pb.ListenRequest.prototype.setFiltersList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.threads.pb.ListenRequest.Filter=} opt_value\n * @param {number=} opt_index\n * @return {!proto.threads.pb.ListenRequest.Filter}\n */\nproto.threads.pb.ListenRequest.prototype.addFilters = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.threads.pb.ListenRequest.Filter, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.threads.pb.ListenRequest} returns this\n */\nproto.threads.pb.ListenRequest.prototype.clearFiltersList = function() {\n  return this.setFiltersList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.threads.pb.ListenReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.threads.pb.ListenReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.threads.pb.ListenReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ListenReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    collectionname: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    instanceid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    action: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    instance: msg.getInstance_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.threads.pb.ListenReply}\n */\nproto.threads.pb.ListenReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.threads.pb.ListenReply;\n  return proto.threads.pb.ListenReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.threads.pb.ListenReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.threads.pb.ListenReply}\n */\nproto.threads.pb.ListenReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCollectionname(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInstanceid(value);\n      break;\n    case 3:\n      var value = /** @type {!proto.threads.pb.ListenReply.Action} */ (reader.readEnum());\n      msg.setAction(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setInstance(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.threads.pb.ListenReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.threads.pb.ListenReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.threads.pb.ListenReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.threads.pb.ListenReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCollectionname();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getInstanceid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAction();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      3,\n      f\n    );\n  }\n  f = message.getInstance_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.threads.pb.ListenReply.Action = {\n  CREATE: 0,\n  SAVE: 1,\n  DELETE: 2\n};\n\n/**\n * optional string collectionName = 1;\n * @return {string}\n */\nproto.threads.pb.ListenReply.prototype.getCollectionname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.ListenReply} returns this\n */\nproto.threads.pb.ListenReply.prototype.setCollectionname = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string instanceID = 2;\n * @return {string}\n */\nproto.threads.pb.ListenReply.prototype.getInstanceid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.threads.pb.ListenReply} returns this\n */\nproto.threads.pb.ListenReply.prototype.setInstanceid = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional Action action = 3;\n * @return {!proto.threads.pb.ListenReply.Action}\n */\nproto.threads.pb.ListenReply.prototype.getAction = function() {\n  return /** @type {!proto.threads.pb.ListenReply.Action} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {!proto.threads.pb.ListenReply.Action} value\n * @return {!proto.threads.pb.ListenReply} returns this\n */\nproto.threads.pb.ListenReply.prototype.setAction = function(value) {\n  return jspb.Message.setProto3EnumField(this, 3, value);\n};\n\n\n/**\n * optional bytes instance = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.threads.pb.ListenReply.prototype.getInstance = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes instance = 4;\n * This is a type-conversion wrapper around `getInstance()`\n * @return {string}\n */\nproto.threads.pb.ListenReply.prototype.getInstance_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getInstance()));\n};\n\n\n/**\n * optional bytes instance = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getInstance()`\n * @return {!Uint8Array}\n */\nproto.threads.pb.ListenReply.prototype.getInstance_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getInstance()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.threads.pb.ListenReply} returns this\n */\nproto.threads.pb.ListenReply.prototype.setInstance = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\ngoog.object.extend(exports, proto.threads.pb);\n"]},"metadata":{},"sourceType":"script"}