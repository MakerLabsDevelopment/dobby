{"ast":null,"code":"function strs2ab(strs) {\n  // Adapted from https://stackoverflow.com/posts/11058858\n  const len = strs.reduce(function (total, str) {\n    return total + str.length * 2;\n  }, 0);\n  const buf = new ArrayBuffer(len); // 2 bytes for each char\n\n  const bufView = new Uint16Array(buf);\n  let offset = 0;\n  strs.forEach(function (str) {\n    for (var i = 0, strLen = str.length; i < strLen; i++) {\n      bufView[offset + i] = str.charCodeAt(i);\n    }\n\n    offset += str.length;\n  });\n  return bufView;\n}\n\nmodule.exports = function init(window) {\n  const seedrandom = require('seedrandom/seedrandom.js');\n\n  function execGlobal(name, value) {\n    return window[name](value);\n  }\n\n  let SyncRandomBytes;\n  let seed;\n\n  try {\n    SyncRandomBytes = execGlobal('require', 'react-native').NativeModules.SyncRandomBytes;\n\n    if (SyncRandomBytes) {\n      seed = SyncRandomBytes.seed;\n    }\n  } catch (_) {}\n\n  if (!seed && window && 'Expo' in window) {\n    seed = strs2ab([window.Expo.Constants.installationId, window.Expo.Constants.sessionId, 'performance' in window ? window.performance.now().toString(32) : new Date().toISOString(), Math.random().toString(32)]);\n  }\n\n  let prng = seedrandom(seed);\n  let early = false;\n\n  if (!seed && SyncRandomBytes) {\n    early = true;\n    SyncRandomBytes.randomBytes().then(seed => {\n      early = false;\n      prng = seedrandom(seed);\n    }).catch(function (err) {\n      early = false;\n      console.log(`WARNING: can not collect seed data: ${err.message}`);\n    });\n  }\n\n  function randomFillUint32(input) {\n    const len = input.length;\n\n    if (len > 16384) {\n      // 65536 by 4\n      throw new Error('QuotaExceeded');\n    }\n\n    for (let i = len - 1; i >= 0; i--) {\n      input[i] = prng.int32();\n    }\n\n    return input;\n  }\n\n  function randomFillInt32(input) {\n    const len = input.length;\n\n    if (len > 16384) {\n      // 65536 by 4\n      throw new Error('QuotaExceeded');\n    }\n\n    for (let i = len - 1; i >= 0; i--) {\n      input[i] = prng.int32() - 0x80000000;\n    }\n\n    return input;\n  }\n\n  function randomFillUint8(input) {\n    if (input.length > 65536) {\n      throw new Error('QuotaExceeded');\n    }\n\n    const count = input.length * 0.25 + 1 | 0;\n\n    for (let i = count - 1, n = 0; i >= 0; i--) {\n      const value = prng.int32();\n      input[n++] = value & 0xff;\n      input[n++] = value >> 8 & 0xff;\n      input[n++] = value >> 16 & 0xff;\n      input[n++] = value >> 24 & 0xff;\n    }\n\n    return input;\n  }\n\n  function randomFillInt8(input) {\n    if (input.length > 65536) {\n      throw new Error('QuotaExceeded');\n    }\n\n    const count = input.length * 0.25 + 1 | 0;\n\n    for (let i = count - 1, n = 0; i >= 0; i--) {\n      const value = prng.int32();\n      input[n++] = (value & 0xff) - 0x80;\n      input[n++] = (value >> 8 & 0xff) - 0x80;\n      input[n++] = (value >> 16 & 0xff) - 0x80;\n      input[n++] = (value >> 24 & 0xff) - 0x80;\n    }\n\n    return input;\n  }\n\n  function randomFillUint16(input) {\n    if (input.length > 32767) {\n      throw new Error('QuotaExceeded');\n    }\n\n    const count = input.length * 0.5 + 1 | 0;\n\n    for (let i = count - 1, n = 0; i >= 0; i--) {\n      const value = prng.int32();\n      input[n++] = value & 0xffff;\n      input[n++] = value >> 16 & 0xffff;\n    }\n\n    return input;\n  }\n\n  function randomFillInt16(input) {\n    if (input.length > 32767) {\n      throw new Error('QuotaExceeded');\n    }\n\n    const count = input.length * 0.5 + 1 | 0;\n\n    for (let i = count - 1, n = 0; i >= 0; i--) {\n      const value = prng.int32();\n      input[n++] = (value & 0xffff) - 0x8000;\n      input[n++] = (value >> 16 & 0xffff) - 0x8000;\n    }\n\n    return input;\n  }\n\n  return function getSeedRandomValues(input) {\n    if (early) {\n      early = false;\n      console.log('WARNING: random data is requested before the seed is done');\n    }\n\n    if (input === null || input === undefined) {\n      throw new Error('invalid type');\n    }\n\n    if (input instanceof Uint8Array) {\n      return randomFillUint8(input);\n    }\n\n    if (input instanceof Uint32Array) {\n      return randomFillUint32(input);\n    }\n\n    if (input instanceof Uint16Array) {\n      return randomFillUint16(input);\n    }\n\n    if (input instanceof Int32Array) {\n      return randomFillInt32(input);\n    }\n\n    if (input instanceof Int16Array) {\n      return randomFillInt16(input);\n    }\n\n    if (input instanceof Int8Array) {\n      return randomFillInt8(input);\n    }\n\n    if (input instanceof Uint8ClampedArray) {\n      return randomFillUint8(input);\n    }\n\n    throw new Error('invalid type');\n  };\n};","map":{"version":3,"sources":["/Users/nassarhayat/apps/textiletable/js-examples/bucket-photo-gallery/node_modules/@consento/sync-randombytes/index-seedrandom.js"],"names":["strs2ab","strs","len","reduce","total","str","length","buf","ArrayBuffer","bufView","Uint16Array","offset","forEach","i","strLen","charCodeAt","module","exports","init","window","seedrandom","require","execGlobal","name","value","SyncRandomBytes","seed","NativeModules","_","Expo","Constants","installationId","sessionId","performance","now","toString","Date","toISOString","Math","random","prng","early","randomBytes","then","catch","err","console","log","message","randomFillUint32","input","Error","int32","randomFillInt32","randomFillUint8","count","n","randomFillInt8","randomFillUint16","randomFillInt16","getSeedRandomValues","undefined","Uint8Array","Uint32Array","Int32Array","Int16Array","Int8Array","Uint8ClampedArray"],"mappings":"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","sourcesContent":["function strs2ab (strs) {\n  // Adapted from https://stackoverflow.com/posts/11058858\n  const len = strs.reduce(function (total, str) {\n    return total + (str.length * 2)\n  }, 0)\n  const buf = new ArrayBuffer(len) // 2 bytes for each char\n  const bufView = new Uint16Array(buf)\n  let offset = 0\n  strs.forEach(function (str) {\n    for (var i = 0, strLen = str.length; i < strLen; i++) {\n      bufView[offset + i] = str.charCodeAt(i)\n    }\n    offset += str.length\n  })\n  return bufView\n}\n\nmodule.exports = function init (window) {\n  const seedrandom = require('seedrandom/seedrandom.js')\n  function execGlobal (name, value) {\n    return window[name](value)\n  }\n\n  let SyncRandomBytes\n  let seed\n  try {\n    SyncRandomBytes = execGlobal('require', 'react-native').NativeModules.SyncRandomBytes\n    if (SyncRandomBytes) {\n      seed = SyncRandomBytes.seed\n    }\n  } catch (_) {}\n\n  if (!seed && window && 'Expo' in window) {\n    seed = strs2ab([\n      window.Expo.Constants.installationId,\n      window.Expo.Constants.sessionId,\n      'performance' in window ? window.performance.now().toString(32) : (new Date()).toISOString(),\n      Math.random().toString(32)\n    ])\n  }\n\n  let prng = seedrandom(seed)\n  let early = false\n\n  if (!seed && SyncRandomBytes) {\n    early = true\n    SyncRandomBytes.randomBytes()\n      .then(seed => {\n        early = false\n        prng = seedrandom(seed)\n      })\n      .catch(function (err) {\n        early = false\n        console.log(`WARNING: can not collect seed data: ${err.message}`)\n      })\n  }\n\n  function randomFillUint32 (input) {\n    const len = input.length\n    if (len > 16384) { // 65536 by 4\n      throw new Error('QuotaExceeded')\n    }\n    for (let i = len - 1; i >= 0; i--) {\n      input[i] = prng.int32()\n    }\n    return input\n  }\n\n  function randomFillInt32 (input) {\n    const len = input.length\n    if (len > 16384) { // 65536 by 4\n      throw new Error('QuotaExceeded')\n    }\n    for (let i = len - 1; i >= 0; i--) {\n      input[i] = prng.int32() - 0x80000000\n    }\n    return input\n  }\n\n  function randomFillUint8 (input) {\n    if (input.length > 65536) {\n      throw new Error('QuotaExceeded')\n    }\n    const count = (input.length * 0.25 + 1) | 0\n    for (let i = count - 1, n = 0; i >= 0; i--) {\n      const value = prng.int32()\n      input[n++] = value & 0xff\n      input[n++] = (value >> 8) & 0xff\n      input[n++] = (value >> 16) & 0xff\n      input[n++] = (value >> 24) & 0xff\n    }\n    return input\n  }\n\n  function randomFillInt8 (input) {\n    if (input.length > 65536) {\n      throw new Error('QuotaExceeded')\n    }\n    const count = (input.length * 0.25 + 1) | 0\n    for (let i = count - 1, n = 0; i >= 0; i--) {\n      const value = prng.int32()\n      input[n++] = (value & 0xff) - 0x80\n      input[n++] = ((value >> 8) & 0xff) - 0x80\n      input[n++] = ((value >> 16) & 0xff) - 0x80\n      input[n++] = ((value >> 24) & 0xff) - 0x80\n    }\n    return input\n  }\n\n  function randomFillUint16 (input) {\n    if (input.length > 32767) {\n      throw new Error('QuotaExceeded')\n    }\n    const count = (input.length * 0.5 + 1) | 0\n    for (let i = count - 1, n = 0; i >= 0; i--) {\n      const value = prng.int32()\n      input[n++] = value & 0xffff\n      input[n++] = (value >> 16) & 0xffff\n    }\n    return input\n  }\n\n  function randomFillInt16 (input) {\n    if (input.length > 32767) {\n      throw new Error('QuotaExceeded')\n    }\n    const count = (input.length * 0.5 + 1) | 0\n    for (let i = count - 1, n = 0; i >= 0; i--) {\n      const value = prng.int32()\n      input[n++] = (value & 0xffff) - 0x8000\n      input[n++] = ((value >> 16) & 0xffff) - 0x8000\n    }\n    return input\n  }\n\n  return function getSeedRandomValues (input) {\n    if (early) {\n      early = false\n      console.log('WARNING: random data is requested before the seed is done')\n    }\n    if (input === null || input === undefined) {\n      throw new Error('invalid type')\n    }\n    if (input instanceof Uint8Array) {\n      return randomFillUint8(input)\n    }\n    if (input instanceof Uint32Array) {\n      return randomFillUint32(input)\n    }\n    if (input instanceof Uint16Array) {\n      return randomFillUint16(input)\n    }\n    if (input instanceof Int32Array) {\n      return randomFillInt32(input)\n    }\n    if (input instanceof Int16Array) {\n      return randomFillInt16(input)\n    }\n    if (input instanceof Int8Array) {\n      return randomFillInt8(input)\n    }\n    if (input instanceof Uint8ClampedArray) {\n      return randomFillUint8(input)\n    }\n    throw new Error('invalid type')\n  }\n}\n"]},"metadata":{},"sourceType":"script"}