{"ast":null,"code":"import { set, updateAll } from 'shades';\nimport { cache } from '.././utils';\nimport { PrivateKey, Client } from '@textile/hub';\nexport default {\n  name: 'auth',\n  getReducer: () => {\n    const keyInfo = {\n      key: 'bs3g66aciasarrm46kosxap74te'\n    };\n    const initialData = {\n      client: null,\n      error: null,\n      loading: false,\n      keyInfo\n    };\n    return (state = initialData, {\n      type,\n      payload,\n      err\n    }) => {\n      console.log(type);\n\n      if (type.startsWith('AUTH_') && type.endsWith('_START')) {\n        return set('loading')(true)(state);\n      }\n\n      if (type === 'AUTH_SIGN_OUT') {\n        localStorage.removeItem('identity');\n        return set('token')(null)(state);\n      }\n\n      if (type === 'AUTH_SIGN_IN_SUCCESS') {\n        return updateAll(set('error')(null), set('loading')(false), set('identity')(payload.identity), set('client')(payload.client))(state);\n      }\n\n      if (type === 'AUTH_SIGN_IN_ERROR') {\n        return updateAll(set('error')(err.message), set('loading')(false))(state);\n      }\n\n      return state;\n    };\n  },\n  doAuthSignIn: () => {\n    return async ({\n      store,\n      dispatch\n    }) => {\n      dispatch({\n        type: 'AUTH_SIGN_IN_START'\n      });\n      let storedIdent = localStorage.getItem('identity');\n      const {\n        authKeyInfo: keyInfo\n      } = store.select(['selectAuthKeyInfo']);\n      console.log('a', storedIdent, keyInfo);\n\n      if (storedIdent === null) {\n        try {\n          const identity = PrivateKey.fromRandom();\n          const identityString = identity.toString();\n          localStorage.setItem('identity', identityString);\n          const client = await Client.withKeyInfo(keyInfo);\n          await client.getToken(identity);\n          return dispatch({\n            type: 'AUTH_SIGN_IN_SUCCESS',\n            payload: {\n              identity,\n              client\n            }\n          });\n        } catch (err) {\n          return dispatch({\n            type: 'AUTH_SIGN_IN_ERROR',\n            err\n          });\n        }\n      }\n\n      const identity = PrivateKey.fromString(storedIdent);\n      const client = await Client.withKeyInfo(keyInfo);\n      await client.getToken(identity);\n      return dispatch({\n        type: 'AUTH_SIGN_IN_SUCCESS',\n        payload: {\n          identity,\n          client\n        }\n      });\n    };\n  },\n  doAuthSignOut: () => {\n    return async ({\n      dispatch,\n      store\n    }) => {\n      await cache.clear('dbdb');\n      return store.doUpdateUrl('/');\n    };\n  },\n  selectAuthLoading: state => state.auth.loading,\n  selectAuthSignedIn: state => Boolean(state.auth.token),\n  selectAuthToken: state => state.auth.token,\n  selectAuthClient: state => state.auth.client,\n  selectAuthKeyInfo: state => state.auth.keyInfo,\n  persistActions: ['AUTH_SIGN_OUT']\n};","map":{"version":3,"sources":["/Users/nassarhayat/apps/textiletable/sushitable/src/bundles/auth.js"],"names":["set","updateAll","cache","PrivateKey","Client","name","getReducer","keyInfo","key","initialData","client","error","loading","state","type","payload","err","console","log","startsWith","endsWith","localStorage","removeItem","identity","message","doAuthSignIn","store","dispatch","storedIdent","getItem","authKeyInfo","select","fromRandom","identityString","toString","setItem","withKeyInfo","getToken","fromString","doAuthSignOut","clear","doUpdateUrl","selectAuthLoading","auth","selectAuthSignedIn","Boolean","token","selectAuthToken","selectAuthClient","selectAuthKeyInfo","persistActions"],"mappings":"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","sourcesContent":["import { set, updateAll } from 'shades'\nimport { cache } from '.././utils'\nimport { PrivateKey, Client } from '@textile/hub'\n\nexport default {\n  name: 'auth',\n  getReducer: () => {\n    const keyInfo = { key: 'bs3g66aciasarrm46kosxap74te' }\n    const initialData = {\n      client: null,\n      error: null,\n      loading: false,\n      keyInfo,\n    }\n    return (state = initialData, { type, payload, err }) => {\n      console.log(type)\n      if (type.startsWith('AUTH_') && type.endsWith('_START')) {\n        return set('loading')(true)(state)\n      }\n\n      if (type === 'AUTH_SIGN_OUT') {\n        localStorage.removeItem('identity')\n        return set('token')(null)(state)\n      }\n\n      if (type === 'AUTH_SIGN_IN_SUCCESS') {\n        return updateAll(\n          set('error')(null),\n          set('loading')(false),\n          set('identity')(payload.identity),\n          set('client')(payload.client)\n        )(state)\n      }\n\n      if (type === 'AUTH_SIGN_IN_ERROR') {\n        return updateAll(\n          set('error')(err.message),\n          set('loading')(false)\n        )(state)\n      }\n\n      return state\n    }\n  },\n  doAuthSignIn: () => {\n    return async ({ store, dispatch }) => {\n      dispatch({ type: 'AUTH_SIGN_IN_START' })\n      let storedIdent = localStorage.getItem('identity')\n      const { authKeyInfo: keyInfo } = store.select(['selectAuthKeyInfo'])\n      console.log('a', storedIdent, keyInfo)\n      if (storedIdent === null) {\n        try {\n          const identity = PrivateKey.fromRandom()\n          const identityString = identity.toString()\n          localStorage.setItem('identity', identityString)\n\n          const client = await Client.withKeyInfo(keyInfo)\n          await client.getToken(identity)\n          return dispatch({ type: 'AUTH_SIGN_IN_SUCCESS', payload: { identity, client } })\n        } catch (err) {\n          return dispatch({ type: 'AUTH_SIGN_IN_ERROR', err })\n        }\n      }\n      const identity = PrivateKey.fromString(storedIdent)\n      const client = await Client.withKeyInfo(keyInfo)\n      await client.getToken(identity)\n      return dispatch({ type: 'AUTH_SIGN_IN_SUCCESS', payload: { identity, client } })\n    }\n  },\n  doAuthSignOut: () => {\n    return async ({ dispatch, store }) => {\n      await cache.clear('dbdb')\n      return store.doUpdateUrl('/')\n    }\n  },\n  selectAuthLoading: (state) => state.auth.loading,\n  selectAuthSignedIn: (state) => Boolean(state.auth.token),\n  selectAuthToken: (state) => state.auth.token,\n  selectAuthClient: (state) => state.auth.client,\n  selectAuthKeyInfo: (state) => state.auth.keyInfo,\n  persistActions: [\n    'AUTH_SIGN_OUT',\n  ]\n}\n"]},"metadata":{},"sourceType":"module"}