{"ast":null,"code":"\"use strict\";\n/**\n * A web-gRPC wrapper client for communicating with the web-gRPC enabled Threads ove the Hub APIs.\n * @packageDocumentation\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar threads_client_1 = require(\"@textile/threads-client\");\n\nObject.defineProperty(exports, \"Action\", {\n  enumerable: true,\n  get: function () {\n    return threads_client_1.Action;\n  }\n});\nObject.defineProperty(exports, \"Query\", {\n  enumerable: true,\n  get: function () {\n    return threads_client_1.Query;\n  }\n});\nObject.defineProperty(exports, \"Where\", {\n  enumerable: true,\n  get: function () {\n    return threads_client_1.Where;\n  }\n});\nObject.defineProperty(exports, \"WriteTransaction\", {\n  enumerable: true,\n  get: function () {\n    return threads_client_1.WriteTransaction;\n  }\n});\nObject.defineProperty(exports, \"ReadTransaction\", {\n  enumerable: true,\n  get: function () {\n    return threads_client_1.ReadTransaction;\n  }\n});\n\nvar client_1 = require(\"./client\");\n\nObject.defineProperty(exports, \"Client\", {\n  enumerable: true,\n  get: function () {\n    return client_1.Client;\n  }\n});","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";AAAA;;;;;;;;;AAKA,IAAA,gBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AACE,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,QAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,gBAAA,CAAA,MAAA;AAAM;AAAN,CAAA;AAGA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,OAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,gBAAA,CAAA,KAAA;AAAK;AAAL,CAAA;AACA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,OAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,gBAAA,CAAA,KAAA;AAAK;AAAL,CAAA;AACA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,kBAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,gBAAA,CAAA,gBAAA;AAAgB;AAAhB,CAAA;AACA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,iBAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,gBAAA,CAAA,eAAA;AAAe;AAAf,CAAA;;AAMF,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAAS,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,QAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,QAAA,CAAA,MAAA;AAAM;AAAN,CAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * A web-gRPC wrapper client for communicating with the web-gRPC enabled Threads ove the Hub APIs.\n * @packageDocumentation\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar threads_client_1 = require(\"@textile/threads-client\");\nObject.defineProperty(exports, \"Action\", { enumerable: true, get: function () { return threads_client_1.Action; } });\nObject.defineProperty(exports, \"Query\", { enumerable: true, get: function () { return threads_client_1.Query; } });\nObject.defineProperty(exports, \"Where\", { enumerable: true, get: function () { return threads_client_1.Where; } });\nObject.defineProperty(exports, \"WriteTransaction\", { enumerable: true, get: function () { return threads_client_1.WriteTransaction; } });\nObject.defineProperty(exports, \"ReadTransaction\", { enumerable: true, get: function () { return threads_client_1.ReadTransaction; } });\nvar client_1 = require(\"./client\");\nObject.defineProperty(exports, \"Client\", { enumerable: true, get: function () { return client_1.Client; } });\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}