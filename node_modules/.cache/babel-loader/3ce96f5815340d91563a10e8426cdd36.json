{"ast":null,"code":"// package: users.pb\n// file: users.proto\nvar users_pb = require(\"./users_pb\");\n\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar API = function () {\n  function API() {}\n\n  API.serviceName = \"users.pb.API\";\n  return API;\n}();\n\nAPI.GetThread = {\n  methodName: \"GetThread\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.GetThreadRequest,\n  responseType: users_pb.GetThreadReply\n};\nAPI.ListThreads = {\n  methodName: \"ListThreads\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.ListThreadsRequest,\n  responseType: users_pb.ListThreadsReply\n};\nAPI.SetupMailbox = {\n  methodName: \"SetupMailbox\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.SetupMailboxRequest,\n  responseType: users_pb.SetupMailboxReply\n};\nAPI.SendMessage = {\n  methodName: \"SendMessage\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.SendMessageRequest,\n  responseType: users_pb.SendMessageReply\n};\nAPI.ListInboxMessages = {\n  methodName: \"ListInboxMessages\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.ListInboxMessagesRequest,\n  responseType: users_pb.ListMessagesReply\n};\nAPI.ListSentboxMessages = {\n  methodName: \"ListSentboxMessages\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.ListSentboxMessagesRequest,\n  responseType: users_pb.ListMessagesReply\n};\nAPI.ReadInboxMessage = {\n  methodName: \"ReadInboxMessage\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.ReadInboxMessageRequest,\n  responseType: users_pb.ReadInboxMessageReply\n};\nAPI.DeleteInboxMessage = {\n  methodName: \"DeleteInboxMessage\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.DeleteMessageRequest,\n  responseType: users_pb.DeleteMessageReply\n};\nAPI.DeleteSentboxMessage = {\n  methodName: \"DeleteSentboxMessage\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.DeleteMessageRequest,\n  responseType: users_pb.DeleteMessageReply\n};\nexports.API = API;\n\nfunction APIClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nAPIClient.prototype.getThread = function getThread(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.GetThread, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.listThreads = function listThreads(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.ListThreads, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.setupMailbox = function setupMailbox(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.SetupMailbox, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.sendMessage = function sendMessage(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.SendMessage, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.listInboxMessages = function listInboxMessages(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.ListInboxMessages, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.listSentboxMessages = function listSentboxMessages(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.ListSentboxMessages, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.readInboxMessage = function readInboxMessage(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.ReadInboxMessage, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.deleteInboxMessage = function deleteInboxMessage(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.DeleteInboxMessage, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.deleteSentboxMessage = function deleteSentboxMessage(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.DeleteSentboxMessage, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.APIClient = APIClient;","map":{"version":3,"sources":["/Users/nassarhayat/apps/textiletable/js-examples/bucket-photo-gallery/node_modules/@textile/users-grpc/users_pb_service.js"],"names":["users_pb","require","grpc","API","serviceName","GetThread","methodName","service","requestStream","responseStream","requestType","GetThreadRequest","responseType","GetThreadReply","ListThreads","ListThreadsRequest","ListThreadsReply","SetupMailbox","SetupMailboxRequest","SetupMailboxReply","SendMessage","SendMessageRequest","SendMessageReply","ListInboxMessages","ListInboxMessagesRequest","ListMessagesReply","ListSentboxMessages","ListSentboxMessagesRequest","ReadInboxMessage","ReadInboxMessageRequest","ReadInboxMessageReply","DeleteInboxMessage","DeleteMessageRequest","DeleteMessageReply","DeleteSentboxMessage","exports","APIClient","serviceHost","options","prototype","getThread","requestMessage","metadata","callback","arguments","length","client","unary","request","host","transport","debug","onEnd","response","status","Code","OK","err","Error","statusMessage","code","trailers","message","cancel","close","listThreads","setupMailbox","sendMessage","listInboxMessages","listSentboxMessages","readInboxMessage","deleteInboxMessage","deleteSentboxMessage"],"mappings":"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","sourcesContent":["// package: users.pb\n// file: users.proto\n\nvar users_pb = require(\"./users_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar API = (function () {\n  function API() {}\n  API.serviceName = \"users.pb.API\";\n  return API;\n}());\n\nAPI.GetThread = {\n  methodName: \"GetThread\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.GetThreadRequest,\n  responseType: users_pb.GetThreadReply\n};\n\nAPI.ListThreads = {\n  methodName: \"ListThreads\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.ListThreadsRequest,\n  responseType: users_pb.ListThreadsReply\n};\n\nAPI.SetupMailbox = {\n  methodName: \"SetupMailbox\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.SetupMailboxRequest,\n  responseType: users_pb.SetupMailboxReply\n};\n\nAPI.SendMessage = {\n  methodName: \"SendMessage\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.SendMessageRequest,\n  responseType: users_pb.SendMessageReply\n};\n\nAPI.ListInboxMessages = {\n  methodName: \"ListInboxMessages\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.ListInboxMessagesRequest,\n  responseType: users_pb.ListMessagesReply\n};\n\nAPI.ListSentboxMessages = {\n  methodName: \"ListSentboxMessages\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.ListSentboxMessagesRequest,\n  responseType: users_pb.ListMessagesReply\n};\n\nAPI.ReadInboxMessage = {\n  methodName: \"ReadInboxMessage\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.ReadInboxMessageRequest,\n  responseType: users_pb.ReadInboxMessageReply\n};\n\nAPI.DeleteInboxMessage = {\n  methodName: \"DeleteInboxMessage\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.DeleteMessageRequest,\n  responseType: users_pb.DeleteMessageReply\n};\n\nAPI.DeleteSentboxMessage = {\n  methodName: \"DeleteSentboxMessage\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.DeleteMessageRequest,\n  responseType: users_pb.DeleteMessageReply\n};\n\nexports.API = API;\n\nfunction APIClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nAPIClient.prototype.getThread = function getThread(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.GetThread, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.listThreads = function listThreads(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.ListThreads, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.setupMailbox = function setupMailbox(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.SetupMailbox, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.sendMessage = function sendMessage(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.SendMessage, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.listInboxMessages = function listInboxMessages(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.ListInboxMessages, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.listSentboxMessages = function listSentboxMessages(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.ListSentboxMessages, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.readInboxMessage = function readInboxMessage(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.ReadInboxMessage, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.deleteInboxMessage = function deleteInboxMessage(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.DeleteInboxMessage, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.deleteSentboxMessage = function deleteSentboxMessage(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.DeleteSentboxMessage, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.APIClient = APIClient;\n\n"]},"metadata":{},"sourceType":"script"}