{"ast":null,"code":"// source: net/rpc/rpc.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.net.rpc.ConnectPeerRequest', null, global);\ngoog.exportSymbol('proto.net.rpc.ConnectPeerResponse', null, global);\ngoog.exportSymbol('proto.net.rpc.Connectedness', null, global);\ngoog.exportSymbol('proto.net.rpc.ConnectednessRequest', null, global);\ngoog.exportSymbol('proto.net.rpc.ConnectednessResponse', null, global);\ngoog.exportSymbol('proto.net.rpc.DisconnectPeerRequest', null, global);\ngoog.exportSymbol('proto.net.rpc.DisconnectPeerResponse', null, global);\ngoog.exportSymbol('proto.net.rpc.FindPeerRequest', null, global);\ngoog.exportSymbol('proto.net.rpc.FindPeerResponse', null, global);\ngoog.exportSymbol('proto.net.rpc.ListenAddrRequest', null, global);\ngoog.exportSymbol('proto.net.rpc.ListenAddrResponse', null, global);\ngoog.exportSymbol('proto.net.rpc.Location', null, global);\ngoog.exportSymbol('proto.net.rpc.PeerAddrInfo', null, global);\ngoog.exportSymbol('proto.net.rpc.PeerInfo', null, global);\ngoog.exportSymbol('proto.net.rpc.PeersRequest', null, global);\ngoog.exportSymbol('proto.net.rpc.PeersResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.net.rpc.PeerAddrInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.net.rpc.PeerAddrInfo.repeatedFields_, null);\n};\n\ngoog.inherits(proto.net.rpc.PeerAddrInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.PeerAddrInfo.displayName = 'proto.net.rpc.PeerAddrInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.net.rpc.Location = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.net.rpc.Location, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.Location.displayName = 'proto.net.rpc.Location';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.net.rpc.PeerInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.net.rpc.PeerInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.PeerInfo.displayName = 'proto.net.rpc.PeerInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.net.rpc.ListenAddrRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.net.rpc.ListenAddrRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.ListenAddrRequest.displayName = 'proto.net.rpc.ListenAddrRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.net.rpc.ListenAddrResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.net.rpc.ListenAddrResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.ListenAddrResponse.displayName = 'proto.net.rpc.ListenAddrResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.net.rpc.PeersRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.net.rpc.PeersRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.PeersRequest.displayName = 'proto.net.rpc.PeersRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.net.rpc.PeersResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.net.rpc.PeersResponse.repeatedFields_, null);\n};\n\ngoog.inherits(proto.net.rpc.PeersResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.PeersResponse.displayName = 'proto.net.rpc.PeersResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.net.rpc.FindPeerRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.net.rpc.FindPeerRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.FindPeerRequest.displayName = 'proto.net.rpc.FindPeerRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.net.rpc.FindPeerResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.net.rpc.FindPeerResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.FindPeerResponse.displayName = 'proto.net.rpc.FindPeerResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.net.rpc.ConnectPeerRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.net.rpc.ConnectPeerRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.ConnectPeerRequest.displayName = 'proto.net.rpc.ConnectPeerRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.net.rpc.ConnectPeerResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.net.rpc.ConnectPeerResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.ConnectPeerResponse.displayName = 'proto.net.rpc.ConnectPeerResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.net.rpc.DisconnectPeerRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.net.rpc.DisconnectPeerRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.DisconnectPeerRequest.displayName = 'proto.net.rpc.DisconnectPeerRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.net.rpc.DisconnectPeerResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.net.rpc.DisconnectPeerResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.DisconnectPeerResponse.displayName = 'proto.net.rpc.DisconnectPeerResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.net.rpc.ConnectednessRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.net.rpc.ConnectednessRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.ConnectednessRequest.displayName = 'proto.net.rpc.ConnectednessRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.net.rpc.ConnectednessResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.net.rpc.ConnectednessResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.ConnectednessResponse.displayName = 'proto.net.rpc.ConnectednessResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.net.rpc.PeerAddrInfo.repeatedFields_ = [2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.net.rpc.PeerAddrInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.net.rpc.PeerAddrInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.net.rpc.PeerAddrInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.net.rpc.PeerAddrInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      addrsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.PeerAddrInfo}\n */\n\n\nproto.net.rpc.PeerAddrInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.PeerAddrInfo();\n  return proto.net.rpc.PeerAddrInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.PeerAddrInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.PeerAddrInfo}\n */\n\n\nproto.net.rpc.PeerAddrInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addAddrs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.net.rpc.PeerAddrInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.PeerAddrInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.PeerAddrInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.net.rpc.PeerAddrInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getAddrsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(2, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.net.rpc.PeerAddrInfo.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.net.rpc.PeerAddrInfo} returns this\n */\n\n\nproto.net.rpc.PeerAddrInfo.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * repeated string addrs = 2;\n * @return {!Array<string>}\n */\n\n\nproto.net.rpc.PeerAddrInfo.prototype.getAddrsList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 2)\n  );\n};\n/**\n * @param {!Array<string>} value\n * @return {!proto.net.rpc.PeerAddrInfo} returns this\n */\n\n\nproto.net.rpc.PeerAddrInfo.prototype.setAddrsList = function (value) {\n  return jspb.Message.setField(this, 2, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.net.rpc.PeerAddrInfo} returns this\n */\n\n\nproto.net.rpc.PeerAddrInfo.prototype.addAddrs = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.net.rpc.PeerAddrInfo} returns this\n */\n\n\nproto.net.rpc.PeerAddrInfo.prototype.clearAddrsList = function () {\n  return this.setAddrsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.net.rpc.Location.prototype.toObject = function (opt_includeInstance) {\n    return proto.net.rpc.Location.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.net.rpc.Location} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.net.rpc.Location.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      country: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),\n      longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.Location}\n */\n\n\nproto.net.rpc.Location.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.Location();\n  return proto.net.rpc.Location.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.Location} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.Location}\n */\n\n\nproto.net.rpc.Location.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCountry(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readDouble();\n        msg.setLatitude(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readDouble();\n        msg.setLongitude(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.net.rpc.Location.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.Location.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.Location} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.net.rpc.Location.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCountry();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getLatitude();\n\n  if (f !== 0.0) {\n    writer.writeDouble(2, f);\n  }\n\n  f = message.getLongitude();\n\n  if (f !== 0.0) {\n    writer.writeDouble(3, f);\n  }\n};\n/**\n * optional string country = 1;\n * @return {string}\n */\n\n\nproto.net.rpc.Location.prototype.getCountry = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.net.rpc.Location} returns this\n */\n\n\nproto.net.rpc.Location.prototype.setCountry = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional double latitude = 2;\n * @return {number}\n */\n\n\nproto.net.rpc.Location.prototype.getLatitude = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.net.rpc.Location} returns this\n */\n\n\nproto.net.rpc.Location.prototype.setLatitude = function (value) {\n  return jspb.Message.setProto3FloatField(this, 2, value);\n};\n/**\n * optional double longitude = 3;\n * @return {number}\n */\n\n\nproto.net.rpc.Location.prototype.getLongitude = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.net.rpc.Location} returns this\n */\n\n\nproto.net.rpc.Location.prototype.setLongitude = function (value) {\n  return jspb.Message.setProto3FloatField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.net.rpc.PeerInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.net.rpc.PeerInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.net.rpc.PeerInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.net.rpc.PeerInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addrInfo: (f = msg.getAddrInfo()) && proto.net.rpc.PeerAddrInfo.toObject(includeInstance, f),\n      location: (f = msg.getLocation()) && proto.net.rpc.Location.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.PeerInfo}\n */\n\n\nproto.net.rpc.PeerInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.PeerInfo();\n  return proto.net.rpc.PeerInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.PeerInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.PeerInfo}\n */\n\n\nproto.net.rpc.PeerInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.net.rpc.PeerAddrInfo();\n        reader.readMessage(value, proto.net.rpc.PeerAddrInfo.deserializeBinaryFromReader);\n        msg.setAddrInfo(value);\n        break;\n\n      case 2:\n        var value = new proto.net.rpc.Location();\n        reader.readMessage(value, proto.net.rpc.Location.deserializeBinaryFromReader);\n        msg.setLocation(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.net.rpc.PeerInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.PeerInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.PeerInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.net.rpc.PeerInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddrInfo();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.net.rpc.PeerAddrInfo.serializeBinaryToWriter);\n  }\n\n  f = message.getLocation();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.net.rpc.Location.serializeBinaryToWriter);\n  }\n};\n/**\n * optional PeerAddrInfo addr_info = 1;\n * @return {?proto.net.rpc.PeerAddrInfo}\n */\n\n\nproto.net.rpc.PeerInfo.prototype.getAddrInfo = function () {\n  return (\n    /** @type{?proto.net.rpc.PeerAddrInfo} */\n    jspb.Message.getWrapperField(this, proto.net.rpc.PeerAddrInfo, 1)\n  );\n};\n/**\n * @param {?proto.net.rpc.PeerAddrInfo|undefined} value\n * @return {!proto.net.rpc.PeerInfo} returns this\n*/\n\n\nproto.net.rpc.PeerInfo.prototype.setAddrInfo = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.net.rpc.PeerInfo} returns this\n */\n\n\nproto.net.rpc.PeerInfo.prototype.clearAddrInfo = function () {\n  return this.setAddrInfo(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.net.rpc.PeerInfo.prototype.hasAddrInfo = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional Location location = 2;\n * @return {?proto.net.rpc.Location}\n */\n\n\nproto.net.rpc.PeerInfo.prototype.getLocation = function () {\n  return (\n    /** @type{?proto.net.rpc.Location} */\n    jspb.Message.getWrapperField(this, proto.net.rpc.Location, 2)\n  );\n};\n/**\n * @param {?proto.net.rpc.Location|undefined} value\n * @return {!proto.net.rpc.PeerInfo} returns this\n*/\n\n\nproto.net.rpc.PeerInfo.prototype.setLocation = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.net.rpc.PeerInfo} returns this\n */\n\n\nproto.net.rpc.PeerInfo.prototype.clearLocation = function () {\n  return this.setLocation(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.net.rpc.PeerInfo.prototype.hasLocation = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.net.rpc.ListenAddrRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.net.rpc.ListenAddrRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.net.rpc.ListenAddrRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.net.rpc.ListenAddrRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.ListenAddrRequest}\n */\n\n\nproto.net.rpc.ListenAddrRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.ListenAddrRequest();\n  return proto.net.rpc.ListenAddrRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.ListenAddrRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.ListenAddrRequest}\n */\n\n\nproto.net.rpc.ListenAddrRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.net.rpc.ListenAddrRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.ListenAddrRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.ListenAddrRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.net.rpc.ListenAddrRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.net.rpc.ListenAddrResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.net.rpc.ListenAddrResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.net.rpc.ListenAddrResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.net.rpc.ListenAddrResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addrInfo: (f = msg.getAddrInfo()) && proto.net.rpc.PeerAddrInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.ListenAddrResponse}\n */\n\n\nproto.net.rpc.ListenAddrResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.ListenAddrResponse();\n  return proto.net.rpc.ListenAddrResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.ListenAddrResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.ListenAddrResponse}\n */\n\n\nproto.net.rpc.ListenAddrResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.net.rpc.PeerAddrInfo();\n        reader.readMessage(value, proto.net.rpc.PeerAddrInfo.deserializeBinaryFromReader);\n        msg.setAddrInfo(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.net.rpc.ListenAddrResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.ListenAddrResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.ListenAddrResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.net.rpc.ListenAddrResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddrInfo();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.net.rpc.PeerAddrInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * optional PeerAddrInfo addr_info = 1;\n * @return {?proto.net.rpc.PeerAddrInfo}\n */\n\n\nproto.net.rpc.ListenAddrResponse.prototype.getAddrInfo = function () {\n  return (\n    /** @type{?proto.net.rpc.PeerAddrInfo} */\n    jspb.Message.getWrapperField(this, proto.net.rpc.PeerAddrInfo, 1)\n  );\n};\n/**\n * @param {?proto.net.rpc.PeerAddrInfo|undefined} value\n * @return {!proto.net.rpc.ListenAddrResponse} returns this\n*/\n\n\nproto.net.rpc.ListenAddrResponse.prototype.setAddrInfo = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.net.rpc.ListenAddrResponse} returns this\n */\n\n\nproto.net.rpc.ListenAddrResponse.prototype.clearAddrInfo = function () {\n  return this.setAddrInfo(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.net.rpc.ListenAddrResponse.prototype.hasAddrInfo = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.net.rpc.PeersRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.net.rpc.PeersRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.net.rpc.PeersRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.net.rpc.PeersRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.PeersRequest}\n */\n\n\nproto.net.rpc.PeersRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.PeersRequest();\n  return proto.net.rpc.PeersRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.PeersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.PeersRequest}\n */\n\n\nproto.net.rpc.PeersRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.net.rpc.PeersRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.PeersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.PeersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.net.rpc.PeersRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.net.rpc.PeersResponse.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.net.rpc.PeersResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.net.rpc.PeersResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.net.rpc.PeersResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.net.rpc.PeersResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      peersList: jspb.Message.toObjectList(msg.getPeersList(), proto.net.rpc.PeerInfo.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.PeersResponse}\n */\n\n\nproto.net.rpc.PeersResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.PeersResponse();\n  return proto.net.rpc.PeersResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.PeersResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.PeersResponse}\n */\n\n\nproto.net.rpc.PeersResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.net.rpc.PeerInfo();\n        reader.readMessage(value, proto.net.rpc.PeerInfo.deserializeBinaryFromReader);\n        msg.addPeers(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.net.rpc.PeersResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.PeersResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.PeersResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.net.rpc.PeersResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPeersList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.net.rpc.PeerInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated PeerInfo peers = 1;\n * @return {!Array<!proto.net.rpc.PeerInfo>}\n */\n\n\nproto.net.rpc.PeersResponse.prototype.getPeersList = function () {\n  return (\n    /** @type{!Array<!proto.net.rpc.PeerInfo>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.net.rpc.PeerInfo, 1)\n  );\n};\n/**\n * @param {!Array<!proto.net.rpc.PeerInfo>} value\n * @return {!proto.net.rpc.PeersResponse} returns this\n*/\n\n\nproto.net.rpc.PeersResponse.prototype.setPeersList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.net.rpc.PeerInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.net.rpc.PeerInfo}\n */\n\n\nproto.net.rpc.PeersResponse.prototype.addPeers = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.net.rpc.PeerInfo, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.net.rpc.PeersResponse} returns this\n */\n\n\nproto.net.rpc.PeersResponse.prototype.clearPeersList = function () {\n  return this.setPeersList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.net.rpc.FindPeerRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.net.rpc.FindPeerRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.net.rpc.FindPeerRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.net.rpc.FindPeerRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      peerId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.FindPeerRequest}\n */\n\n\nproto.net.rpc.FindPeerRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.FindPeerRequest();\n  return proto.net.rpc.FindPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.FindPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.FindPeerRequest}\n */\n\n\nproto.net.rpc.FindPeerRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPeerId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.net.rpc.FindPeerRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.FindPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.FindPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.net.rpc.FindPeerRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string peer_id = 1;\n * @return {string}\n */\n\n\nproto.net.rpc.FindPeerRequest.prototype.getPeerId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.net.rpc.FindPeerRequest} returns this\n */\n\n\nproto.net.rpc.FindPeerRequest.prototype.setPeerId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.net.rpc.FindPeerResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.net.rpc.FindPeerResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.net.rpc.FindPeerResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.net.rpc.FindPeerResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      peerInfo: (f = msg.getPeerInfo()) && proto.net.rpc.PeerInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.FindPeerResponse}\n */\n\n\nproto.net.rpc.FindPeerResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.FindPeerResponse();\n  return proto.net.rpc.FindPeerResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.FindPeerResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.FindPeerResponse}\n */\n\n\nproto.net.rpc.FindPeerResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.net.rpc.PeerInfo();\n        reader.readMessage(value, proto.net.rpc.PeerInfo.deserializeBinaryFromReader);\n        msg.setPeerInfo(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.net.rpc.FindPeerResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.FindPeerResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.FindPeerResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.net.rpc.FindPeerResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPeerInfo();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.net.rpc.PeerInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * optional PeerInfo peer_info = 1;\n * @return {?proto.net.rpc.PeerInfo}\n */\n\n\nproto.net.rpc.FindPeerResponse.prototype.getPeerInfo = function () {\n  return (\n    /** @type{?proto.net.rpc.PeerInfo} */\n    jspb.Message.getWrapperField(this, proto.net.rpc.PeerInfo, 1)\n  );\n};\n/**\n * @param {?proto.net.rpc.PeerInfo|undefined} value\n * @return {!proto.net.rpc.FindPeerResponse} returns this\n*/\n\n\nproto.net.rpc.FindPeerResponse.prototype.setPeerInfo = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.net.rpc.FindPeerResponse} returns this\n */\n\n\nproto.net.rpc.FindPeerResponse.prototype.clearPeerInfo = function () {\n  return this.setPeerInfo(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.net.rpc.FindPeerResponse.prototype.hasPeerInfo = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.net.rpc.ConnectPeerRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.net.rpc.ConnectPeerRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.net.rpc.ConnectPeerRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.net.rpc.ConnectPeerRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      peerInfo: (f = msg.getPeerInfo()) && proto.net.rpc.PeerAddrInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.ConnectPeerRequest}\n */\n\n\nproto.net.rpc.ConnectPeerRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.ConnectPeerRequest();\n  return proto.net.rpc.ConnectPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.ConnectPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.ConnectPeerRequest}\n */\n\n\nproto.net.rpc.ConnectPeerRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.net.rpc.PeerAddrInfo();\n        reader.readMessage(value, proto.net.rpc.PeerAddrInfo.deserializeBinaryFromReader);\n        msg.setPeerInfo(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.net.rpc.ConnectPeerRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.ConnectPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.ConnectPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.net.rpc.ConnectPeerRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPeerInfo();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.net.rpc.PeerAddrInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * optional PeerAddrInfo peer_info = 1;\n * @return {?proto.net.rpc.PeerAddrInfo}\n */\n\n\nproto.net.rpc.ConnectPeerRequest.prototype.getPeerInfo = function () {\n  return (\n    /** @type{?proto.net.rpc.PeerAddrInfo} */\n    jspb.Message.getWrapperField(this, proto.net.rpc.PeerAddrInfo, 1)\n  );\n};\n/**\n * @param {?proto.net.rpc.PeerAddrInfo|undefined} value\n * @return {!proto.net.rpc.ConnectPeerRequest} returns this\n*/\n\n\nproto.net.rpc.ConnectPeerRequest.prototype.setPeerInfo = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.net.rpc.ConnectPeerRequest} returns this\n */\n\n\nproto.net.rpc.ConnectPeerRequest.prototype.clearPeerInfo = function () {\n  return this.setPeerInfo(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.net.rpc.ConnectPeerRequest.prototype.hasPeerInfo = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.net.rpc.ConnectPeerResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.net.rpc.ConnectPeerResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.net.rpc.ConnectPeerResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.net.rpc.ConnectPeerResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.ConnectPeerResponse}\n */\n\n\nproto.net.rpc.ConnectPeerResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.ConnectPeerResponse();\n  return proto.net.rpc.ConnectPeerResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.ConnectPeerResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.ConnectPeerResponse}\n */\n\n\nproto.net.rpc.ConnectPeerResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.net.rpc.ConnectPeerResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.ConnectPeerResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.ConnectPeerResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.net.rpc.ConnectPeerResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.net.rpc.DisconnectPeerRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.net.rpc.DisconnectPeerRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.net.rpc.DisconnectPeerRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.net.rpc.DisconnectPeerRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      peerId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.DisconnectPeerRequest}\n */\n\n\nproto.net.rpc.DisconnectPeerRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.DisconnectPeerRequest();\n  return proto.net.rpc.DisconnectPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.DisconnectPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.DisconnectPeerRequest}\n */\n\n\nproto.net.rpc.DisconnectPeerRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPeerId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.net.rpc.DisconnectPeerRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.DisconnectPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.DisconnectPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.net.rpc.DisconnectPeerRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string peer_id = 1;\n * @return {string}\n */\n\n\nproto.net.rpc.DisconnectPeerRequest.prototype.getPeerId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.net.rpc.DisconnectPeerRequest} returns this\n */\n\n\nproto.net.rpc.DisconnectPeerRequest.prototype.setPeerId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.net.rpc.DisconnectPeerResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.net.rpc.DisconnectPeerResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.net.rpc.DisconnectPeerResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.net.rpc.DisconnectPeerResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.DisconnectPeerResponse}\n */\n\n\nproto.net.rpc.DisconnectPeerResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.DisconnectPeerResponse();\n  return proto.net.rpc.DisconnectPeerResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.DisconnectPeerResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.DisconnectPeerResponse}\n */\n\n\nproto.net.rpc.DisconnectPeerResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.net.rpc.DisconnectPeerResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.DisconnectPeerResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.DisconnectPeerResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.net.rpc.DisconnectPeerResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.net.rpc.ConnectednessRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.net.rpc.ConnectednessRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.net.rpc.ConnectednessRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.net.rpc.ConnectednessRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      peerId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.ConnectednessRequest}\n */\n\n\nproto.net.rpc.ConnectednessRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.ConnectednessRequest();\n  return proto.net.rpc.ConnectednessRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.ConnectednessRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.ConnectednessRequest}\n */\n\n\nproto.net.rpc.ConnectednessRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPeerId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.net.rpc.ConnectednessRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.ConnectednessRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.ConnectednessRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.net.rpc.ConnectednessRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string peer_id = 1;\n * @return {string}\n */\n\n\nproto.net.rpc.ConnectednessRequest.prototype.getPeerId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.net.rpc.ConnectednessRequest} returns this\n */\n\n\nproto.net.rpc.ConnectednessRequest.prototype.setPeerId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.net.rpc.ConnectednessResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.net.rpc.ConnectednessResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.net.rpc.ConnectednessResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.net.rpc.ConnectednessResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      connectedness: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.ConnectednessResponse}\n */\n\n\nproto.net.rpc.ConnectednessResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.ConnectednessResponse();\n  return proto.net.rpc.ConnectednessResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.ConnectednessResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.ConnectednessResponse}\n */\n\n\nproto.net.rpc.ConnectednessResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!proto.net.rpc.Connectedness} */\n        reader.readEnum();\n        msg.setConnectedness(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.net.rpc.ConnectednessResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.ConnectednessResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.ConnectednessResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.net.rpc.ConnectednessResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getConnectedness();\n\n  if (f !== 0.0) {\n    writer.writeEnum(1, f);\n  }\n};\n/**\n * optional Connectedness connectedness = 1;\n * @return {!proto.net.rpc.Connectedness}\n */\n\n\nproto.net.rpc.ConnectednessResponse.prototype.getConnectedness = function () {\n  return (\n    /** @type {!proto.net.rpc.Connectedness} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {!proto.net.rpc.Connectedness} value\n * @return {!proto.net.rpc.ConnectednessResponse} returns this\n */\n\n\nproto.net.rpc.ConnectednessResponse.prototype.setConnectedness = function (value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n/**\n * @enum {number}\n */\n\n\nproto.net.rpc.Connectedness = {\n  CONNECTEDNESS_UNSPECIFIED: 0,\n  CONNECTEDNESS_NOT_CONNECTED: 1,\n  CONNECTEDNESS_CONNECTED: 2,\n  CONNECTEDNESS_CAN_CONNECT: 3,\n  CONNECTEDNESS_CANNOT_CONNECT: 4,\n  CONNECTEDNESS_ERROR: 5\n};\ngoog.object.extend(exports, proto.net.rpc);","map":{"version":3,"sources":["/Users/nassarhayat/apps/textiletable/dobby/node_modules/@textile/grpc-powergate-client/dist/net/rpc/rpc_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","net","rpc","PeerAddrInfo","opt_data","Message","initialize","repeatedFields_","inherits","DEBUG","COMPILED","displayName","Location","PeerInfo","ListenAddrRequest","ListenAddrResponse","PeersRequest","PeersResponse","FindPeerRequest","FindPeerResponse","ConnectPeerRequest","ConnectPeerResponse","DisconnectPeerRequest","DisconnectPeerResponse","ConnectednessRequest","ConnectednessResponse","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","id","getFieldWithDefault","addrsList","getRepeatedField","undefined","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setId","addAddrs","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","getId","length","writeString","getAddrsList","writeRepeatedString","setProto3StringField","setAddrsList","setField","opt_index","addToRepeatedField","clearAddrsList","country","latitude","getFloatingPointFieldWithDefault","longitude","setCountry","readDouble","setLatitude","setLongitude","getCountry","getLatitude","writeDouble","getLongitude","setProto3FloatField","addrInfo","getAddrInfo","location","getLocation","readMessage","setAddrInfo","setLocation","writeMessage","getWrapperField","setWrapperField","clearAddrInfo","hasAddrInfo","getField","clearLocation","hasLocation","peersList","toObjectList","getPeersList","addPeers","writeRepeatedMessage","getRepeatedWrapperField","setPeersList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearPeersList","peerId","setPeerId","getPeerId","peerInfo","getPeerInfo","setPeerInfo","clearPeerInfo","hasPeerInfo","connectedness","readEnum","setConnectedness","getConnectedness","writeEnum","setProto3EnumField","Connectedness","CONNECTEDNESS_UNSPECIFIED","CONNECTEDNESS_NOT_CONNECTED","CONNECTEDNESS_CONNECTED","CONNECTEDNESS_CAN_CONNECT","CONNECTEDNESS_CANNOT_CONNECT","CONNECTEDNESS_ERROR","object","extend","exports"],"mappings":"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","sourcesContent":["// source: net/rpc/rpc.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.net.rpc.ConnectPeerRequest', null, global);\ngoog.exportSymbol('proto.net.rpc.ConnectPeerResponse', null, global);\ngoog.exportSymbol('proto.net.rpc.Connectedness', null, global);\ngoog.exportSymbol('proto.net.rpc.ConnectednessRequest', null, global);\ngoog.exportSymbol('proto.net.rpc.ConnectednessResponse', null, global);\ngoog.exportSymbol('proto.net.rpc.DisconnectPeerRequest', null, global);\ngoog.exportSymbol('proto.net.rpc.DisconnectPeerResponse', null, global);\ngoog.exportSymbol('proto.net.rpc.FindPeerRequest', null, global);\ngoog.exportSymbol('proto.net.rpc.FindPeerResponse', null, global);\ngoog.exportSymbol('proto.net.rpc.ListenAddrRequest', null, global);\ngoog.exportSymbol('proto.net.rpc.ListenAddrResponse', null, global);\ngoog.exportSymbol('proto.net.rpc.Location', null, global);\ngoog.exportSymbol('proto.net.rpc.PeerAddrInfo', null, global);\ngoog.exportSymbol('proto.net.rpc.PeerInfo', null, global);\ngoog.exportSymbol('proto.net.rpc.PeersRequest', null, global);\ngoog.exportSymbol('proto.net.rpc.PeersResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.net.rpc.PeerAddrInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.net.rpc.PeerAddrInfo.repeatedFields_, null);\n};\ngoog.inherits(proto.net.rpc.PeerAddrInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.PeerAddrInfo.displayName = 'proto.net.rpc.PeerAddrInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.net.rpc.Location = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.net.rpc.Location, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.Location.displayName = 'proto.net.rpc.Location';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.net.rpc.PeerInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.net.rpc.PeerInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.PeerInfo.displayName = 'proto.net.rpc.PeerInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.net.rpc.ListenAddrRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.net.rpc.ListenAddrRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.ListenAddrRequest.displayName = 'proto.net.rpc.ListenAddrRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.net.rpc.ListenAddrResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.net.rpc.ListenAddrResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.ListenAddrResponse.displayName = 'proto.net.rpc.ListenAddrResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.net.rpc.PeersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.net.rpc.PeersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.PeersRequest.displayName = 'proto.net.rpc.PeersRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.net.rpc.PeersResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.net.rpc.PeersResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.net.rpc.PeersResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.PeersResponse.displayName = 'proto.net.rpc.PeersResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.net.rpc.FindPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.net.rpc.FindPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.FindPeerRequest.displayName = 'proto.net.rpc.FindPeerRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.net.rpc.FindPeerResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.net.rpc.FindPeerResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.FindPeerResponse.displayName = 'proto.net.rpc.FindPeerResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.net.rpc.ConnectPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.net.rpc.ConnectPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.ConnectPeerRequest.displayName = 'proto.net.rpc.ConnectPeerRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.net.rpc.ConnectPeerResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.net.rpc.ConnectPeerResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.ConnectPeerResponse.displayName = 'proto.net.rpc.ConnectPeerResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.net.rpc.DisconnectPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.net.rpc.DisconnectPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.DisconnectPeerRequest.displayName = 'proto.net.rpc.DisconnectPeerRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.net.rpc.DisconnectPeerResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.net.rpc.DisconnectPeerResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.DisconnectPeerResponse.displayName = 'proto.net.rpc.DisconnectPeerResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.net.rpc.ConnectednessRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.net.rpc.ConnectednessRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.ConnectednessRequest.displayName = 'proto.net.rpc.ConnectednessRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.net.rpc.ConnectednessResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.net.rpc.ConnectednessResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.net.rpc.ConnectednessResponse.displayName = 'proto.net.rpc.ConnectednessResponse';\n}\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.net.rpc.PeerAddrInfo.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.net.rpc.PeerAddrInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.net.rpc.PeerAddrInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.net.rpc.PeerAddrInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.PeerAddrInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    addrsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.PeerAddrInfo}\n */\nproto.net.rpc.PeerAddrInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.PeerAddrInfo;\n  return proto.net.rpc.PeerAddrInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.PeerAddrInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.PeerAddrInfo}\n */\nproto.net.rpc.PeerAddrInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addAddrs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.net.rpc.PeerAddrInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.PeerAddrInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.PeerAddrInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.PeerAddrInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAddrsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.net.rpc.PeerAddrInfo.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.net.rpc.PeerAddrInfo} returns this\n */\nproto.net.rpc.PeerAddrInfo.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * repeated string addrs = 2;\n * @return {!Array<string>}\n */\nproto.net.rpc.PeerAddrInfo.prototype.getAddrsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.net.rpc.PeerAddrInfo} returns this\n */\nproto.net.rpc.PeerAddrInfo.prototype.setAddrsList = function(value) {\n  return jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.net.rpc.PeerAddrInfo} returns this\n */\nproto.net.rpc.PeerAddrInfo.prototype.addAddrs = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.net.rpc.PeerAddrInfo} returns this\n */\nproto.net.rpc.PeerAddrInfo.prototype.clearAddrsList = function() {\n  return this.setAddrsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.net.rpc.Location.prototype.toObject = function(opt_includeInstance) {\n  return proto.net.rpc.Location.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.net.rpc.Location} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.Location.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    country: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),\n    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.Location}\n */\nproto.net.rpc.Location.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.Location;\n  return proto.net.rpc.Location.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.Location} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.Location}\n */\nproto.net.rpc.Location.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCountry(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setLatitude(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setLongitude(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.net.rpc.Location.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.Location.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.Location} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.Location.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCountry();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getLatitude();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      2,\n      f\n    );\n  }\n  f = message.getLongitude();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string country = 1;\n * @return {string}\n */\nproto.net.rpc.Location.prototype.getCountry = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.net.rpc.Location} returns this\n */\nproto.net.rpc.Location.prototype.setCountry = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional double latitude = 2;\n * @return {number}\n */\nproto.net.rpc.Location.prototype.getLatitude = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.net.rpc.Location} returns this\n */\nproto.net.rpc.Location.prototype.setLatitude = function(value) {\n  return jspb.Message.setProto3FloatField(this, 2, value);\n};\n\n\n/**\n * optional double longitude = 3;\n * @return {number}\n */\nproto.net.rpc.Location.prototype.getLongitude = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.net.rpc.Location} returns this\n */\nproto.net.rpc.Location.prototype.setLongitude = function(value) {\n  return jspb.Message.setProto3FloatField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.net.rpc.PeerInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.net.rpc.PeerInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.net.rpc.PeerInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.PeerInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addrInfo: (f = msg.getAddrInfo()) && proto.net.rpc.PeerAddrInfo.toObject(includeInstance, f),\n    location: (f = msg.getLocation()) && proto.net.rpc.Location.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.PeerInfo}\n */\nproto.net.rpc.PeerInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.PeerInfo;\n  return proto.net.rpc.PeerInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.PeerInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.PeerInfo}\n */\nproto.net.rpc.PeerInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.net.rpc.PeerAddrInfo;\n      reader.readMessage(value,proto.net.rpc.PeerAddrInfo.deserializeBinaryFromReader);\n      msg.setAddrInfo(value);\n      break;\n    case 2:\n      var value = new proto.net.rpc.Location;\n      reader.readMessage(value,proto.net.rpc.Location.deserializeBinaryFromReader);\n      msg.setLocation(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.net.rpc.PeerInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.PeerInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.PeerInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.PeerInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddrInfo();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.net.rpc.PeerAddrInfo.serializeBinaryToWriter\n    );\n  }\n  f = message.getLocation();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.net.rpc.Location.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PeerAddrInfo addr_info = 1;\n * @return {?proto.net.rpc.PeerAddrInfo}\n */\nproto.net.rpc.PeerInfo.prototype.getAddrInfo = function() {\n  return /** @type{?proto.net.rpc.PeerAddrInfo} */ (\n    jspb.Message.getWrapperField(this, proto.net.rpc.PeerAddrInfo, 1));\n};\n\n\n/**\n * @param {?proto.net.rpc.PeerAddrInfo|undefined} value\n * @return {!proto.net.rpc.PeerInfo} returns this\n*/\nproto.net.rpc.PeerInfo.prototype.setAddrInfo = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.net.rpc.PeerInfo} returns this\n */\nproto.net.rpc.PeerInfo.prototype.clearAddrInfo = function() {\n  return this.setAddrInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.net.rpc.PeerInfo.prototype.hasAddrInfo = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional Location location = 2;\n * @return {?proto.net.rpc.Location}\n */\nproto.net.rpc.PeerInfo.prototype.getLocation = function() {\n  return /** @type{?proto.net.rpc.Location} */ (\n    jspb.Message.getWrapperField(this, proto.net.rpc.Location, 2));\n};\n\n\n/**\n * @param {?proto.net.rpc.Location|undefined} value\n * @return {!proto.net.rpc.PeerInfo} returns this\n*/\nproto.net.rpc.PeerInfo.prototype.setLocation = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.net.rpc.PeerInfo} returns this\n */\nproto.net.rpc.PeerInfo.prototype.clearLocation = function() {\n  return this.setLocation(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.net.rpc.PeerInfo.prototype.hasLocation = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.net.rpc.ListenAddrRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.net.rpc.ListenAddrRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.net.rpc.ListenAddrRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.ListenAddrRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.ListenAddrRequest}\n */\nproto.net.rpc.ListenAddrRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.ListenAddrRequest;\n  return proto.net.rpc.ListenAddrRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.ListenAddrRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.ListenAddrRequest}\n */\nproto.net.rpc.ListenAddrRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.net.rpc.ListenAddrRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.ListenAddrRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.ListenAddrRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.ListenAddrRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.net.rpc.ListenAddrResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.net.rpc.ListenAddrResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.net.rpc.ListenAddrResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.ListenAddrResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addrInfo: (f = msg.getAddrInfo()) && proto.net.rpc.PeerAddrInfo.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.ListenAddrResponse}\n */\nproto.net.rpc.ListenAddrResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.ListenAddrResponse;\n  return proto.net.rpc.ListenAddrResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.ListenAddrResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.ListenAddrResponse}\n */\nproto.net.rpc.ListenAddrResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.net.rpc.PeerAddrInfo;\n      reader.readMessage(value,proto.net.rpc.PeerAddrInfo.deserializeBinaryFromReader);\n      msg.setAddrInfo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.net.rpc.ListenAddrResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.ListenAddrResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.ListenAddrResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.ListenAddrResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddrInfo();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.net.rpc.PeerAddrInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PeerAddrInfo addr_info = 1;\n * @return {?proto.net.rpc.PeerAddrInfo}\n */\nproto.net.rpc.ListenAddrResponse.prototype.getAddrInfo = function() {\n  return /** @type{?proto.net.rpc.PeerAddrInfo} */ (\n    jspb.Message.getWrapperField(this, proto.net.rpc.PeerAddrInfo, 1));\n};\n\n\n/**\n * @param {?proto.net.rpc.PeerAddrInfo|undefined} value\n * @return {!proto.net.rpc.ListenAddrResponse} returns this\n*/\nproto.net.rpc.ListenAddrResponse.prototype.setAddrInfo = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.net.rpc.ListenAddrResponse} returns this\n */\nproto.net.rpc.ListenAddrResponse.prototype.clearAddrInfo = function() {\n  return this.setAddrInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.net.rpc.ListenAddrResponse.prototype.hasAddrInfo = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.net.rpc.PeersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.net.rpc.PeersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.net.rpc.PeersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.PeersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.PeersRequest}\n */\nproto.net.rpc.PeersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.PeersRequest;\n  return proto.net.rpc.PeersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.PeersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.PeersRequest}\n */\nproto.net.rpc.PeersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.net.rpc.PeersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.PeersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.PeersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.PeersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.net.rpc.PeersResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.net.rpc.PeersResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.net.rpc.PeersResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.net.rpc.PeersResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.PeersResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peersList: jspb.Message.toObjectList(msg.getPeersList(),\n    proto.net.rpc.PeerInfo.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.PeersResponse}\n */\nproto.net.rpc.PeersResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.PeersResponse;\n  return proto.net.rpc.PeersResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.PeersResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.PeersResponse}\n */\nproto.net.rpc.PeersResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.net.rpc.PeerInfo;\n      reader.readMessage(value,proto.net.rpc.PeerInfo.deserializeBinaryFromReader);\n      msg.addPeers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.net.rpc.PeersResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.PeersResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.PeersResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.PeersResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.net.rpc.PeerInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated PeerInfo peers = 1;\n * @return {!Array<!proto.net.rpc.PeerInfo>}\n */\nproto.net.rpc.PeersResponse.prototype.getPeersList = function() {\n  return /** @type{!Array<!proto.net.rpc.PeerInfo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.net.rpc.PeerInfo, 1));\n};\n\n\n/**\n * @param {!Array<!proto.net.rpc.PeerInfo>} value\n * @return {!proto.net.rpc.PeersResponse} returns this\n*/\nproto.net.rpc.PeersResponse.prototype.setPeersList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.net.rpc.PeerInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.net.rpc.PeerInfo}\n */\nproto.net.rpc.PeersResponse.prototype.addPeers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.net.rpc.PeerInfo, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.net.rpc.PeersResponse} returns this\n */\nproto.net.rpc.PeersResponse.prototype.clearPeersList = function() {\n  return this.setPeersList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.net.rpc.FindPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.net.rpc.FindPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.net.rpc.FindPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.FindPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.FindPeerRequest}\n */\nproto.net.rpc.FindPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.FindPeerRequest;\n  return proto.net.rpc.FindPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.FindPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.FindPeerRequest}\n */\nproto.net.rpc.FindPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPeerId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.net.rpc.FindPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.FindPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.FindPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.FindPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string peer_id = 1;\n * @return {string}\n */\nproto.net.rpc.FindPeerRequest.prototype.getPeerId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.net.rpc.FindPeerRequest} returns this\n */\nproto.net.rpc.FindPeerRequest.prototype.setPeerId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.net.rpc.FindPeerResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.net.rpc.FindPeerResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.net.rpc.FindPeerResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.FindPeerResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerInfo: (f = msg.getPeerInfo()) && proto.net.rpc.PeerInfo.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.FindPeerResponse}\n */\nproto.net.rpc.FindPeerResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.FindPeerResponse;\n  return proto.net.rpc.FindPeerResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.FindPeerResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.FindPeerResponse}\n */\nproto.net.rpc.FindPeerResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.net.rpc.PeerInfo;\n      reader.readMessage(value,proto.net.rpc.PeerInfo.deserializeBinaryFromReader);\n      msg.setPeerInfo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.net.rpc.FindPeerResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.FindPeerResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.FindPeerResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.FindPeerResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerInfo();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.net.rpc.PeerInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PeerInfo peer_info = 1;\n * @return {?proto.net.rpc.PeerInfo}\n */\nproto.net.rpc.FindPeerResponse.prototype.getPeerInfo = function() {\n  return /** @type{?proto.net.rpc.PeerInfo} */ (\n    jspb.Message.getWrapperField(this, proto.net.rpc.PeerInfo, 1));\n};\n\n\n/**\n * @param {?proto.net.rpc.PeerInfo|undefined} value\n * @return {!proto.net.rpc.FindPeerResponse} returns this\n*/\nproto.net.rpc.FindPeerResponse.prototype.setPeerInfo = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.net.rpc.FindPeerResponse} returns this\n */\nproto.net.rpc.FindPeerResponse.prototype.clearPeerInfo = function() {\n  return this.setPeerInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.net.rpc.FindPeerResponse.prototype.hasPeerInfo = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.net.rpc.ConnectPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.net.rpc.ConnectPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.net.rpc.ConnectPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.ConnectPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerInfo: (f = msg.getPeerInfo()) && proto.net.rpc.PeerAddrInfo.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.ConnectPeerRequest}\n */\nproto.net.rpc.ConnectPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.ConnectPeerRequest;\n  return proto.net.rpc.ConnectPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.ConnectPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.ConnectPeerRequest}\n */\nproto.net.rpc.ConnectPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.net.rpc.PeerAddrInfo;\n      reader.readMessage(value,proto.net.rpc.PeerAddrInfo.deserializeBinaryFromReader);\n      msg.setPeerInfo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.net.rpc.ConnectPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.ConnectPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.ConnectPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.ConnectPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerInfo();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.net.rpc.PeerAddrInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PeerAddrInfo peer_info = 1;\n * @return {?proto.net.rpc.PeerAddrInfo}\n */\nproto.net.rpc.ConnectPeerRequest.prototype.getPeerInfo = function() {\n  return /** @type{?proto.net.rpc.PeerAddrInfo} */ (\n    jspb.Message.getWrapperField(this, proto.net.rpc.PeerAddrInfo, 1));\n};\n\n\n/**\n * @param {?proto.net.rpc.PeerAddrInfo|undefined} value\n * @return {!proto.net.rpc.ConnectPeerRequest} returns this\n*/\nproto.net.rpc.ConnectPeerRequest.prototype.setPeerInfo = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.net.rpc.ConnectPeerRequest} returns this\n */\nproto.net.rpc.ConnectPeerRequest.prototype.clearPeerInfo = function() {\n  return this.setPeerInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.net.rpc.ConnectPeerRequest.prototype.hasPeerInfo = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.net.rpc.ConnectPeerResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.net.rpc.ConnectPeerResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.net.rpc.ConnectPeerResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.ConnectPeerResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.ConnectPeerResponse}\n */\nproto.net.rpc.ConnectPeerResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.ConnectPeerResponse;\n  return proto.net.rpc.ConnectPeerResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.ConnectPeerResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.ConnectPeerResponse}\n */\nproto.net.rpc.ConnectPeerResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.net.rpc.ConnectPeerResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.ConnectPeerResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.ConnectPeerResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.ConnectPeerResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.net.rpc.DisconnectPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.net.rpc.DisconnectPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.net.rpc.DisconnectPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.DisconnectPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.DisconnectPeerRequest}\n */\nproto.net.rpc.DisconnectPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.DisconnectPeerRequest;\n  return proto.net.rpc.DisconnectPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.DisconnectPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.DisconnectPeerRequest}\n */\nproto.net.rpc.DisconnectPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPeerId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.net.rpc.DisconnectPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.DisconnectPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.DisconnectPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.DisconnectPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string peer_id = 1;\n * @return {string}\n */\nproto.net.rpc.DisconnectPeerRequest.prototype.getPeerId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.net.rpc.DisconnectPeerRequest} returns this\n */\nproto.net.rpc.DisconnectPeerRequest.prototype.setPeerId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.net.rpc.DisconnectPeerResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.net.rpc.DisconnectPeerResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.net.rpc.DisconnectPeerResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.DisconnectPeerResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.DisconnectPeerResponse}\n */\nproto.net.rpc.DisconnectPeerResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.DisconnectPeerResponse;\n  return proto.net.rpc.DisconnectPeerResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.DisconnectPeerResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.DisconnectPeerResponse}\n */\nproto.net.rpc.DisconnectPeerResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.net.rpc.DisconnectPeerResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.DisconnectPeerResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.DisconnectPeerResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.DisconnectPeerResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.net.rpc.ConnectednessRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.net.rpc.ConnectednessRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.net.rpc.ConnectednessRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.ConnectednessRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.ConnectednessRequest}\n */\nproto.net.rpc.ConnectednessRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.ConnectednessRequest;\n  return proto.net.rpc.ConnectednessRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.ConnectednessRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.ConnectednessRequest}\n */\nproto.net.rpc.ConnectednessRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPeerId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.net.rpc.ConnectednessRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.ConnectednessRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.ConnectednessRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.ConnectednessRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string peer_id = 1;\n * @return {string}\n */\nproto.net.rpc.ConnectednessRequest.prototype.getPeerId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.net.rpc.ConnectednessRequest} returns this\n */\nproto.net.rpc.ConnectednessRequest.prototype.setPeerId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.net.rpc.ConnectednessResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.net.rpc.ConnectednessResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.net.rpc.ConnectednessResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.ConnectednessResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    connectedness: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.net.rpc.ConnectednessResponse}\n */\nproto.net.rpc.ConnectednessResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.net.rpc.ConnectednessResponse;\n  return proto.net.rpc.ConnectednessResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.net.rpc.ConnectednessResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.net.rpc.ConnectednessResponse}\n */\nproto.net.rpc.ConnectednessResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.net.rpc.Connectedness} */ (reader.readEnum());\n      msg.setConnectedness(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.net.rpc.ConnectednessResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.net.rpc.ConnectednessResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.net.rpc.ConnectednessResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.net.rpc.ConnectednessResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getConnectedness();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional Connectedness connectedness = 1;\n * @return {!proto.net.rpc.Connectedness}\n */\nproto.net.rpc.ConnectednessResponse.prototype.getConnectedness = function() {\n  return /** @type {!proto.net.rpc.Connectedness} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!proto.net.rpc.Connectedness} value\n * @return {!proto.net.rpc.ConnectednessResponse} returns this\n */\nproto.net.rpc.ConnectednessResponse.prototype.setConnectedness = function(value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * @enum {number}\n */\nproto.net.rpc.Connectedness = {\n  CONNECTEDNESS_UNSPECIFIED: 0,\n  CONNECTEDNESS_NOT_CONNECTED: 1,\n  CONNECTEDNESS_CONNECTED: 2,\n  CONNECTEDNESS_CAN_CONNECT: 3,\n  CONNECTEDNESS_CANNOT_CONNECT: 4,\n  CONNECTEDNESS_ERROR: 5\n};\n\ngoog.object.extend(exports, proto.net.rpc);\n"]},"metadata":{},"sourceType":"script"}