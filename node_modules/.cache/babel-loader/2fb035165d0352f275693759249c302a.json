{"ast":null,"code":"// package: buckets.pb\n// file: buckets.proto\nvar buckets_pb = require(\"./buckets_pb\");\n\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar API = function () {\n  function API() {}\n\n  API.serviceName = \"buckets.pb.API\";\n  return API;\n}();\n\nAPI.List = {\n  methodName: \"List\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.ListRequest,\n  responseType: buckets_pb.ListReply\n};\nAPI.Init = {\n  methodName: \"Init\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.InitRequest,\n  responseType: buckets_pb.InitReply\n};\nAPI.Root = {\n  methodName: \"Root\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.RootRequest,\n  responseType: buckets_pb.RootReply\n};\nAPI.Links = {\n  methodName: \"Links\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.LinksRequest,\n  responseType: buckets_pb.LinksReply\n};\nAPI.ListPath = {\n  methodName: \"ListPath\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.ListPathRequest,\n  responseType: buckets_pb.ListPathReply\n};\nAPI.ListIpfsPath = {\n  methodName: \"ListIpfsPath\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.ListIpfsPathRequest,\n  responseType: buckets_pb.ListIpfsPathReply\n};\nAPI.PushPath = {\n  methodName: \"PushPath\",\n  service: API,\n  requestStream: true,\n  responseStream: true,\n  requestType: buckets_pb.PushPathRequest,\n  responseType: buckets_pb.PushPathReply\n};\nAPI.PullPath = {\n  methodName: \"PullPath\",\n  service: API,\n  requestStream: false,\n  responseStream: true,\n  requestType: buckets_pb.PullPathRequest,\n  responseType: buckets_pb.PullPathReply\n};\nAPI.PullIpfsPath = {\n  methodName: \"PullIpfsPath\",\n  service: API,\n  requestStream: false,\n  responseStream: true,\n  requestType: buckets_pb.PullIpfsPathRequest,\n  responseType: buckets_pb.PullIpfsPathReply\n};\nAPI.SetPath = {\n  methodName: \"SetPath\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.SetPathRequest,\n  responseType: buckets_pb.SetPathReply\n};\nAPI.Remove = {\n  methodName: \"Remove\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.RemoveRequest,\n  responseType: buckets_pb.RemoveReply\n};\nAPI.RemovePath = {\n  methodName: \"RemovePath\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.RemovePathRequest,\n  responseType: buckets_pb.RemovePathReply\n};\nAPI.Archive = {\n  methodName: \"Archive\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.ArchiveRequest,\n  responseType: buckets_pb.ArchiveReply\n};\nAPI.ArchiveStatus = {\n  methodName: \"ArchiveStatus\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.ArchiveStatusRequest,\n  responseType: buckets_pb.ArchiveStatusReply\n};\nAPI.ArchiveInfo = {\n  methodName: \"ArchiveInfo\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.ArchiveInfoRequest,\n  responseType: buckets_pb.ArchiveInfoReply\n};\nAPI.ArchiveWatch = {\n  methodName: \"ArchiveWatch\",\n  service: API,\n  requestStream: false,\n  responseStream: true,\n  requestType: buckets_pb.ArchiveWatchRequest,\n  responseType: buckets_pb.ArchiveWatchReply\n};\nexports.API = API;\n\nfunction APIClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nAPIClient.prototype.list = function list(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.List, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.init = function init(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.Init, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.root = function root(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.Root, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.links = function links(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.Links, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.listPath = function listPath(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.ListPath, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.listIpfsPath = function listIpfsPath(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.ListIpfsPath, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.pushPath = function pushPath(metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.client(API.PushPath, {\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport\n  });\n  client.onEnd(function (status, statusMessage, trailers) {\n    listeners.status.forEach(function (handler) {\n      handler({\n        code: status,\n        details: statusMessage,\n        metadata: trailers\n      });\n    });\n    listeners.end.forEach(function (handler) {\n      handler({\n        code: status,\n        details: statusMessage,\n        metadata: trailers\n      });\n    });\n    listeners = null;\n  });\n  client.onMessage(function (message) {\n    listeners.data.forEach(function (handler) {\n      handler(message);\n    });\n  });\n  client.start(metadata);\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    write: function (requestMessage) {\n      client.send(requestMessage);\n      return this;\n    },\n    end: function () {\n      client.finishSend();\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.pullPath = function pullPath(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(API.PullPath, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({\n          code: status,\n          details: statusMessage,\n          metadata: trailers\n        });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({\n          code: status,\n          details: statusMessage,\n          metadata: trailers\n        });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.pullIpfsPath = function pullIpfsPath(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(API.PullIpfsPath, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({\n          code: status,\n          details: statusMessage,\n          metadata: trailers\n        });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({\n          code: status,\n          details: statusMessage,\n          metadata: trailers\n        });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.setPath = function setPath(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.SetPath, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.remove = function remove(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.Remove, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.removePath = function removePath(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.RemovePath, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.archive = function archive(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.Archive, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.archiveStatus = function archiveStatus(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.ArchiveStatus, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.archiveInfo = function archiveInfo(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.ArchiveInfo, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.archiveWatch = function archiveWatch(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(API.ArchiveWatch, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({\n          code: status,\n          details: statusMessage,\n          metadata: trailers\n        });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({\n          code: status,\n          details: statusMessage,\n          metadata: trailers\n        });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nexports.APIClient = APIClient;","map":{"version":3,"sources":["/Users/nassarhayat/apps/textiletable/js-examples/bucket-photo-gallery/node_modules/@textile/buckets-grpc/buckets_pb_service.js"],"names":["buckets_pb","require","grpc","API","serviceName","List","methodName","service","requestStream","responseStream","requestType","ListRequest","responseType","ListReply","Init","InitRequest","InitReply","Root","RootRequest","RootReply","Links","LinksRequest","LinksReply","ListPath","ListPathRequest","ListPathReply","ListIpfsPath","ListIpfsPathRequest","ListIpfsPathReply","PushPath","PushPathRequest","PushPathReply","PullPath","PullPathRequest","PullPathReply","PullIpfsPath","PullIpfsPathRequest","PullIpfsPathReply","SetPath","SetPathRequest","SetPathReply","Remove","RemoveRequest","RemoveReply","RemovePath","RemovePathRequest","RemovePathReply","Archive","ArchiveRequest","ArchiveReply","ArchiveStatus","ArchiveStatusRequest","ArchiveStatusReply","ArchiveInfo","ArchiveInfoRequest","ArchiveInfoReply","ArchiveWatch","ArchiveWatchRequest","ArchiveWatchReply","exports","APIClient","serviceHost","options","prototype","list","requestMessage","metadata","callback","arguments","length","client","unary","request","host","transport","debug","onEnd","response","status","Code","OK","err","Error","statusMessage","code","trailers","message","cancel","close","init","root","links","listPath","listIpfsPath","pushPath","listeners","data","end","forEach","handler","details","onMessage","start","on","type","push","write","send","finishSend","pullPath","invoke","responseMessage","pullIpfsPath","setPath","remove","removePath","archive","archiveStatus","archiveInfo","archiveWatch"],"mappings":"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","sourcesContent":["// package: buckets.pb\n// file: buckets.proto\n\nvar buckets_pb = require(\"./buckets_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar API = (function () {\n  function API() {}\n  API.serviceName = \"buckets.pb.API\";\n  return API;\n}());\n\nAPI.List = {\n  methodName: \"List\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.ListRequest,\n  responseType: buckets_pb.ListReply\n};\n\nAPI.Init = {\n  methodName: \"Init\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.InitRequest,\n  responseType: buckets_pb.InitReply\n};\n\nAPI.Root = {\n  methodName: \"Root\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.RootRequest,\n  responseType: buckets_pb.RootReply\n};\n\nAPI.Links = {\n  methodName: \"Links\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.LinksRequest,\n  responseType: buckets_pb.LinksReply\n};\n\nAPI.ListPath = {\n  methodName: \"ListPath\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.ListPathRequest,\n  responseType: buckets_pb.ListPathReply\n};\n\nAPI.ListIpfsPath = {\n  methodName: \"ListIpfsPath\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.ListIpfsPathRequest,\n  responseType: buckets_pb.ListIpfsPathReply\n};\n\nAPI.PushPath = {\n  methodName: \"PushPath\",\n  service: API,\n  requestStream: true,\n  responseStream: true,\n  requestType: buckets_pb.PushPathRequest,\n  responseType: buckets_pb.PushPathReply\n};\n\nAPI.PullPath = {\n  methodName: \"PullPath\",\n  service: API,\n  requestStream: false,\n  responseStream: true,\n  requestType: buckets_pb.PullPathRequest,\n  responseType: buckets_pb.PullPathReply\n};\n\nAPI.PullIpfsPath = {\n  methodName: \"PullIpfsPath\",\n  service: API,\n  requestStream: false,\n  responseStream: true,\n  requestType: buckets_pb.PullIpfsPathRequest,\n  responseType: buckets_pb.PullIpfsPathReply\n};\n\nAPI.SetPath = {\n  methodName: \"SetPath\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.SetPathRequest,\n  responseType: buckets_pb.SetPathReply\n};\n\nAPI.Remove = {\n  methodName: \"Remove\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.RemoveRequest,\n  responseType: buckets_pb.RemoveReply\n};\n\nAPI.RemovePath = {\n  methodName: \"RemovePath\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.RemovePathRequest,\n  responseType: buckets_pb.RemovePathReply\n};\n\nAPI.Archive = {\n  methodName: \"Archive\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.ArchiveRequest,\n  responseType: buckets_pb.ArchiveReply\n};\n\nAPI.ArchiveStatus = {\n  methodName: \"ArchiveStatus\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.ArchiveStatusRequest,\n  responseType: buckets_pb.ArchiveStatusReply\n};\n\nAPI.ArchiveInfo = {\n  methodName: \"ArchiveInfo\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: buckets_pb.ArchiveInfoRequest,\n  responseType: buckets_pb.ArchiveInfoReply\n};\n\nAPI.ArchiveWatch = {\n  methodName: \"ArchiveWatch\",\n  service: API,\n  requestStream: false,\n  responseStream: true,\n  requestType: buckets_pb.ArchiveWatchRequest,\n  responseType: buckets_pb.ArchiveWatchReply\n};\n\nexports.API = API;\n\nfunction APIClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nAPIClient.prototype.list = function list(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.List, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.init = function init(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.Init, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.root = function root(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.Root, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.links = function links(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.Links, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.listPath = function listPath(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.ListPath, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.listIpfsPath = function listIpfsPath(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.ListIpfsPath, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.pushPath = function pushPath(metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.client(API.PushPath, {\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport\n  });\n  client.onEnd(function (status, statusMessage, trailers) {\n    listeners.status.forEach(function (handler) {\n      handler({ code: status, details: statusMessage, metadata: trailers });\n    });\n    listeners.end.forEach(function (handler) {\n      handler({ code: status, details: statusMessage, metadata: trailers });\n    });\n    listeners = null;\n  });\n  client.onMessage(function (message) {\n    listeners.data.forEach(function (handler) {\n      handler(message);\n    })\n  });\n  client.start(metadata);\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    write: function (requestMessage) {\n      client.send(requestMessage);\n      return this;\n    },\n    end: function () {\n      client.finishSend();\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.pullPath = function pullPath(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(API.PullPath, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.pullIpfsPath = function pullIpfsPath(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(API.PullIpfsPath, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.setPath = function setPath(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.SetPath, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.remove = function remove(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.Remove, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.removePath = function removePath(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.RemovePath, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.archive = function archive(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.Archive, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.archiveStatus = function archiveStatus(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.ArchiveStatus, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.archiveInfo = function archiveInfo(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.ArchiveInfo, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.archiveWatch = function archiveWatch(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(API.ArchiveWatch, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nexports.APIClient = APIClient;\n\n"]},"metadata":{},"sourceType":"script"}