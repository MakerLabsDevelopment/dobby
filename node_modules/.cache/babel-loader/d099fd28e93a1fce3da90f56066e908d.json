{"ast":null,"code":"// package: wallet.rpc\n// file: wallet/rpc/rpc.proto\nvar wallet_rpc_rpc_pb = require(\"../../wallet/rpc/rpc_pb\");\n\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar RPCService = function () {\n  function RPCService() {}\n\n  RPCService.serviceName = \"wallet.rpc.RPCService\";\n  return RPCService;\n}();\n\nRPCService.NewAddress = {\n  methodName: \"NewAddress\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: wallet_rpc_rpc_pb.NewAddressRequest,\n  responseType: wallet_rpc_rpc_pb.NewAddressResponse\n};\nRPCService.List = {\n  methodName: \"List\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: wallet_rpc_rpc_pb.ListRequest,\n  responseType: wallet_rpc_rpc_pb.ListResponse\n};\nRPCService.Balance = {\n  methodName: \"Balance\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: wallet_rpc_rpc_pb.BalanceRequest,\n  responseType: wallet_rpc_rpc_pb.BalanceResponse\n};\nRPCService.SendFil = {\n  methodName: \"SendFil\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: wallet_rpc_rpc_pb.SendFilRequest,\n  responseType: wallet_rpc_rpc_pb.SendFilResponse\n};\nexports.RPCService = RPCService;\n\nfunction RPCServiceClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nRPCServiceClient.prototype.newAddress = function newAddress(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.NewAddress, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.list = function list(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.List, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.balance = function balance(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.Balance, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.sendFil = function sendFil(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(RPCService.SendFil, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.RPCServiceClient = RPCServiceClient;","map":{"version":3,"sources":["/Users/nassarhayat/apps/textiletable/js-examples/bucket-photo-gallery/node_modules/@textile/grpc-powergate-client/dist/wallet/rpc/rpc_pb_service.js"],"names":["wallet_rpc_rpc_pb","require","grpc","RPCService","serviceName","NewAddress","methodName","service","requestStream","responseStream","requestType","NewAddressRequest","responseType","NewAddressResponse","List","ListRequest","ListResponse","Balance","BalanceRequest","BalanceResponse","SendFil","SendFilRequest","SendFilResponse","exports","RPCServiceClient","serviceHost","options","prototype","newAddress","requestMessage","metadata","callback","arguments","length","client","unary","request","host","transport","debug","onEnd","response","status","Code","OK","err","Error","statusMessage","code","trailers","message","cancel","close","list","balance","sendFil"],"mappings":"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","sourcesContent":["// package: wallet.rpc\n// file: wallet/rpc/rpc.proto\n\nvar wallet_rpc_rpc_pb = require(\"../../wallet/rpc/rpc_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar RPCService = (function () {\n  function RPCService() {}\n  RPCService.serviceName = \"wallet.rpc.RPCService\";\n  return RPCService;\n}());\n\nRPCService.NewAddress = {\n  methodName: \"NewAddress\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: wallet_rpc_rpc_pb.NewAddressRequest,\n  responseType: wallet_rpc_rpc_pb.NewAddressResponse\n};\n\nRPCService.List = {\n  methodName: \"List\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: wallet_rpc_rpc_pb.ListRequest,\n  responseType: wallet_rpc_rpc_pb.ListResponse\n};\n\nRPCService.Balance = {\n  methodName: \"Balance\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: wallet_rpc_rpc_pb.BalanceRequest,\n  responseType: wallet_rpc_rpc_pb.BalanceResponse\n};\n\nRPCService.SendFil = {\n  methodName: \"SendFil\",\n  service: RPCService,\n  requestStream: false,\n  responseStream: false,\n  requestType: wallet_rpc_rpc_pb.SendFilRequest,\n  responseType: wallet_rpc_rpc_pb.SendFilResponse\n};\n\nexports.RPCService = RPCService;\n\nfunction RPCServiceClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nRPCServiceClient.prototype.newAddress = function newAddress(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.NewAddress, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.list = function list(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.List, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.balance = function balance(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.Balance, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nRPCServiceClient.prototype.sendFil = function sendFil(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(RPCService.SendFil, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.RPCServiceClient = RPCServiceClient;\n\n"]},"metadata":{},"sourceType":"script"}