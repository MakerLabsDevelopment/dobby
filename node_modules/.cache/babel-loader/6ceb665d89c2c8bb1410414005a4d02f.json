{"ast":null,"code":"// source: wallet/rpc/rpc.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.wallet.rpc.BalanceRequest', null, global);\ngoog.exportSymbol('proto.wallet.rpc.BalanceResponse', null, global);\ngoog.exportSymbol('proto.wallet.rpc.ListRequest', null, global);\ngoog.exportSymbol('proto.wallet.rpc.ListResponse', null, global);\ngoog.exportSymbol('proto.wallet.rpc.NewAddressRequest', null, global);\ngoog.exportSymbol('proto.wallet.rpc.NewAddressResponse', null, global);\ngoog.exportSymbol('proto.wallet.rpc.SendFilRequest', null, global);\ngoog.exportSymbol('proto.wallet.rpc.SendFilResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.wallet.rpc.NewAddressRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.wallet.rpc.NewAddressRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.wallet.rpc.NewAddressRequest.displayName = 'proto.wallet.rpc.NewAddressRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.wallet.rpc.NewAddressResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.wallet.rpc.NewAddressResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.wallet.rpc.NewAddressResponse.displayName = 'proto.wallet.rpc.NewAddressResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.wallet.rpc.ListRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.wallet.rpc.ListRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.wallet.rpc.ListRequest.displayName = 'proto.wallet.rpc.ListRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.wallet.rpc.ListResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.wallet.rpc.ListResponse.repeatedFields_, null);\n};\n\ngoog.inherits(proto.wallet.rpc.ListResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.wallet.rpc.ListResponse.displayName = 'proto.wallet.rpc.ListResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.wallet.rpc.BalanceRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.wallet.rpc.BalanceRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.wallet.rpc.BalanceRequest.displayName = 'proto.wallet.rpc.BalanceRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.wallet.rpc.BalanceResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.wallet.rpc.BalanceResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.wallet.rpc.BalanceResponse.displayName = 'proto.wallet.rpc.BalanceResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.wallet.rpc.SendFilRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.wallet.rpc.SendFilRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.wallet.rpc.SendFilRequest.displayName = 'proto.wallet.rpc.SendFilRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.wallet.rpc.SendFilResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.wallet.rpc.SendFilResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.wallet.rpc.SendFilResponse.displayName = 'proto.wallet.rpc.SendFilResponse';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.wallet.rpc.NewAddressRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.wallet.rpc.NewAddressRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.wallet.rpc.NewAddressRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.wallet.rpc.NewAddressRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      type: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.wallet.rpc.NewAddressRequest}\n */\n\n\nproto.wallet.rpc.NewAddressRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.wallet.rpc.NewAddressRequest();\n  return proto.wallet.rpc.NewAddressRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.wallet.rpc.NewAddressRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.wallet.rpc.NewAddressRequest}\n */\n\n\nproto.wallet.rpc.NewAddressRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setType(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.wallet.rpc.NewAddressRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.wallet.rpc.NewAddressRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.wallet.rpc.NewAddressRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.wallet.rpc.NewAddressRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getType();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string type = 1;\n * @return {string}\n */\n\n\nproto.wallet.rpc.NewAddressRequest.prototype.getType = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.wallet.rpc.NewAddressRequest} returns this\n */\n\n\nproto.wallet.rpc.NewAddressRequest.prototype.setType = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.wallet.rpc.NewAddressResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.wallet.rpc.NewAddressResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.wallet.rpc.NewAddressResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.wallet.rpc.NewAddressResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.wallet.rpc.NewAddressResponse}\n */\n\n\nproto.wallet.rpc.NewAddressResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.wallet.rpc.NewAddressResponse();\n  return proto.wallet.rpc.NewAddressResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.wallet.rpc.NewAddressResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.wallet.rpc.NewAddressResponse}\n */\n\n\nproto.wallet.rpc.NewAddressResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAddress(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.wallet.rpc.NewAddressResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.wallet.rpc.NewAddressResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.wallet.rpc.NewAddressResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.wallet.rpc.NewAddressResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string address = 1;\n * @return {string}\n */\n\n\nproto.wallet.rpc.NewAddressResponse.prototype.getAddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.wallet.rpc.NewAddressResponse} returns this\n */\n\n\nproto.wallet.rpc.NewAddressResponse.prototype.setAddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.wallet.rpc.ListRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.wallet.rpc.ListRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.wallet.rpc.ListRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.wallet.rpc.ListRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      type: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.wallet.rpc.ListRequest}\n */\n\n\nproto.wallet.rpc.ListRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.wallet.rpc.ListRequest();\n  return proto.wallet.rpc.ListRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.wallet.rpc.ListRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.wallet.rpc.ListRequest}\n */\n\n\nproto.wallet.rpc.ListRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setType(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.wallet.rpc.ListRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.wallet.rpc.ListRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.wallet.rpc.ListRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.wallet.rpc.ListRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getType();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string type = 1;\n * @return {string}\n */\n\n\nproto.wallet.rpc.ListRequest.prototype.getType = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.wallet.rpc.ListRequest} returns this\n */\n\n\nproto.wallet.rpc.ListRequest.prototype.setType = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.wallet.rpc.ListResponse.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.wallet.rpc.ListResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.wallet.rpc.ListResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.wallet.rpc.ListResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.wallet.rpc.ListResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addressesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.wallet.rpc.ListResponse}\n */\n\n\nproto.wallet.rpc.ListResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.wallet.rpc.ListResponse();\n  return proto.wallet.rpc.ListResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.wallet.rpc.ListResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.wallet.rpc.ListResponse}\n */\n\n\nproto.wallet.rpc.ListResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addAddresses(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.wallet.rpc.ListResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.wallet.rpc.ListResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.wallet.rpc.ListResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.wallet.rpc.ListResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddressesList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(1, f);\n  }\n};\n/**\n * repeated string addresses = 1;\n * @return {!Array<string>}\n */\n\n\nproto.wallet.rpc.ListResponse.prototype.getAddressesList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 1)\n  );\n};\n/**\n * @param {!Array<string>} value\n * @return {!proto.wallet.rpc.ListResponse} returns this\n */\n\n\nproto.wallet.rpc.ListResponse.prototype.setAddressesList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.wallet.rpc.ListResponse} returns this\n */\n\n\nproto.wallet.rpc.ListResponse.prototype.addAddresses = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.wallet.rpc.ListResponse} returns this\n */\n\n\nproto.wallet.rpc.ListResponse.prototype.clearAddressesList = function () {\n  return this.setAddressesList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.wallet.rpc.BalanceRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.wallet.rpc.BalanceRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.wallet.rpc.BalanceRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.wallet.rpc.BalanceRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.wallet.rpc.BalanceRequest}\n */\n\n\nproto.wallet.rpc.BalanceRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.wallet.rpc.BalanceRequest();\n  return proto.wallet.rpc.BalanceRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.wallet.rpc.BalanceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.wallet.rpc.BalanceRequest}\n */\n\n\nproto.wallet.rpc.BalanceRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAddress(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.wallet.rpc.BalanceRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.wallet.rpc.BalanceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.wallet.rpc.BalanceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.wallet.rpc.BalanceRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string address = 1;\n * @return {string}\n */\n\n\nproto.wallet.rpc.BalanceRequest.prototype.getAddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.wallet.rpc.BalanceRequest} returns this\n */\n\n\nproto.wallet.rpc.BalanceRequest.prototype.setAddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.wallet.rpc.BalanceResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.wallet.rpc.BalanceResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.wallet.rpc.BalanceResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.wallet.rpc.BalanceResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      balance: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.wallet.rpc.BalanceResponse}\n */\n\n\nproto.wallet.rpc.BalanceResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.wallet.rpc.BalanceResponse();\n  return proto.wallet.rpc.BalanceResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.wallet.rpc.BalanceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.wallet.rpc.BalanceResponse}\n */\n\n\nproto.wallet.rpc.BalanceResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setBalance(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.wallet.rpc.BalanceResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.wallet.rpc.BalanceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.wallet.rpc.BalanceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.wallet.rpc.BalanceResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBalance();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n};\n/**\n * optional uint64 balance = 1;\n * @return {number}\n */\n\n\nproto.wallet.rpc.BalanceResponse.prototype.getBalance = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.wallet.rpc.BalanceResponse} returns this\n */\n\n\nproto.wallet.rpc.BalanceResponse.prototype.setBalance = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.wallet.rpc.SendFilRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.wallet.rpc.SendFilRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.wallet.rpc.SendFilRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.wallet.rpc.SendFilRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      from: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      to: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      amount: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.wallet.rpc.SendFilRequest}\n */\n\n\nproto.wallet.rpc.SendFilRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.wallet.rpc.SendFilRequest();\n  return proto.wallet.rpc.SendFilRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.wallet.rpc.SendFilRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.wallet.rpc.SendFilRequest}\n */\n\n\nproto.wallet.rpc.SendFilRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setFrom(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTo(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setAmount(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.wallet.rpc.SendFilRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.wallet.rpc.SendFilRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.wallet.rpc.SendFilRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.wallet.rpc.SendFilRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getFrom();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getTo();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getAmount();\n\n  if (f !== 0) {\n    writer.writeInt64(3, f);\n  }\n};\n/**\n * optional string from = 1;\n * @return {string}\n */\n\n\nproto.wallet.rpc.SendFilRequest.prototype.getFrom = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.wallet.rpc.SendFilRequest} returns this\n */\n\n\nproto.wallet.rpc.SendFilRequest.prototype.setFrom = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string to = 2;\n * @return {string}\n */\n\n\nproto.wallet.rpc.SendFilRequest.prototype.getTo = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.wallet.rpc.SendFilRequest} returns this\n */\n\n\nproto.wallet.rpc.SendFilRequest.prototype.setTo = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional int64 amount = 3;\n * @return {number}\n */\n\n\nproto.wallet.rpc.SendFilRequest.prototype.getAmount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.wallet.rpc.SendFilRequest} returns this\n */\n\n\nproto.wallet.rpc.SendFilRequest.prototype.setAmount = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.wallet.rpc.SendFilResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.wallet.rpc.SendFilResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.wallet.rpc.SendFilResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.wallet.rpc.SendFilResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.wallet.rpc.SendFilResponse}\n */\n\n\nproto.wallet.rpc.SendFilResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.wallet.rpc.SendFilResponse();\n  return proto.wallet.rpc.SendFilResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.wallet.rpc.SendFilResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.wallet.rpc.SendFilResponse}\n */\n\n\nproto.wallet.rpc.SendFilResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.wallet.rpc.SendFilResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.wallet.rpc.SendFilResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.wallet.rpc.SendFilResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.wallet.rpc.SendFilResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\ngoog.object.extend(exports, proto.wallet.rpc);","map":{"version":3,"sources":["/Users/nassarhayat/apps/textiletable/sushitable/node_modules/@textile/grpc-powergate-client/dist/wallet/rpc/rpc_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","wallet","rpc","NewAddressRequest","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","NewAddressResponse","ListRequest","ListResponse","repeatedFields_","BalanceRequest","BalanceResponse","SendFilRequest","SendFilResponse","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","type","getFieldWithDefault","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setType","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getType","length","writeString","setProto3StringField","address","setAddress","getAddress","addressesList","getRepeatedField","addAddresses","getAddressesList","writeRepeatedString","setAddressesList","setField","opt_index","addToRepeatedField","clearAddressesList","balance","readUint64","setBalance","getBalance","writeUint64","setProto3IntField","from","to","amount","setFrom","setTo","readInt64","setAmount","getFrom","getTo","getAmount","writeInt64","object","extend","exports"],"mappings":"AAAA;;AACA;;;;;;;AAOA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAlB;;AACA,IAAIC,IAAI,GAAGF,IAAX;AACA,IAAIG,MAAM,GAAGC,QAAQ,CAAC,aAAD,CAAR,EAAb;AAEAF,IAAI,CAACG,YAAL,CAAkB,iCAAlB,EAAqD,IAArD,EAA2DF,MAA3D;AACAD,IAAI,CAACG,YAAL,CAAkB,kCAAlB,EAAsD,IAAtD,EAA4DF,MAA5D;AACAD,IAAI,CAACG,YAAL,CAAkB,8BAAlB,EAAkD,IAAlD,EAAwDF,MAAxD;AACAD,IAAI,CAACG,YAAL,CAAkB,+BAAlB,EAAmD,IAAnD,EAAyDF,MAAzD;AACAD,IAAI,CAACG,YAAL,CAAkB,oCAAlB,EAAwD,IAAxD,EAA8DF,MAA9D;AACAD,IAAI,CAACG,YAAL,CAAkB,qCAAlB,EAAyD,IAAzD,EAA+DF,MAA/D;AACAD,IAAI,CAACG,YAAL,CAAkB,iCAAlB,EAAqD,IAArD,EAA2DF,MAA3D;AACAD,IAAI,CAACG,YAAL,CAAkB,kCAAlB,EAAsD,IAAtD,EAA4DF,MAA5D;AACA;;;;;;;;;;;AAUAG,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,iBAAjB,GAAqC,UAASC,QAAT,EAAmB;AACtDV,EAAAA,IAAI,CAACW,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAR,IAAI,CAACW,QAAL,CAAcP,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,iBAA/B,EAAkDT,IAAI,CAACW,OAAvD;;AACA,IAAIT,IAAI,CAACY,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;;;;AAIAT,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,iBAAjB,CAAmCO,WAAnC,GAAiD,oCAAjD;AACD;AACD;;;;;;;;;;;;AAUAV,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBS,kBAAjB,GAAsC,UAASP,QAAT,EAAmB;AACvDV,EAAAA,IAAI,CAACW,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAR,IAAI,CAACW,QAAL,CAAcP,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBS,kBAA/B,EAAmDjB,IAAI,CAACW,OAAxD;;AACA,IAAIT,IAAI,CAACY,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;;;;AAIAT,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBS,kBAAjB,CAAoCD,WAApC,GAAkD,qCAAlD;AACD;AACD;;;;;;;;;;;;AAUAV,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBU,WAAjB,GAA+B,UAASR,QAAT,EAAmB;AAChDV,EAAAA,IAAI,CAACW,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAR,IAAI,CAACW,QAAL,CAAcP,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBU,WAA/B,EAA4ClB,IAAI,CAACW,OAAjD;;AACA,IAAIT,IAAI,CAACY,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;;;;AAIAT,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBU,WAAjB,CAA6BF,WAA7B,GAA2C,8BAA3C;AACD;AACD;;;;;;;;;;;;AAUAV,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAAjB,GAAgC,UAAST,QAAT,EAAmB;AACjDV,EAAAA,IAAI,CAACW,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+CJ,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAAjB,CAA8BC,eAA7E,EAA8F,IAA9F;AACD,CAFD;;AAGAlB,IAAI,CAACW,QAAL,CAAcP,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAA/B,EAA6CnB,IAAI,CAACW,OAAlD;;AACA,IAAIT,IAAI,CAACY,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;;;;AAIAT,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAAjB,CAA8BH,WAA9B,GAA4C,+BAA5C;AACD;AACD;;;;;;;;;;;;AAUAV,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBa,cAAjB,GAAkC,UAASX,QAAT,EAAmB;AACnDV,EAAAA,IAAI,CAACW,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAR,IAAI,CAACW,QAAL,CAAcP,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBa,cAA/B,EAA+CrB,IAAI,CAACW,OAApD;;AACA,IAAIT,IAAI,CAACY,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;;;;AAIAT,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBa,cAAjB,CAAgCL,WAAhC,GAA8C,iCAA9C;AACD;AACD;;;;;;;;;;;;AAUAV,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBc,eAAjB,GAAmC,UAASZ,QAAT,EAAmB;AACpDV,EAAAA,IAAI,CAACW,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAR,IAAI,CAACW,QAAL,CAAcP,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBc,eAA/B,EAAgDtB,IAAI,CAACW,OAArD;;AACA,IAAIT,IAAI,CAACY,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;;;;AAIAT,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBc,eAAjB,CAAiCN,WAAjC,GAA+C,kCAA/C;AACD;AACD;;;;;;;;;;;;AAUAV,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAAjB,GAAkC,UAASb,QAAT,EAAmB;AACnDV,EAAAA,IAAI,CAACW,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAR,IAAI,CAACW,QAAL,CAAcP,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAA/B,EAA+CvB,IAAI,CAACW,OAApD;;AACA,IAAIT,IAAI,CAACY,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;;;;AAIAT,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAAjB,CAAgCP,WAAhC,GAA8C,iCAA9C;AACD;AACD;;;;;;;;;;;;AAUAV,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBgB,eAAjB,GAAmC,UAASd,QAAT,EAAmB;AACpDV,EAAAA,IAAI,CAACW,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAR,IAAI,CAACW,QAAL,CAAcP,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBgB,eAA/B,EAAgDxB,IAAI,CAACW,OAArD;;AACA,IAAIT,IAAI,CAACY,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;;;;AAIAT,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBgB,eAAjB,CAAiCR,WAAjC,GAA+C,kCAA/C;AACD;;AAID,IAAIhB,IAAI,CAACW,OAAL,CAAac,kBAAjB,EAAqC;AACrC;;;;;;;;;;;;AAYAnB,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,iBAAjB,CAAmCiB,SAAnC,CAA6CC,QAA7C,GAAwD,UAASC,mBAAT,EAA8B;AACpF,WAAOtB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,iBAAjB,CAAmCkB,QAAnC,CAA4CC,mBAA5C,EAAiE,IAAjE,CAAP;AACD,GAFD;AAKA;;;;;;;;;;;AASAtB,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,iBAAjB,CAAmCkB,QAAnC,GAA8C,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC3E,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXC,MAAAA,IAAI,EAAEjC,IAAI,CAACW,OAAL,CAAauB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC;AADK,KAAb;;AAIA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACG,oBAAJ,GAA2BL,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GATD;AAUC;AAGD;;;;;;;AAKA1B,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,iBAAjB,CAAmC2B,iBAAnC,GAAuD,UAASC,KAAT,EAAgB;AACrE,MAAIC,MAAM,GAAG,IAAItC,IAAI,CAACuC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIP,GAAG,GAAG,IAAIxB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,iBAArB,EAAV;AACA,SAAOH,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,iBAAjB,CAAmC+B,2BAAnC,CAA+DV,GAA/D,EAAoEQ,MAApE,CAAP;AACD,CAJD;AAOA;;;;;;;;;AAOAhC,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,iBAAjB,CAAmC+B,2BAAnC,GAAiE,UAASV,GAAT,EAAcQ,MAAd,EAAsB;AACrF,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAhB,QAAAA,GAAG,CAACiB,OAAJ,CAAYF,KAAZ;AACA;;AACF;AACEP,QAAAA,MAAM,CAACU,SAAP;AACA;AAPF;AASD;;AACD,SAAOlB,GAAP;AACD,CAjBD;AAoBA;;;;;;AAIAxB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,iBAAjB,CAAmCiB,SAAnC,CAA6CuB,eAA7C,GAA+D,YAAW;AACxE,MAAIC,MAAM,GAAG,IAAIlD,IAAI,CAACmD,YAAT,EAAb;AACA7C,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,iBAAjB,CAAmC2C,uBAAnC,CAA2D,IAA3D,EAAiEF,MAAjE;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA/C,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,iBAAjB,CAAmC2C,uBAAnC,GAA6D,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACrF,MAAInB,CAAC,GAAGwB,SAAR;AACAxB,EAAAA,CAAC,GAAGuB,OAAO,CAACE,OAAR,EAAJ;;AACA,MAAIzB,CAAC,CAAC0B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEE3B,CAFF;AAID;AACF,CATD;AAYA;;;;;;AAIAzB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,iBAAjB,CAAmCiB,SAAnC,CAA6C8B,OAA7C,GAAuD,YAAW;AAChE;AAAO;AAAuBxD,IAAAA,IAAI,CAACW,OAAL,CAAauB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;;;;AAIA5B,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,iBAAjB,CAAmCiB,SAAnC,CAA6CqB,OAA7C,GAAuD,UAASF,KAAT,EAAgB;AACrE,SAAO7C,IAAI,CAACW,OAAL,CAAagD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2Cd,KAA3C,CAAP;AACD,CAFD;;AAQA,IAAI7C,IAAI,CAACW,OAAL,CAAac,kBAAjB,EAAqC;AACrC;;;;;;;;;;;;AAYAnB,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBS,kBAAjB,CAAoCS,SAApC,CAA8CC,QAA9C,GAAyD,UAASC,mBAAT,EAA8B;AACrF,WAAOtB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBS,kBAAjB,CAAoCU,QAApC,CAA6CC,mBAA7C,EAAkE,IAAlE,CAAP;AACD,GAFD;AAKA;;;;;;;;;;;AASAtB,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBS,kBAAjB,CAAoCU,QAApC,GAA+C,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC5E,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACX4B,MAAAA,OAAO,EAAE5D,IAAI,CAACW,OAAL,CAAauB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC;AADE,KAAb;;AAIA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACG,oBAAJ,GAA2BL,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GATD;AAUC;AAGD;;;;;;;AAKA1B,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBS,kBAAjB,CAAoCmB,iBAApC,GAAwD,UAASC,KAAT,EAAgB;AACtE,MAAIC,MAAM,GAAG,IAAItC,IAAI,CAACuC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIP,GAAG,GAAG,IAAIxB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBS,kBAArB,EAAV;AACA,SAAOX,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBS,kBAAjB,CAAoCuB,2BAApC,CAAgEV,GAAhE,EAAqEQ,MAArE,CAAP;AACD,CAJD;AAOA;;;;;;;;;AAOAhC,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBS,kBAAjB,CAAoCuB,2BAApC,GAAkE,UAASV,GAAT,EAAcQ,MAAd,EAAsB;AACtF,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAhB,QAAAA,GAAG,CAAC+B,UAAJ,CAAehB,KAAf;AACA;;AACF;AACEP,QAAAA,MAAM,CAACU,SAAP;AACA;AAPF;AASD;;AACD,SAAOlB,GAAP;AACD,CAjBD;AAoBA;;;;;;AAIAxB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBS,kBAAjB,CAAoCS,SAApC,CAA8CuB,eAA9C,GAAgE,YAAW;AACzE,MAAIC,MAAM,GAAG,IAAIlD,IAAI,CAACmD,YAAT,EAAb;AACA7C,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBS,kBAAjB,CAAoCmC,uBAApC,CAA4D,IAA5D,EAAkEF,MAAlE;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA/C,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBS,kBAAjB,CAAoCmC,uBAApC,GAA8D,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACtF,MAAInB,CAAC,GAAGwB,SAAR;AACAxB,EAAAA,CAAC,GAAGuB,OAAO,CAACQ,UAAR,EAAJ;;AACA,MAAI/B,CAAC,CAAC0B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEE3B,CAFF;AAID;AACF,CATD;AAYA;;;;;;AAIAzB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBS,kBAAjB,CAAoCS,SAApC,CAA8CoC,UAA9C,GAA2D,YAAW;AACpE;AAAO;AAAuB9D,IAAAA,IAAI,CAACW,OAAL,CAAauB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;;;;AAIA5B,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBS,kBAAjB,CAAoCS,SAApC,CAA8CmC,UAA9C,GAA2D,UAAShB,KAAT,EAAgB;AACzE,SAAO7C,IAAI,CAACW,OAAL,CAAagD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2Cd,KAA3C,CAAP;AACD,CAFD;;AAQA,IAAI7C,IAAI,CAACW,OAAL,CAAac,kBAAjB,EAAqC;AACrC;;;;;;;;;;;;AAYAnB,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBU,WAAjB,CAA6BQ,SAA7B,CAAuCC,QAAvC,GAAkD,UAASC,mBAAT,EAA8B;AAC9E,WAAOtB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBU,WAAjB,CAA6BS,QAA7B,CAAsCC,mBAAtC,EAA2D,IAA3D,CAAP;AACD,GAFD;AAKA;;;;;;;;;;;AASAtB,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBU,WAAjB,CAA6BS,QAA7B,GAAwC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACrE,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXC,MAAAA,IAAI,EAAEjC,IAAI,CAACW,OAAL,CAAauB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC;AADK,KAAb;;AAIA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACG,oBAAJ,GAA2BL,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GATD;AAUC;AAGD;;;;;;;AAKA1B,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBU,WAAjB,CAA6BkB,iBAA7B,GAAiD,UAASC,KAAT,EAAgB;AAC/D,MAAIC,MAAM,GAAG,IAAItC,IAAI,CAACuC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIP,GAAG,GAAG,IAAIxB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBU,WAArB,EAAV;AACA,SAAOZ,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBU,WAAjB,CAA6BsB,2BAA7B,CAAyDV,GAAzD,EAA8DQ,MAA9D,CAAP;AACD,CAJD;AAOA;;;;;;;;;AAOAhC,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBU,WAAjB,CAA6BsB,2BAA7B,GAA2D,UAASV,GAAT,EAAcQ,MAAd,EAAsB;AAC/E,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAhB,QAAAA,GAAG,CAACiB,OAAJ,CAAYF,KAAZ;AACA;;AACF;AACEP,QAAAA,MAAM,CAACU,SAAP;AACA;AAPF;AASD;;AACD,SAAOlB,GAAP;AACD,CAjBD;AAoBA;;;;;;AAIAxB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBU,WAAjB,CAA6BQ,SAA7B,CAAuCuB,eAAvC,GAAyD,YAAW;AAClE,MAAIC,MAAM,GAAG,IAAIlD,IAAI,CAACmD,YAAT,EAAb;AACA7C,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBU,WAAjB,CAA6BkC,uBAA7B,CAAqD,IAArD,EAA2DF,MAA3D;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA/C,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBU,WAAjB,CAA6BkC,uBAA7B,GAAuD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC/E,MAAInB,CAAC,GAAGwB,SAAR;AACAxB,EAAAA,CAAC,GAAGuB,OAAO,CAACE,OAAR,EAAJ;;AACA,MAAIzB,CAAC,CAAC0B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEE3B,CAFF;AAID;AACF,CATD;AAYA;;;;;;AAIAzB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBU,WAAjB,CAA6BQ,SAA7B,CAAuC8B,OAAvC,GAAiD,YAAW;AAC1D;AAAO;AAAuBxD,IAAAA,IAAI,CAACW,OAAL,CAAauB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;;;;AAIA5B,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBU,WAAjB,CAA6BQ,SAA7B,CAAuCqB,OAAvC,GAAiD,UAASF,KAAT,EAAgB;AAC/D,SAAO7C,IAAI,CAACW,OAAL,CAAagD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2Cd,KAA3C,CAAP;AACD,CAFD;AAMA;;;;;;;AAKAvC,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAAjB,CAA8BC,eAA9B,GAAgD,CAAC,CAAD,CAAhD;;AAIA,IAAIpB,IAAI,CAACW,OAAL,CAAac,kBAAjB,EAAqC;AACrC;;;;;;;;;;;;AAYAnB,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAAjB,CAA8BO,SAA9B,CAAwCC,QAAxC,GAAmD,UAASC,mBAAT,EAA8B;AAC/E,WAAOtB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAAjB,CAA8BQ,QAA9B,CAAuCC,mBAAvC,EAA4D,IAA5D,CAAP;AACD,GAFD;AAKA;;;;;;;;;;;AASAtB,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAAjB,CAA8BQ,QAA9B,GAAyC,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACtE,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACX+B,MAAAA,aAAa,EAAE,CAAChC,CAAC,GAAG/B,IAAI,CAACW,OAAL,CAAaqD,gBAAb,CAA8BlC,GAA9B,EAAmC,CAAnC,CAAL,KAA+C,IAA/C,GAAsDyB,SAAtD,GAAkExB;AADtE,KAAb;;AAIA,QAAIF,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACG,oBAAJ,GAA2BL,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GATD;AAUC;AAGD;;;;;;;AAKA1B,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAAjB,CAA8BiB,iBAA9B,GAAkD,UAASC,KAAT,EAAgB;AAChE,MAAIC,MAAM,GAAG,IAAItC,IAAI,CAACuC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIP,GAAG,GAAG,IAAIxB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAArB,EAAV;AACA,SAAOb,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAAjB,CAA8BqB,2BAA9B,CAA0DV,GAA1D,EAA+DQ,MAA/D,CAAP;AACD,CAJD;AAOA;;;;;;;;;AAOAhC,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAAjB,CAA8BqB,2BAA9B,GAA4D,UAASV,GAAT,EAAcQ,MAAd,EAAsB;AAChF,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAhB,QAAAA,GAAG,CAACmC,YAAJ,CAAiBpB,KAAjB;AACA;;AACF;AACEP,QAAAA,MAAM,CAACU,SAAP;AACA;AAPF;AASD;;AACD,SAAOlB,GAAP;AACD,CAjBD;AAoBA;;;;;;AAIAxB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAAjB,CAA8BO,SAA9B,CAAwCuB,eAAxC,GAA0D,YAAW;AACnE,MAAIC,MAAM,GAAG,IAAIlD,IAAI,CAACmD,YAAT,EAAb;AACA7C,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAAjB,CAA8BiC,uBAA9B,CAAsD,IAAtD,EAA4DF,MAA5D;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA/C,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAAjB,CAA8BiC,uBAA9B,GAAwD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAChF,MAAInB,CAAC,GAAGwB,SAAR;AACAxB,EAAAA,CAAC,GAAGuB,OAAO,CAACY,gBAAR,EAAJ;;AACA,MAAInC,CAAC,CAAC0B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACiB,mBAAP,CACE,CADF,EAEEpC,CAFF;AAID;AACF,CATD;AAYA;;;;;;AAIAzB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAAjB,CAA8BO,SAA9B,CAAwCwC,gBAAxC,GAA2D,YAAW;AACpE;AAAO;AAA+BlE,IAAAA,IAAI,CAACW,OAAL,CAAaqD,gBAAb,CAA8B,IAA9B,EAAoC,CAApC;AAAtC;AACD,CAFD;AAKA;;;;;;AAIA1D,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAAjB,CAA8BO,SAA9B,CAAwC0C,gBAAxC,GAA2D,UAASvB,KAAT,EAAgB;AACzE,SAAO7C,IAAI,CAACW,OAAL,CAAa0D,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+BxB,KAAK,IAAI,EAAxC,CAAP;AACD,CAFD;AAKA;;;;;;;AAKAvC,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAAjB,CAA8BO,SAA9B,CAAwCuC,YAAxC,GAAuD,UAASpB,KAAT,EAAgByB,SAAhB,EAA2B;AAChF,SAAOtE,IAAI,CAACW,OAAL,CAAa4D,kBAAb,CAAgC,IAAhC,EAAsC,CAAtC,EAAyC1B,KAAzC,EAAgDyB,SAAhD,CAAP;AACD,CAFD;AAKA;;;;;;AAIAhE,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBW,YAAjB,CAA8BO,SAA9B,CAAwC8C,kBAAxC,GAA6D,YAAW;AACtE,SAAO,KAAKJ,gBAAL,CAAsB,EAAtB,CAAP;AACD,CAFD;;AAQA,IAAIpE,IAAI,CAACW,OAAL,CAAac,kBAAjB,EAAqC;AACrC;;;;;;;;;;;;AAYAnB,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBa,cAAjB,CAAgCK,SAAhC,CAA0CC,QAA1C,GAAqD,UAASC,mBAAT,EAA8B;AACjF,WAAOtB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBa,cAAjB,CAAgCM,QAAhC,CAAyCC,mBAAzC,EAA8D,IAA9D,CAAP;AACD,GAFD;AAKA;;;;;;;;;;;AASAtB,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBa,cAAjB,CAAgCM,QAAhC,GAA2C,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACxE,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACX4B,MAAAA,OAAO,EAAE5D,IAAI,CAACW,OAAL,CAAauB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC;AADE,KAAb;;AAIA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACG,oBAAJ,GAA2BL,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GATD;AAUC;AAGD;;;;;;;AAKA1B,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBa,cAAjB,CAAgCe,iBAAhC,GAAoD,UAASC,KAAT,EAAgB;AAClE,MAAIC,MAAM,GAAG,IAAItC,IAAI,CAACuC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIP,GAAG,GAAG,IAAIxB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBa,cAArB,EAAV;AACA,SAAOf,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBa,cAAjB,CAAgCmB,2BAAhC,CAA4DV,GAA5D,EAAiEQ,MAAjE,CAAP;AACD,CAJD;AAOA;;;;;;;;;AAOAhC,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBa,cAAjB,CAAgCmB,2BAAhC,GAA8D,UAASV,GAAT,EAAcQ,MAAd,EAAsB;AAClF,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAhB,QAAAA,GAAG,CAAC+B,UAAJ,CAAehB,KAAf;AACA;;AACF;AACEP,QAAAA,MAAM,CAACU,SAAP;AACA;AAPF;AASD;;AACD,SAAOlB,GAAP;AACD,CAjBD;AAoBA;;;;;;AAIAxB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBa,cAAjB,CAAgCK,SAAhC,CAA0CuB,eAA1C,GAA4D,YAAW;AACrE,MAAIC,MAAM,GAAG,IAAIlD,IAAI,CAACmD,YAAT,EAAb;AACA7C,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBa,cAAjB,CAAgC+B,uBAAhC,CAAwD,IAAxD,EAA8DF,MAA9D;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA/C,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBa,cAAjB,CAAgC+B,uBAAhC,GAA0D,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAClF,MAAInB,CAAC,GAAGwB,SAAR;AACAxB,EAAAA,CAAC,GAAGuB,OAAO,CAACQ,UAAR,EAAJ;;AACA,MAAI/B,CAAC,CAAC0B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEE3B,CAFF;AAID;AACF,CATD;AAYA;;;;;;AAIAzB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBa,cAAjB,CAAgCK,SAAhC,CAA0CoC,UAA1C,GAAuD,YAAW;AAChE;AAAO;AAAuB9D,IAAAA,IAAI,CAACW,OAAL,CAAauB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;;;;AAIA5B,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBa,cAAjB,CAAgCK,SAAhC,CAA0CmC,UAA1C,GAAuD,UAAShB,KAAT,EAAgB;AACrE,SAAO7C,IAAI,CAACW,OAAL,CAAagD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2Cd,KAA3C,CAAP;AACD,CAFD;;AAQA,IAAI7C,IAAI,CAACW,OAAL,CAAac,kBAAjB,EAAqC;AACrC;;;;;;;;;;;;AAYAnB,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBc,eAAjB,CAAiCI,SAAjC,CAA2CC,QAA3C,GAAsD,UAASC,mBAAT,EAA8B;AAClF,WAAOtB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBc,eAAjB,CAAiCK,QAAjC,CAA0CC,mBAA1C,EAA+D,IAA/D,CAAP;AACD,GAFD;AAKA;;;;;;;;;;;AASAtB,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBc,eAAjB,CAAiCK,QAAjC,GAA4C,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACzE,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXyC,MAAAA,OAAO,EAAEzE,IAAI,CAACW,OAAL,CAAauB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC;AADE,KAAb;;AAIA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACG,oBAAJ,GAA2BL,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GATD;AAUC;AAGD;;;;;;;AAKA1B,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBc,eAAjB,CAAiCc,iBAAjC,GAAqD,UAASC,KAAT,EAAgB;AACnE,MAAIC,MAAM,GAAG,IAAItC,IAAI,CAACuC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIP,GAAG,GAAG,IAAIxB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBc,eAArB,EAAV;AACA,SAAOhB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBc,eAAjB,CAAiCkB,2BAAjC,CAA6DV,GAA7D,EAAkEQ,MAAlE,CAAP;AACD,CAJD;AAOA;;;;;;;;;AAOAhC,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBc,eAAjB,CAAiCkB,2BAAjC,GAA+D,UAASV,GAAT,EAAcQ,MAAd,EAAsB;AACnF,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACoC,UAAP,EAAnC;AACA5C,QAAAA,GAAG,CAAC6C,UAAJ,CAAe9B,KAAf;AACA;;AACF;AACEP,QAAAA,MAAM,CAACU,SAAP;AACA;AAPF;AASD;;AACD,SAAOlB,GAAP;AACD,CAjBD;AAoBA;;;;;;AAIAxB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBc,eAAjB,CAAiCI,SAAjC,CAA2CuB,eAA3C,GAA6D,YAAW;AACtE,MAAIC,MAAM,GAAG,IAAIlD,IAAI,CAACmD,YAAT,EAAb;AACA7C,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBc,eAAjB,CAAiC8B,uBAAjC,CAAyD,IAAzD,EAA+DF,MAA/D;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA/C,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBc,eAAjB,CAAiC8B,uBAAjC,GAA2D,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACnF,MAAInB,CAAC,GAAGwB,SAAR;AACAxB,EAAAA,CAAC,GAAGuB,OAAO,CAACsB,UAAR,EAAJ;;AACA,MAAI7C,CAAC,KAAK,CAAV,EAAa;AACXmB,IAAAA,MAAM,CAAC2B,WAAP,CACE,CADF,EAEE9C,CAFF;AAID;AACF,CATD;AAYA;;;;;;AAIAzB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBc,eAAjB,CAAiCI,SAAjC,CAA2CkD,UAA3C,GAAwD,YAAW;AACjE;AAAO;AAAuB5E,IAAAA,IAAI,CAACW,OAAL,CAAauB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,CAFD;AAKA;;;;;;AAIA5B,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBc,eAAjB,CAAiCI,SAAjC,CAA2CiD,UAA3C,GAAwD,UAAS9B,KAAT,EAAgB;AACtE,SAAO7C,IAAI,CAACW,OAAL,CAAamE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCjC,KAAxC,CAAP;AACD,CAFD;;AAQA,IAAI7C,IAAI,CAACW,OAAL,CAAac,kBAAjB,EAAqC;AACrC;;;;;;;;;;;;AAYAnB,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAAjB,CAAgCG,SAAhC,CAA0CC,QAA1C,GAAqD,UAASC,mBAAT,EAA8B;AACjF,WAAOtB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAAjB,CAAgCI,QAAhC,CAAyCC,mBAAzC,EAA8D,IAA9D,CAAP;AACD,GAFD;AAKA;;;;;;;;;;;AASAtB,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAAjB,CAAgCI,QAAhC,GAA2C,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACxE,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACX+C,MAAAA,IAAI,EAAE/E,IAAI,CAACW,OAAL,CAAauB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CADK;AAEXkD,MAAAA,EAAE,EAAEhF,IAAI,CAACW,OAAL,CAAauB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAFO;AAGXmD,MAAAA,MAAM,EAAEjF,IAAI,CAACW,OAAL,CAAauB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC;AAHG,KAAb;;AAMA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACG,oBAAJ,GAA2BL,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAXD;AAYC;AAGD;;;;;;;AAKA1B,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAAjB,CAAgCa,iBAAhC,GAAoD,UAASC,KAAT,EAAgB;AAClE,MAAIC,MAAM,GAAG,IAAItC,IAAI,CAACuC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIP,GAAG,GAAG,IAAIxB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAArB,EAAV;AACA,SAAOjB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAAjB,CAAgCiB,2BAAhC,CAA4DV,GAA5D,EAAiEQ,MAAjE,CAAP;AACD,CAJD;AAOA;;;;;;;;;AAOAhC,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAAjB,CAAgCiB,2BAAhC,GAA8D,UAASV,GAAT,EAAcQ,MAAd,EAAsB;AAClF,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAhB,QAAAA,GAAG,CAACoD,OAAJ,CAAYrC,KAAZ;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAhB,QAAAA,GAAG,CAACqD,KAAJ,CAAUtC,KAAV;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAAC8C,SAAP,EAAnC;AACAtD,QAAAA,GAAG,CAACuD,SAAJ,CAAcxC,KAAd;AACA;;AACF;AACEP,QAAAA,MAAM,CAACU,SAAP;AACA;AAfF;AAiBD;;AACD,SAAOlB,GAAP;AACD,CAzBD;AA4BA;;;;;;AAIAxB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAAjB,CAAgCG,SAAhC,CAA0CuB,eAA1C,GAA4D,YAAW;AACrE,MAAIC,MAAM,GAAG,IAAIlD,IAAI,CAACmD,YAAT,EAAb;AACA7C,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAAjB,CAAgC6B,uBAAhC,CAAwD,IAAxD,EAA8DF,MAA9D;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA/C,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAAjB,CAAgC6B,uBAAhC,GAA0D,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAClF,MAAInB,CAAC,GAAGwB,SAAR;AACAxB,EAAAA,CAAC,GAAGuB,OAAO,CAACgC,OAAR,EAAJ;;AACA,MAAIvD,CAAC,CAAC0B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEE3B,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGuB,OAAO,CAACiC,KAAR,EAAJ;;AACA,MAAIxD,CAAC,CAAC0B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEE3B,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGuB,OAAO,CAACkC,SAAR,EAAJ;;AACA,MAAIzD,CAAC,KAAK,CAAV,EAAa;AACXmB,IAAAA,MAAM,CAACuC,UAAP,CACE,CADF,EAEE1D,CAFF;AAID;AACF,CAvBD;AA0BA;;;;;;AAIAzB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAAjB,CAAgCG,SAAhC,CAA0C4D,OAA1C,GAAoD,YAAW;AAC7D;AAAO;AAAuBtF,IAAAA,IAAI,CAACW,OAAL,CAAauB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;;;;AAIA5B,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAAjB,CAAgCG,SAAhC,CAA0CwD,OAA1C,GAAoD,UAASrC,KAAT,EAAgB;AAClE,SAAO7C,IAAI,CAACW,OAAL,CAAagD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2Cd,KAA3C,CAAP;AACD,CAFD;AAKA;;;;;;AAIAvC,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAAjB,CAAgCG,SAAhC,CAA0C6D,KAA1C,GAAkD,YAAW;AAC3D;AAAO;AAAuBvF,IAAAA,IAAI,CAACW,OAAL,CAAauB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;;;;;;AAIA5B,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAAjB,CAAgCG,SAAhC,CAA0CyD,KAA1C,GAAkD,UAAStC,KAAT,EAAgB;AAChE,SAAO7C,IAAI,CAACW,OAAL,CAAagD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2Cd,KAA3C,CAAP;AACD,CAFD;AAKA;;;;;;AAIAvC,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAAjB,CAAgCG,SAAhC,CAA0C8D,SAA1C,GAAsD,YAAW;AAC/D;AAAO;AAAuBxF,IAAAA,IAAI,CAACW,OAAL,CAAauB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,CAFD;AAKA;;;;;;AAIA5B,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBe,cAAjB,CAAgCG,SAAhC,CAA0C2D,SAA1C,GAAsD,UAASxC,KAAT,EAAgB;AACpE,SAAO7C,IAAI,CAACW,OAAL,CAAamE,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCjC,KAAxC,CAAP;AACD,CAFD;;AAQA,IAAI7C,IAAI,CAACW,OAAL,CAAac,kBAAjB,EAAqC;AACrC;;;;;;;;;;;;AAYAnB,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBgB,eAAjB,CAAiCE,SAAjC,CAA2CC,QAA3C,GAAsD,UAASC,mBAAT,EAA8B;AAClF,WAAOtB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBgB,eAAjB,CAAiCG,QAAjC,CAA0CC,mBAA1C,EAA+D,IAA/D,CAAP;AACD,GAFD;AAKA;;;;;;;;;;;AASAtB,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBgB,eAAjB,CAAiCG,QAAjC,GAA4C,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACzE,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG,EAAb;;AAIA,QAAIH,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACG,oBAAJ,GAA2BL,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GATD;AAUC;AAGD;;;;;;;AAKA1B,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBgB,eAAjB,CAAiCY,iBAAjC,GAAqD,UAASC,KAAT,EAAgB;AACnE,MAAIC,MAAM,GAAG,IAAItC,IAAI,CAACuC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIP,GAAG,GAAG,IAAIxB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBgB,eAArB,EAAV;AACA,SAAOlB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBgB,eAAjB,CAAiCgB,2BAAjC,CAA6DV,GAA7D,EAAkEQ,MAAlE,CAAP;AACD,CAJD;AAOA;;;;;;;;;AAOAhC,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBgB,eAAjB,CAAiCgB,2BAAjC,GAA+D,UAASV,GAAT,EAAcQ,MAAd,EAAsB;AACnF,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA;AACEL,QAAAA,MAAM,CAACU,SAAP;AACA;AAHF;AAKD;;AACD,SAAOlB,GAAP;AACD,CAbD;AAgBA;;;;;;AAIAxB,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBgB,eAAjB,CAAiCE,SAAjC,CAA2CuB,eAA3C,GAA6D,YAAW;AACtE,MAAIC,MAAM,GAAG,IAAIlD,IAAI,CAACmD,YAAT,EAAb;AACA7C,EAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBgB,eAAjB,CAAiC4B,uBAAjC,CAAyD,IAAzD,EAA+DF,MAA/D;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;;;;;;;;;AAOA/C,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBgB,eAAjB,CAAiC4B,uBAAjC,GAA2D,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACnF,MAAInB,CAAC,GAAGwB,SAAR;AACD,CAFD;;AAKArD,IAAI,CAACwF,MAAL,CAAYC,MAAZ,CAAmBC,OAAnB,EAA4BtF,KAAK,CAACC,MAAN,CAAaC,GAAzC","sourcesContent":["// source: wallet/rpc/rpc.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.wallet.rpc.BalanceRequest', null, global);\ngoog.exportSymbol('proto.wallet.rpc.BalanceResponse', null, global);\ngoog.exportSymbol('proto.wallet.rpc.ListRequest', null, global);\ngoog.exportSymbol('proto.wallet.rpc.ListResponse', null, global);\ngoog.exportSymbol('proto.wallet.rpc.NewAddressRequest', null, global);\ngoog.exportSymbol('proto.wallet.rpc.NewAddressResponse', null, global);\ngoog.exportSymbol('proto.wallet.rpc.SendFilRequest', null, global);\ngoog.exportSymbol('proto.wallet.rpc.SendFilResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.wallet.rpc.NewAddressRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.wallet.rpc.NewAddressRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.wallet.rpc.NewAddressRequest.displayName = 'proto.wallet.rpc.NewAddressRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.wallet.rpc.NewAddressResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.wallet.rpc.NewAddressResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.wallet.rpc.NewAddressResponse.displayName = 'proto.wallet.rpc.NewAddressResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.wallet.rpc.ListRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.wallet.rpc.ListRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.wallet.rpc.ListRequest.displayName = 'proto.wallet.rpc.ListRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.wallet.rpc.ListResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.wallet.rpc.ListResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.wallet.rpc.ListResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.wallet.rpc.ListResponse.displayName = 'proto.wallet.rpc.ListResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.wallet.rpc.BalanceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.wallet.rpc.BalanceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.wallet.rpc.BalanceRequest.displayName = 'proto.wallet.rpc.BalanceRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.wallet.rpc.BalanceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.wallet.rpc.BalanceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.wallet.rpc.BalanceResponse.displayName = 'proto.wallet.rpc.BalanceResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.wallet.rpc.SendFilRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.wallet.rpc.SendFilRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.wallet.rpc.SendFilRequest.displayName = 'proto.wallet.rpc.SendFilRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.wallet.rpc.SendFilResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.wallet.rpc.SendFilResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.wallet.rpc.SendFilResponse.displayName = 'proto.wallet.rpc.SendFilResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.wallet.rpc.NewAddressRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.wallet.rpc.NewAddressRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.wallet.rpc.NewAddressRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.wallet.rpc.NewAddressRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.wallet.rpc.NewAddressRequest}\n */\nproto.wallet.rpc.NewAddressRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.wallet.rpc.NewAddressRequest;\n  return proto.wallet.rpc.NewAddressRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.wallet.rpc.NewAddressRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.wallet.rpc.NewAddressRequest}\n */\nproto.wallet.rpc.NewAddressRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.wallet.rpc.NewAddressRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.wallet.rpc.NewAddressRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.wallet.rpc.NewAddressRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.wallet.rpc.NewAddressRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string type = 1;\n * @return {string}\n */\nproto.wallet.rpc.NewAddressRequest.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.wallet.rpc.NewAddressRequest} returns this\n */\nproto.wallet.rpc.NewAddressRequest.prototype.setType = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.wallet.rpc.NewAddressResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.wallet.rpc.NewAddressResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.wallet.rpc.NewAddressResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.wallet.rpc.NewAddressResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.wallet.rpc.NewAddressResponse}\n */\nproto.wallet.rpc.NewAddressResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.wallet.rpc.NewAddressResponse;\n  return proto.wallet.rpc.NewAddressResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.wallet.rpc.NewAddressResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.wallet.rpc.NewAddressResponse}\n */\nproto.wallet.rpc.NewAddressResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.wallet.rpc.NewAddressResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.wallet.rpc.NewAddressResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.wallet.rpc.NewAddressResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.wallet.rpc.NewAddressResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.wallet.rpc.NewAddressResponse.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.wallet.rpc.NewAddressResponse} returns this\n */\nproto.wallet.rpc.NewAddressResponse.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.wallet.rpc.ListRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.wallet.rpc.ListRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.wallet.rpc.ListRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.wallet.rpc.ListRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.wallet.rpc.ListRequest}\n */\nproto.wallet.rpc.ListRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.wallet.rpc.ListRequest;\n  return proto.wallet.rpc.ListRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.wallet.rpc.ListRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.wallet.rpc.ListRequest}\n */\nproto.wallet.rpc.ListRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.wallet.rpc.ListRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.wallet.rpc.ListRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.wallet.rpc.ListRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.wallet.rpc.ListRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string type = 1;\n * @return {string}\n */\nproto.wallet.rpc.ListRequest.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.wallet.rpc.ListRequest} returns this\n */\nproto.wallet.rpc.ListRequest.prototype.setType = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.wallet.rpc.ListResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.wallet.rpc.ListResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.wallet.rpc.ListResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.wallet.rpc.ListResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.wallet.rpc.ListResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.wallet.rpc.ListResponse}\n */\nproto.wallet.rpc.ListResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.wallet.rpc.ListResponse;\n  return proto.wallet.rpc.ListResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.wallet.rpc.ListResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.wallet.rpc.ListResponse}\n */\nproto.wallet.rpc.ListResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addAddresses(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.wallet.rpc.ListResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.wallet.rpc.ListResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.wallet.rpc.ListResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.wallet.rpc.ListResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressesList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated string addresses = 1;\n * @return {!Array<string>}\n */\nproto.wallet.rpc.ListResponse.prototype.getAddressesList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.wallet.rpc.ListResponse} returns this\n */\nproto.wallet.rpc.ListResponse.prototype.setAddressesList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.wallet.rpc.ListResponse} returns this\n */\nproto.wallet.rpc.ListResponse.prototype.addAddresses = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.wallet.rpc.ListResponse} returns this\n */\nproto.wallet.rpc.ListResponse.prototype.clearAddressesList = function() {\n  return this.setAddressesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.wallet.rpc.BalanceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.wallet.rpc.BalanceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.wallet.rpc.BalanceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.wallet.rpc.BalanceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.wallet.rpc.BalanceRequest}\n */\nproto.wallet.rpc.BalanceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.wallet.rpc.BalanceRequest;\n  return proto.wallet.rpc.BalanceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.wallet.rpc.BalanceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.wallet.rpc.BalanceRequest}\n */\nproto.wallet.rpc.BalanceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.wallet.rpc.BalanceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.wallet.rpc.BalanceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.wallet.rpc.BalanceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.wallet.rpc.BalanceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.wallet.rpc.BalanceRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.wallet.rpc.BalanceRequest} returns this\n */\nproto.wallet.rpc.BalanceRequest.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.wallet.rpc.BalanceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.wallet.rpc.BalanceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.wallet.rpc.BalanceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.wallet.rpc.BalanceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    balance: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.wallet.rpc.BalanceResponse}\n */\nproto.wallet.rpc.BalanceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.wallet.rpc.BalanceResponse;\n  return proto.wallet.rpc.BalanceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.wallet.rpc.BalanceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.wallet.rpc.BalanceResponse}\n */\nproto.wallet.rpc.BalanceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBalance(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.wallet.rpc.BalanceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.wallet.rpc.BalanceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.wallet.rpc.BalanceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.wallet.rpc.BalanceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBalance();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 balance = 1;\n * @return {number}\n */\nproto.wallet.rpc.BalanceResponse.prototype.getBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.wallet.rpc.BalanceResponse} returns this\n */\nproto.wallet.rpc.BalanceResponse.prototype.setBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.wallet.rpc.SendFilRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.wallet.rpc.SendFilRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.wallet.rpc.SendFilRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.wallet.rpc.SendFilRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    from: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    to: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    amount: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.wallet.rpc.SendFilRequest}\n */\nproto.wallet.rpc.SendFilRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.wallet.rpc.SendFilRequest;\n  return proto.wallet.rpc.SendFilRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.wallet.rpc.SendFilRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.wallet.rpc.SendFilRequest}\n */\nproto.wallet.rpc.SendFilRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFrom(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTo(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.wallet.rpc.SendFilRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.wallet.rpc.SendFilRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.wallet.rpc.SendFilRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.wallet.rpc.SendFilRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrom();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getTo();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string from = 1;\n * @return {string}\n */\nproto.wallet.rpc.SendFilRequest.prototype.getFrom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.wallet.rpc.SendFilRequest} returns this\n */\nproto.wallet.rpc.SendFilRequest.prototype.setFrom = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string to = 2;\n * @return {string}\n */\nproto.wallet.rpc.SendFilRequest.prototype.getTo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.wallet.rpc.SendFilRequest} returns this\n */\nproto.wallet.rpc.SendFilRequest.prototype.setTo = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int64 amount = 3;\n * @return {number}\n */\nproto.wallet.rpc.SendFilRequest.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.wallet.rpc.SendFilRequest} returns this\n */\nproto.wallet.rpc.SendFilRequest.prototype.setAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.wallet.rpc.SendFilResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.wallet.rpc.SendFilResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.wallet.rpc.SendFilResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.wallet.rpc.SendFilResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.wallet.rpc.SendFilResponse}\n */\nproto.wallet.rpc.SendFilResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.wallet.rpc.SendFilResponse;\n  return proto.wallet.rpc.SendFilResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.wallet.rpc.SendFilResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.wallet.rpc.SendFilResponse}\n */\nproto.wallet.rpc.SendFilResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.wallet.rpc.SendFilResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.wallet.rpc.SendFilResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.wallet.rpc.SendFilResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.wallet.rpc.SendFilResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\ngoog.object.extend(exports, proto.wallet.rpc);\n"]},"metadata":{},"sourceType":"script"}