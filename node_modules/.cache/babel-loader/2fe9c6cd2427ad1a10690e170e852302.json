{"ast":null,"code":"// package: threads.pb\n// file: threads.proto\nvar threads_pb = require(\"./threads_pb\");\n\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar API = function () {\n  function API() {}\n\n  API.serviceName = \"threads.pb.API\";\n  return API;\n}();\n\nAPI.GetToken = {\n  methodName: \"GetToken\",\n  service: API,\n  requestStream: true,\n  responseStream: true,\n  requestType: threads_pb.GetTokenRequest,\n  responseType: threads_pb.GetTokenReply\n};\nAPI.NewDB = {\n  methodName: \"NewDB\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.NewDBRequest,\n  responseType: threads_pb.NewDBReply\n};\nAPI.NewDBFromAddr = {\n  methodName: \"NewDBFromAddr\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.NewDBFromAddrRequest,\n  responseType: threads_pb.NewDBReply\n};\nAPI.ListDBs = {\n  methodName: \"ListDBs\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.ListDBsRequest,\n  responseType: threads_pb.ListDBsReply\n};\nAPI.GetDBInfo = {\n  methodName: \"GetDBInfo\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.GetDBInfoRequest,\n  responseType: threads_pb.GetDBInfoReply\n};\nAPI.DeleteDB = {\n  methodName: \"DeleteDB\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.DeleteDBRequest,\n  responseType: threads_pb.DeleteDBReply\n};\nAPI.NewCollection = {\n  methodName: \"NewCollection\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.NewCollectionRequest,\n  responseType: threads_pb.NewCollectionReply\n};\nAPI.UpdateCollection = {\n  methodName: \"UpdateCollection\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.UpdateCollectionRequest,\n  responseType: threads_pb.UpdateCollectionReply\n};\nAPI.DeleteCollection = {\n  methodName: \"DeleteCollection\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.DeleteCollectionRequest,\n  responseType: threads_pb.DeleteCollectionReply\n};\nAPI.GetCollectionInfo = {\n  methodName: \"GetCollectionInfo\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.GetCollectionInfoRequest,\n  responseType: threads_pb.GetCollectionInfoReply\n};\nAPI.GetCollectionIndexes = {\n  methodName: \"GetCollectionIndexes\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.GetCollectionIndexesRequest,\n  responseType: threads_pb.GetCollectionIndexesReply\n};\nAPI.ListCollections = {\n  methodName: \"ListCollections\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.ListCollectionsRequest,\n  responseType: threads_pb.ListCollectionsReply\n};\nAPI.Create = {\n  methodName: \"Create\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.CreateRequest,\n  responseType: threads_pb.CreateReply\n};\nAPI.Verify = {\n  methodName: \"Verify\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.VerifyRequest,\n  responseType: threads_pb.VerifyReply\n};\nAPI.Save = {\n  methodName: \"Save\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.SaveRequest,\n  responseType: threads_pb.SaveReply\n};\nAPI.Delete = {\n  methodName: \"Delete\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.DeleteRequest,\n  responseType: threads_pb.DeleteReply\n};\nAPI.Has = {\n  methodName: \"Has\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.HasRequest,\n  responseType: threads_pb.HasReply\n};\nAPI.Find = {\n  methodName: \"Find\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.FindRequest,\n  responseType: threads_pb.FindReply\n};\nAPI.FindByID = {\n  methodName: \"FindByID\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.FindByIDRequest,\n  responseType: threads_pb.FindByIDReply\n};\nAPI.ReadTransaction = {\n  methodName: \"ReadTransaction\",\n  service: API,\n  requestStream: true,\n  responseStream: true,\n  requestType: threads_pb.ReadTransactionRequest,\n  responseType: threads_pb.ReadTransactionReply\n};\nAPI.WriteTransaction = {\n  methodName: \"WriteTransaction\",\n  service: API,\n  requestStream: true,\n  responseStream: true,\n  requestType: threads_pb.WriteTransactionRequest,\n  responseType: threads_pb.WriteTransactionReply\n};\nAPI.Listen = {\n  methodName: \"Listen\",\n  service: API,\n  requestStream: false,\n  responseStream: true,\n  requestType: threads_pb.ListenRequest,\n  responseType: threads_pb.ListenReply\n};\nexports.API = API;\n\nfunction APIClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nAPIClient.prototype.getToken = function getToken(metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.client(API.GetToken, {\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport\n  });\n  client.onEnd(function (status, statusMessage, trailers) {\n    listeners.status.forEach(function (handler) {\n      handler({\n        code: status,\n        details: statusMessage,\n        metadata: trailers\n      });\n    });\n    listeners.end.forEach(function (handler) {\n      handler({\n        code: status,\n        details: statusMessage,\n        metadata: trailers\n      });\n    });\n    listeners = null;\n  });\n  client.onMessage(function (message) {\n    listeners.data.forEach(function (handler) {\n      handler(message);\n    });\n  });\n  client.start(metadata);\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    write: function (requestMessage) {\n      client.send(requestMessage);\n      return this;\n    },\n    end: function () {\n      client.finishSend();\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.newDB = function newDB(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.NewDB, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.newDBFromAddr = function newDBFromAddr(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.NewDBFromAddr, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.listDBs = function listDBs(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.ListDBs, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.getDBInfo = function getDBInfo(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.GetDBInfo, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.deleteDB = function deleteDB(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.DeleteDB, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.newCollection = function newCollection(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.NewCollection, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.updateCollection = function updateCollection(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.UpdateCollection, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.deleteCollection = function deleteCollection(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.DeleteCollection, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.getCollectionInfo = function getCollectionInfo(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.GetCollectionInfo, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.getCollectionIndexes = function getCollectionIndexes(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.GetCollectionIndexes, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.listCollections = function listCollections(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.ListCollections, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.create = function create(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.Create, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.verify = function verify(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.Verify, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.save = function save(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.Save, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.delete = function pb_delete(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.Delete, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.has = function has(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.Has, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.find = function find(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.Find, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.findByID = function findByID(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(API.FindByID, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.readTransaction = function readTransaction(metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.client(API.ReadTransaction, {\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport\n  });\n  client.onEnd(function (status, statusMessage, trailers) {\n    listeners.status.forEach(function (handler) {\n      handler({\n        code: status,\n        details: statusMessage,\n        metadata: trailers\n      });\n    });\n    listeners.end.forEach(function (handler) {\n      handler({\n        code: status,\n        details: statusMessage,\n        metadata: trailers\n      });\n    });\n    listeners = null;\n  });\n  client.onMessage(function (message) {\n    listeners.data.forEach(function (handler) {\n      handler(message);\n    });\n  });\n  client.start(metadata);\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    write: function (requestMessage) {\n      client.send(requestMessage);\n      return this;\n    },\n    end: function () {\n      client.finishSend();\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.writeTransaction = function writeTransaction(metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.client(API.WriteTransaction, {\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport\n  });\n  client.onEnd(function (status, statusMessage, trailers) {\n    listeners.status.forEach(function (handler) {\n      handler({\n        code: status,\n        details: statusMessage,\n        metadata: trailers\n      });\n    });\n    listeners.end.forEach(function (handler) {\n      handler({\n        code: status,\n        details: statusMessage,\n        metadata: trailers\n      });\n    });\n    listeners = null;\n  });\n  client.onMessage(function (message) {\n    listeners.data.forEach(function (handler) {\n      handler(message);\n    });\n  });\n  client.start(metadata);\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    write: function (requestMessage) {\n      client.send(requestMessage);\n      return this;\n    },\n    end: function () {\n      client.finishSend();\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.listen = function listen(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(API.Listen, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({\n          code: status,\n          details: statusMessage,\n          metadata: trailers\n        });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({\n          code: status,\n          details: statusMessage,\n          metadata: trailers\n        });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nexports.APIClient = APIClient;","map":{"version":3,"sources":["/Users/nassarhayat/apps/textiletable/dobby/node_modules/@textile/threads-client-grpc/threads_pb_service.js"],"names":["threads_pb","require","grpc","API","serviceName","GetToken","methodName","service","requestStream","responseStream","requestType","GetTokenRequest","responseType","GetTokenReply","NewDB","NewDBRequest","NewDBReply","NewDBFromAddr","NewDBFromAddrRequest","ListDBs","ListDBsRequest","ListDBsReply","GetDBInfo","GetDBInfoRequest","GetDBInfoReply","DeleteDB","DeleteDBRequest","DeleteDBReply","NewCollection","NewCollectionRequest","NewCollectionReply","UpdateCollection","UpdateCollectionRequest","UpdateCollectionReply","DeleteCollection","DeleteCollectionRequest","DeleteCollectionReply","GetCollectionInfo","GetCollectionInfoRequest","GetCollectionInfoReply","GetCollectionIndexes","GetCollectionIndexesRequest","GetCollectionIndexesReply","ListCollections","ListCollectionsRequest","ListCollectionsReply","Create","CreateRequest","CreateReply","Verify","VerifyRequest","VerifyReply","Save","SaveRequest","SaveReply","Delete","DeleteRequest","DeleteReply","Has","HasRequest","HasReply","Find","FindRequest","FindReply","FindByID","FindByIDRequest","FindByIDReply","ReadTransaction","ReadTransactionRequest","ReadTransactionReply","WriteTransaction","WriteTransactionRequest","WriteTransactionReply","Listen","ListenRequest","ListenReply","exports","APIClient","serviceHost","options","prototype","getToken","metadata","listeners","data","end","status","client","host","transport","onEnd","statusMessage","trailers","forEach","handler","code","details","onMessage","message","start","on","type","push","write","requestMessage","send","finishSend","cancel","close","newDB","callback","arguments","length","unary","request","debug","response","Code","OK","err","Error","newDBFromAddr","listDBs","getDBInfo","deleteDB","newCollection","updateCollection","deleteCollection","getCollectionInfo","getCollectionIndexes","listCollections","create","verify","save","delete","pb_delete","has","find","findByID","readTransaction","writeTransaction","listen","invoke","responseMessage"],"mappings":"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","sourcesContent":["// package: threads.pb\n// file: threads.proto\n\nvar threads_pb = require(\"./threads_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar API = (function () {\n  function API() {}\n  API.serviceName = \"threads.pb.API\";\n  return API;\n}());\n\nAPI.GetToken = {\n  methodName: \"GetToken\",\n  service: API,\n  requestStream: true,\n  responseStream: true,\n  requestType: threads_pb.GetTokenRequest,\n  responseType: threads_pb.GetTokenReply\n};\n\nAPI.NewDB = {\n  methodName: \"NewDB\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.NewDBRequest,\n  responseType: threads_pb.NewDBReply\n};\n\nAPI.NewDBFromAddr = {\n  methodName: \"NewDBFromAddr\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.NewDBFromAddrRequest,\n  responseType: threads_pb.NewDBReply\n};\n\nAPI.ListDBs = {\n  methodName: \"ListDBs\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.ListDBsRequest,\n  responseType: threads_pb.ListDBsReply\n};\n\nAPI.GetDBInfo = {\n  methodName: \"GetDBInfo\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.GetDBInfoRequest,\n  responseType: threads_pb.GetDBInfoReply\n};\n\nAPI.DeleteDB = {\n  methodName: \"DeleteDB\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.DeleteDBRequest,\n  responseType: threads_pb.DeleteDBReply\n};\n\nAPI.NewCollection = {\n  methodName: \"NewCollection\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.NewCollectionRequest,\n  responseType: threads_pb.NewCollectionReply\n};\n\nAPI.UpdateCollection = {\n  methodName: \"UpdateCollection\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.UpdateCollectionRequest,\n  responseType: threads_pb.UpdateCollectionReply\n};\n\nAPI.DeleteCollection = {\n  methodName: \"DeleteCollection\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.DeleteCollectionRequest,\n  responseType: threads_pb.DeleteCollectionReply\n};\n\nAPI.GetCollectionInfo = {\n  methodName: \"GetCollectionInfo\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.GetCollectionInfoRequest,\n  responseType: threads_pb.GetCollectionInfoReply\n};\n\nAPI.GetCollectionIndexes = {\n  methodName: \"GetCollectionIndexes\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.GetCollectionIndexesRequest,\n  responseType: threads_pb.GetCollectionIndexesReply\n};\n\nAPI.ListCollections = {\n  methodName: \"ListCollections\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.ListCollectionsRequest,\n  responseType: threads_pb.ListCollectionsReply\n};\n\nAPI.Create = {\n  methodName: \"Create\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.CreateRequest,\n  responseType: threads_pb.CreateReply\n};\n\nAPI.Verify = {\n  methodName: \"Verify\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.VerifyRequest,\n  responseType: threads_pb.VerifyReply\n};\n\nAPI.Save = {\n  methodName: \"Save\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.SaveRequest,\n  responseType: threads_pb.SaveReply\n};\n\nAPI.Delete = {\n  methodName: \"Delete\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.DeleteRequest,\n  responseType: threads_pb.DeleteReply\n};\n\nAPI.Has = {\n  methodName: \"Has\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.HasRequest,\n  responseType: threads_pb.HasReply\n};\n\nAPI.Find = {\n  methodName: \"Find\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.FindRequest,\n  responseType: threads_pb.FindReply\n};\n\nAPI.FindByID = {\n  methodName: \"FindByID\",\n  service: API,\n  requestStream: false,\n  responseStream: false,\n  requestType: threads_pb.FindByIDRequest,\n  responseType: threads_pb.FindByIDReply\n};\n\nAPI.ReadTransaction = {\n  methodName: \"ReadTransaction\",\n  service: API,\n  requestStream: true,\n  responseStream: true,\n  requestType: threads_pb.ReadTransactionRequest,\n  responseType: threads_pb.ReadTransactionReply\n};\n\nAPI.WriteTransaction = {\n  methodName: \"WriteTransaction\",\n  service: API,\n  requestStream: true,\n  responseStream: true,\n  requestType: threads_pb.WriteTransactionRequest,\n  responseType: threads_pb.WriteTransactionReply\n};\n\nAPI.Listen = {\n  methodName: \"Listen\",\n  service: API,\n  requestStream: false,\n  responseStream: true,\n  requestType: threads_pb.ListenRequest,\n  responseType: threads_pb.ListenReply\n};\n\nexports.API = API;\n\nfunction APIClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nAPIClient.prototype.getToken = function getToken(metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.client(API.GetToken, {\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport\n  });\n  client.onEnd(function (status, statusMessage, trailers) {\n    listeners.status.forEach(function (handler) {\n      handler({ code: status, details: statusMessage, metadata: trailers });\n    });\n    listeners.end.forEach(function (handler) {\n      handler({ code: status, details: statusMessage, metadata: trailers });\n    });\n    listeners = null;\n  });\n  client.onMessage(function (message) {\n    listeners.data.forEach(function (handler) {\n      handler(message);\n    })\n  });\n  client.start(metadata);\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    write: function (requestMessage) {\n      client.send(requestMessage);\n      return this;\n    },\n    end: function () {\n      client.finishSend();\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.newDB = function newDB(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.NewDB, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.newDBFromAddr = function newDBFromAddr(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.NewDBFromAddr, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.listDBs = function listDBs(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.ListDBs, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.getDBInfo = function getDBInfo(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.GetDBInfo, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.deleteDB = function deleteDB(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.DeleteDB, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.newCollection = function newCollection(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.NewCollection, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.updateCollection = function updateCollection(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.UpdateCollection, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.deleteCollection = function deleteCollection(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.DeleteCollection, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.getCollectionInfo = function getCollectionInfo(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.GetCollectionInfo, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.getCollectionIndexes = function getCollectionIndexes(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.GetCollectionIndexes, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.listCollections = function listCollections(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.ListCollections, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.create = function create(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.Create, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.verify = function verify(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.Verify, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.save = function save(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.Save, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.delete = function pb_delete(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.Delete, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.has = function has(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.Has, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.find = function find(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.Find, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.findByID = function findByID(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(API.FindByID, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.readTransaction = function readTransaction(metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.client(API.ReadTransaction, {\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport\n  });\n  client.onEnd(function (status, statusMessage, trailers) {\n    listeners.status.forEach(function (handler) {\n      handler({ code: status, details: statusMessage, metadata: trailers });\n    });\n    listeners.end.forEach(function (handler) {\n      handler({ code: status, details: statusMessage, metadata: trailers });\n    });\n    listeners = null;\n  });\n  client.onMessage(function (message) {\n    listeners.data.forEach(function (handler) {\n      handler(message);\n    })\n  });\n  client.start(metadata);\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    write: function (requestMessage) {\n      client.send(requestMessage);\n      return this;\n    },\n    end: function () {\n      client.finishSend();\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.writeTransaction = function writeTransaction(metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.client(API.WriteTransaction, {\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport\n  });\n  client.onEnd(function (status, statusMessage, trailers) {\n    listeners.status.forEach(function (handler) {\n      handler({ code: status, details: statusMessage, metadata: trailers });\n    });\n    listeners.end.forEach(function (handler) {\n      handler({ code: status, details: statusMessage, metadata: trailers });\n    });\n    listeners = null;\n  });\n  client.onMessage(function (message) {\n    listeners.data.forEach(function (handler) {\n      handler(message);\n    })\n  });\n  client.start(metadata);\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    write: function (requestMessage) {\n      client.send(requestMessage);\n      return this;\n    },\n    end: function () {\n      client.finishSend();\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nAPIClient.prototype.listen = function listen(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(API.Listen, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nexports.APIClient = APIClient;\n\n"]},"metadata":{},"sourceType":"script"}