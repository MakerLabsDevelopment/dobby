{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.watchMailbox = exports.deleteSentboxMessage = exports.deleteInboxMessage = exports.readInboxMessage = exports.listSentboxMessages = exports.listInboxMessages = exports.sendMessage = exports.getMailboxID = exports.setupMailbox = exports.getThread = exports.listThreads = exports.MailboxEventType = exports.Status = exports.MailConfig = void 0;\n\nconst loglevel_1 = __importDefault(require(\"loglevel\"));\n\nconst users_pb_1 = require(\"@textile/users-grpc/users_pb\");\n\nconst users_pb_service_1 = require(\"@textile/users-grpc/users_pb_service\");\n\nconst hub_threads_client_1 = require(\"@textile/hub-threads-client\");\n\nconst threads_id_1 = require(\"@textile/threads-id\");\n\nconst logger = loglevel_1.default.getLogger('users-api');\n/**\n * Global settings for mailboxes\n */\n\nexports.MailConfig = {\n  ThreadName: 'hubmail',\n  InboxCollectionName: 'inbox',\n  SentboxCollectionName: 'sentbox'\n};\n/**\n * The status query filter of an inbox message.\n */\n\nvar Status;\n\n(function (Status) {\n  Status[Status[\"ALL\"] = 0] = \"ALL\";\n  Status[Status[\"READ\"] = 1] = \"READ\";\n  Status[Status[\"UNREAD\"] = 2] = \"UNREAD\";\n})(Status = exports.Status || (exports.Status = {}));\n/**\n * The mailbox event type. CREATE, SAVE, or DELETE\n */\n\n\nvar MailboxEventType;\n\n(function (MailboxEventType) {\n  MailboxEventType[MailboxEventType[\"CREATE\"] = 0] = \"CREATE\";\n  MailboxEventType[MailboxEventType[\"SAVE\"] = 1] = \"SAVE\";\n  MailboxEventType[MailboxEventType[\"DELETE\"] = 2] = \"DELETE\";\n})(MailboxEventType = exports.MailboxEventType || (exports.MailboxEventType = {}));\n\nfunction convertMessageObj(input) {\n  return {\n    body: input.getBody_asU8(),\n    signature: input.getSignature_asU8(),\n    from: input.getFrom(),\n    id: input.getId(),\n    to: input.getTo(),\n    createdAt: input.getCreatedAt(),\n    readAt: input.getReadAt()\n  };\n}\n/**\n * @internal\n */\n\n\nfunction listThreads(api, ctx) {\n  return __awaiter(this, void 0, void 0, function* () {\n    logger.debug('list threads request');\n    const req = new users_pb_1.ListThreadsRequest();\n    const res = yield api.unary(users_pb_service_1.APIService.ListThreads, req, ctx);\n    return res.getListList().map(value => {\n      const thread = value.toObject();\n      const res = {\n        isDB: thread.isDb,\n        name: thread.name,\n        id: threads_id_1.ThreadID.fromBytes(Buffer.from(thread.id, 'base64'))\n      };\n      return res;\n    });\n  });\n}\n\nexports.listThreads = listThreads;\n/**\n * @internal\n */\n\nfunction getThread(api, name, ctx) {\n  return __awaiter(this, void 0, void 0, function* () {\n    logger.debug('get thread request');\n    const req = new users_pb_1.GetThreadRequest();\n    req.setName(name);\n    const res = yield api.unary(users_pb_service_1.APIService.GetThread, req, ctx);\n    const thread = res.toObject();\n    return {\n      isDB: thread.isDb,\n      name: thread.name,\n      id: threads_id_1.ThreadID.fromBytes(Buffer.from(thread.id, 'base64'))\n    };\n  });\n}\n\nexports.getThread = getThread;\n/**\n * @internal\n */\n\nfunction setupMailbox(api, ctx) {\n  return __awaiter(this, void 0, void 0, function* () {\n    logger.debug('setup mailbox request');\n    const req = new users_pb_1.SetupMailboxRequest();\n    const res = yield api.unary(users_pb_service_1.APIService.SetupMailbox, req, ctx);\n    const mailboxID = threads_id_1.ThreadID.fromBytes(Buffer.from(res.getMailboxId_asB64(), 'base64'));\n    return mailboxID.toString();\n  });\n}\n\nexports.setupMailbox = setupMailbox;\n/**\n * @internal\n */\n\nfunction getMailboxID(api, ctx) {\n  return __awaiter(this, void 0, void 0, function* () {\n    logger.debug('setup mailbox request');\n    const thread = yield getThread(api, exports.MailConfig.ThreadName, ctx);\n    return thread.id.toString();\n  });\n}\n\nexports.getMailboxID = getMailboxID;\n/**\n * @internal\n */\n\nfunction sendMessage(api, from, to, toBody, toSignature, fromBody, fromSignature, ctx) {\n  return __awaiter(this, void 0, void 0, function* () {\n    logger.debug('send message request');\n    const req = new users_pb_1.SendMessageRequest();\n    req.setTo(to);\n    req.setToBody(toBody);\n    req.setToSignature(toSignature);\n    req.setFromBody(fromBody);\n    req.setFromSignature(fromSignature);\n    const res = yield api.unary(users_pb_service_1.APIService.SendMessage, req, ctx);\n    return {\n      id: res.getId(),\n      createdAt: res.getCreatedAt(),\n      body: fromBody,\n      signature: fromSignature,\n      to,\n      from\n    };\n  });\n}\n\nexports.sendMessage = sendMessage;\n/**\n * @internal\n */\n\nfunction listInboxMessages(api, opts, ctx) {\n  return __awaiter(this, void 0, void 0, function* () {\n    logger.debug('list inbox message request');\n    const req = new users_pb_1.ListInboxMessagesRequest();\n    if (opts && opts.seek) req.setSeek(opts.seek);\n    if (opts && opts.limit) req.setLimit(opts.limit);\n    if (opts && opts.ascending) req.setAscending(opts.ascending);\n\n    if (opts && opts.status) {\n      switch (opts.status) {\n        case Status.READ:\n          req.setStatus(users_pb_1.ListInboxMessagesRequest.Status.STATUS_READ);\n\n        case Status.UNREAD:\n          req.setStatus(users_pb_1.ListInboxMessagesRequest.Status.STATUS_UNREAD);\n      }\n    }\n\n    const res = yield api.unary(users_pb_service_1.APIService.ListInboxMessages, req, ctx);\n    return res.getMessagesList().map(convertMessageObj);\n  });\n}\n\nexports.listInboxMessages = listInboxMessages;\n/**\n * @internal\n */\n\nfunction listSentboxMessages(api, opts, ctx) {\n  return __awaiter(this, void 0, void 0, function* () {\n    logger.debug('list sentbox message request');\n    const req = new users_pb_1.ListSentboxMessagesRequest();\n    if (opts && opts.seek) req.setSeek(opts.seek);\n    if (opts && opts.limit) req.setLimit(opts.limit);\n    if (opts && opts.ascending) req.setAscending(opts.ascending);\n    const res = yield api.unary(users_pb_service_1.APIService.ListSentboxMessages, req, ctx);\n    return res.getMessagesList().map(convertMessageObj);\n  });\n}\n\nexports.listSentboxMessages = listSentboxMessages;\n/**\n * @internal\n */\n\nfunction readInboxMessage(api, id, ctx) {\n  return __awaiter(this, void 0, void 0, function* () {\n    logger.debug('read inbox message request');\n    const req = new users_pb_1.ReadInboxMessageRequest();\n    req.setId(id);\n    const res = yield api.unary(users_pb_service_1.APIService.ReadInboxMessage, req, ctx);\n    return {\n      readAt: res.toObject().readAt\n    };\n  });\n}\n\nexports.readInboxMessage = readInboxMessage;\n/**\n * @internal\n */\n\nfunction deleteInboxMessage(api, id, ctx) {\n  return __awaiter(this, void 0, void 0, function* () {\n    logger.debug('delete inbox message request');\n    const req = new users_pb_1.DeleteInboxMessageRequest();\n    req.setId(id);\n    yield api.unary(users_pb_service_1.APIService.DeleteInboxMessage, req, ctx);\n    return;\n  });\n}\n\nexports.deleteInboxMessage = deleteInboxMessage;\n/**\n * @internal\n */\n\nfunction deleteSentboxMessage(api, id, ctx) {\n  return __awaiter(this, void 0, void 0, function* () {\n    logger.debug('delete sentbox message request');\n    const req = new users_pb_1.DeleteSentboxMessageRequest();\n    req.setId(id);\n    yield api.unary(users_pb_service_1.APIService.DeleteSentboxMessage, req, ctx);\n    return;\n  });\n}\n\nexports.deleteSentboxMessage = deleteSentboxMessage;\n/**\n * @internal\n */\n\nfunction watchMailbox(api, id, box, callback, ctx) {\n  logger.debug('new watch inbox request');\n  const client = new hub_threads_client_1.Client(ctx || api.context);\n  const threadID = threads_id_1.ThreadID.fromString(id);\n\n  const retype = (reply, err) => {\n    if (!reply) {\n      callback(reply, err);\n    } else {\n      const type = reply.action;\n      const result = {\n        type,\n        messageID: reply.instanceID\n      };\n      const instance = reply.instance;\n\n      if (instance) {\n        result.message = {\n          id: reply.instanceID,\n          from: instance.from,\n          to: instance.to,\n          body: new Uint8Array(Buffer.from(instance.body, 'base64')),\n          signature: new Uint8Array(Buffer.from(instance.signature, 'base64')),\n          createdAt: instance.created_at,\n          readAt: instance.read_at\n        };\n      }\n\n      callback(result);\n    }\n  };\n\n  const collectionName = box === 'inbox' ? exports.MailConfig.InboxCollectionName : exports.MailConfig.SentboxCollectionName;\n  return client.listen(threadID, [{\n    collectionName\n  }], retype);\n}\n\nexports.watchMailbox = watchMailbox;","map":{"version":3,"sources":["../../src/api/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.watchMailbox = exports.deleteSentboxMessage = exports.deleteInboxMessage = exports.readInboxMessage = exports.listSentboxMessages = exports.listInboxMessages = exports.sendMessage = exports.getMailboxID = exports.setupMailbox = exports.getThread = exports.listThreads = exports.MailboxEventType = exports.Status = exports.MailConfig = void 0;\nconst loglevel_1 = __importDefault(require(\"loglevel\"));\nconst users_pb_1 = require(\"@textile/users-grpc/users_pb\");\nconst users_pb_service_1 = require(\"@textile/users-grpc/users_pb_service\");\nconst hub_threads_client_1 = require(\"@textile/hub-threads-client\");\nconst threads_id_1 = require(\"@textile/threads-id\");\nconst logger = loglevel_1.default.getLogger('users-api');\n/**\n * Global settings for mailboxes\n */\nexports.MailConfig = {\n    ThreadName: 'hubmail',\n    InboxCollectionName: 'inbox',\n    SentboxCollectionName: 'sentbox',\n};\n/**\n * The status query filter of an inbox message.\n */\nvar Status;\n(function (Status) {\n    Status[Status[\"ALL\"] = 0] = \"ALL\";\n    Status[Status[\"READ\"] = 1] = \"READ\";\n    Status[Status[\"UNREAD\"] = 2] = \"UNREAD\";\n})(Status = exports.Status || (exports.Status = {}));\n/**\n * The mailbox event type. CREATE, SAVE, or DELETE\n */\nvar MailboxEventType;\n(function (MailboxEventType) {\n    MailboxEventType[MailboxEventType[\"CREATE\"] = 0] = \"CREATE\";\n    MailboxEventType[MailboxEventType[\"SAVE\"] = 1] = \"SAVE\";\n    MailboxEventType[MailboxEventType[\"DELETE\"] = 2] = \"DELETE\";\n})(MailboxEventType = exports.MailboxEventType || (exports.MailboxEventType = {}));\nfunction convertMessageObj(input) {\n    return {\n        body: input.getBody_asU8(),\n        signature: input.getSignature_asU8(),\n        from: input.getFrom(),\n        id: input.getId(),\n        to: input.getTo(),\n        createdAt: input.getCreatedAt(),\n        readAt: input.getReadAt(),\n    };\n}\n/**\n * @internal\n */\nfunction listThreads(api, ctx) {\n    return __awaiter(this, void 0, void 0, function* () {\n        logger.debug('list threads request');\n        const req = new users_pb_1.ListThreadsRequest();\n        const res = yield api.unary(users_pb_service_1.APIService.ListThreads, req, ctx);\n        return res.getListList().map((value) => {\n            const thread = value.toObject();\n            const res = {\n                isDB: thread.isDb,\n                name: thread.name,\n                id: threads_id_1.ThreadID.fromBytes(Buffer.from(thread.id, 'base64')),\n            };\n            return res;\n        });\n    });\n}\nexports.listThreads = listThreads;\n/**\n * @internal\n */\nfunction getThread(api, name, ctx) {\n    return __awaiter(this, void 0, void 0, function* () {\n        logger.debug('get thread request');\n        const req = new users_pb_1.GetThreadRequest();\n        req.setName(name);\n        const res = yield api.unary(users_pb_service_1.APIService.GetThread, req, ctx);\n        const thread = res.toObject();\n        return {\n            isDB: thread.isDb,\n            name: thread.name,\n            id: threads_id_1.ThreadID.fromBytes(Buffer.from(thread.id, 'base64')),\n        };\n    });\n}\nexports.getThread = getThread;\n/**\n * @internal\n */\nfunction setupMailbox(api, ctx) {\n    return __awaiter(this, void 0, void 0, function* () {\n        logger.debug('setup mailbox request');\n        const req = new users_pb_1.SetupMailboxRequest();\n        const res = yield api.unary(users_pb_service_1.APIService.SetupMailbox, req, ctx);\n        const mailboxID = threads_id_1.ThreadID.fromBytes(Buffer.from(res.getMailboxId_asB64(), 'base64'));\n        return mailboxID.toString();\n    });\n}\nexports.setupMailbox = setupMailbox;\n/**\n * @internal\n */\nfunction getMailboxID(api, ctx) {\n    return __awaiter(this, void 0, void 0, function* () {\n        logger.debug('setup mailbox request');\n        const thread = yield getThread(api, exports.MailConfig.ThreadName, ctx);\n        return thread.id.toString();\n    });\n}\nexports.getMailboxID = getMailboxID;\n/**\n * @internal\n */\nfunction sendMessage(api, from, to, toBody, toSignature, fromBody, fromSignature, ctx) {\n    return __awaiter(this, void 0, void 0, function* () {\n        logger.debug('send message request');\n        const req = new users_pb_1.SendMessageRequest();\n        req.setTo(to);\n        req.setToBody(toBody);\n        req.setToSignature(toSignature);\n        req.setFromBody(fromBody);\n        req.setFromSignature(fromSignature);\n        const res = yield api.unary(users_pb_service_1.APIService.SendMessage, req, ctx);\n        return {\n            id: res.getId(),\n            createdAt: res.getCreatedAt(),\n            body: fromBody,\n            signature: fromSignature,\n            to,\n            from,\n        };\n    });\n}\nexports.sendMessage = sendMessage;\n/**\n * @internal\n */\nfunction listInboxMessages(api, opts, ctx) {\n    return __awaiter(this, void 0, void 0, function* () {\n        logger.debug('list inbox message request');\n        const req = new users_pb_1.ListInboxMessagesRequest();\n        if (opts && opts.seek)\n            req.setSeek(opts.seek);\n        if (opts && opts.limit)\n            req.setLimit(opts.limit);\n        if (opts && opts.ascending)\n            req.setAscending(opts.ascending);\n        if (opts && opts.status) {\n            switch (opts.status) {\n                case Status.READ:\n                    req.setStatus(users_pb_1.ListInboxMessagesRequest.Status.STATUS_READ);\n                case Status.UNREAD:\n                    req.setStatus(users_pb_1.ListInboxMessagesRequest.Status.STATUS_UNREAD);\n            }\n        }\n        const res = yield api.unary(users_pb_service_1.APIService.ListInboxMessages, req, ctx);\n        return res.getMessagesList().map(convertMessageObj);\n    });\n}\nexports.listInboxMessages = listInboxMessages;\n/**\n * @internal\n */\nfunction listSentboxMessages(api, opts, ctx) {\n    return __awaiter(this, void 0, void 0, function* () {\n        logger.debug('list sentbox message request');\n        const req = new users_pb_1.ListSentboxMessagesRequest();\n        if (opts && opts.seek)\n            req.setSeek(opts.seek);\n        if (opts && opts.limit)\n            req.setLimit(opts.limit);\n        if (opts && opts.ascending)\n            req.setAscending(opts.ascending);\n        const res = yield api.unary(users_pb_service_1.APIService.ListSentboxMessages, req, ctx);\n        return res.getMessagesList().map(convertMessageObj);\n    });\n}\nexports.listSentboxMessages = listSentboxMessages;\n/**\n * @internal\n */\nfunction readInboxMessage(api, id, ctx) {\n    return __awaiter(this, void 0, void 0, function* () {\n        logger.debug('read inbox message request');\n        const req = new users_pb_1.ReadInboxMessageRequest();\n        req.setId(id);\n        const res = yield api.unary(users_pb_service_1.APIService.ReadInboxMessage, req, ctx);\n        return { readAt: res.toObject().readAt };\n    });\n}\nexports.readInboxMessage = readInboxMessage;\n/**\n * @internal\n */\nfunction deleteInboxMessage(api, id, ctx) {\n    return __awaiter(this, void 0, void 0, function* () {\n        logger.debug('delete inbox message request');\n        const req = new users_pb_1.DeleteInboxMessageRequest();\n        req.setId(id);\n        yield api.unary(users_pb_service_1.APIService.DeleteInboxMessage, req, ctx);\n        return;\n    });\n}\nexports.deleteInboxMessage = deleteInboxMessage;\n/**\n * @internal\n */\nfunction deleteSentboxMessage(api, id, ctx) {\n    return __awaiter(this, void 0, void 0, function* () {\n        logger.debug('delete sentbox message request');\n        const req = new users_pb_1.DeleteSentboxMessageRequest();\n        req.setId(id);\n        yield api.unary(users_pb_service_1.APIService.DeleteSentboxMessage, req, ctx);\n        return;\n    });\n}\nexports.deleteSentboxMessage = deleteSentboxMessage;\n/**\n * @internal\n */\nfunction watchMailbox(api, id, box, callback, ctx) {\n    logger.debug('new watch inbox request');\n    const client = new hub_threads_client_1.Client(ctx || api.context);\n    const threadID = threads_id_1.ThreadID.fromString(id);\n    const retype = (reply, err) => {\n        if (!reply) {\n            callback(reply, err);\n        }\n        else {\n            const type = reply.action;\n            const result = {\n                type,\n                messageID: reply.instanceID,\n            };\n            const instance = reply.instance;\n            if (instance) {\n                result.message = {\n                    id: reply.instanceID,\n                    from: instance.from,\n                    to: instance.to,\n                    body: new Uint8Array(Buffer.from(instance.body, 'base64')),\n                    signature: new Uint8Array(Buffer.from(instance.signature, 'base64')),\n                    createdAt: instance.created_at,\n                    readAt: instance.read_at,\n                };\n            }\n            callback(result);\n        }\n    };\n    const collectionName = box === 'inbox' ? exports.MailConfig.InboxCollectionName : exports.MailConfig.SentboxCollectionName;\n    return client.listen(threadID, [{ collectionName }], retype);\n}\nexports.watchMailbox = watchMailbox;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}