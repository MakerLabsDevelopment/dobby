{"ast":null,"code":"var _jsxFileName = \"/Users/nassarhayat/apps/textiletable/dobby/src/components/ThreadScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'redux-bundler-react';\nimport BaseScreen from './BaseScreen';\nimport { Button } from 'semantic-ui-react';\nimport Table from './table/Table';\nimport './ThreadScreen.css';\n\nconst ThreadScreen = ({\n  authClient,\n  collectionsList,\n  doCollectionsCreate,\n  doUpdateUrl,\n  routeParams\n}) => {\n  const [name, setName] = useState('');\n  const threadId = routeParams.threadId;\n  console.log(collectionsList, 'list');\n  useEffect(() => {\n    const setup = async () => {\n      if (collectionsList) {\n        doUpdateUrl(`/threads/${threadId}/${collectionsList[0].name}`);\n      }\n    };\n\n    setup();\n  }, [collectionsList, authClient]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, collectionsList && /*#__PURE__*/React.createElement(BaseScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"optionsRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, collectionsList.map((collection, index) => /*#__PURE__*/React.createElement(\"a\", {\n    key: index,\n    className: \"tableButton\",\n    href: `/threads/${threadId}/${collection.name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, collection.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"nameInput\",\n    placeholder: \"table name\",\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"ui primary button\",\n    onClick: () => doCollectionsCreate(name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"Create\"))), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default connect('doUpdateUrl', 'doThreadsCreate', 'doCollectionsCreate', 'selectCollectionsList', 'selectRouteParams', ThreadScreen);","map":{"version":3,"sources":["/Users/nassarhayat/apps/textiletable/dobby/src/components/ThreadScreen.tsx"],"names":["React","useState","useEffect","connect","BaseScreen","Button","Table","ThreadScreen","authClient","collectionsList","doCollectionsCreate","doUpdateUrl","routeParams","name","setName","threadId","console","log","setup","map","collection","index","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,oBAAP;;AAWA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,UADoB;AAEpBC,EAAAA,eAFoB;AAGpBC,EAAAA,mBAHoB;AAIpBC,EAAAA,WAJoB;AAKpBC,EAAAA;AALoB,CAAD,KAMC;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAMc,QAAQ,GAAGH,WAAW,CAACG,QAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,eAAZ,EAA6B,MAA7B;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,KAAK,GAAG,YAAY;AACxB,UAAIT,eAAJ,EAAqB;AACnBE,QAAAA,WAAW,CAAE,YAAWI,QAAS,IAAGN,eAAe,CAAC,CAAD,CAAf,CAAmBI,IAAK,EAAjD,CAAX;AACD;AACF,KAJD;;AAKAK,IAAAA,KAAK;AACN,GAPQ,EAON,CAACT,eAAD,EAAkBD,UAAlB,CAPM,CAAT;AASA,sBACE,0CACGC,eAAe,iBACd,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,eAAe,CAACU,GAAhB,CAAoB,CAACC,UAAD,EAAkBC,KAAlB,kBACnB;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,IAAI,EAAG,YAAWN,QAAS,IAAGK,UAAU,CAACP,IAAK,EAHhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGO,UAAU,CAACP,IALd,CADD,CADH,eAUE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,WAAjB;AAA6B,IAAA,WAAW,EAAC,YAAzC;AAAsD,IAAA,IAAI,EAAC,MAA3D;AAAkE,IAAA,KAAK,EAAEA,IAAzE;AAA+E,IAAA,QAAQ,EAAES,CAAC,IAAIR,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,OAAO,EAAE,MAAMd,mBAAmB,CAACG,IAAD,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAVF,CADF,eAgBE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CAFJ,CADF;AAwBD,CA3CD;;AA6CA,eAAeV,OAAO,CACpB,aADoB,EAEpB,iBAFoB,EAGpB,qBAHoB,EAIpB,uBAJoB,EAKpB,mBALoB,EAMpBI,YANoB,CAAtB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'redux-bundler-react'\nimport BaseScreen from './BaseScreen'\nimport { Button } from 'semantic-ui-react'\nimport Table from './table/Table'\nimport './ThreadScreen.css'\n\n\ninterface IThreadsScreen {\n  authClient: any\n  collectionsList: any\n  doCollectionsCreate: (name: string) => any\n  doUpdateUrl: (url: string) => any\n  routeParams: any\n}\n\nconst ThreadScreen = ({\n  authClient,\n  collectionsList,\n  doCollectionsCreate,\n  doUpdateUrl,\n  routeParams\n}: IThreadsScreen) => {\n  const [name, setName] = useState<string>('')\n  const threadId = routeParams.threadId\n  console.log(collectionsList, 'list')\n  useEffect(() => {\n    const setup = async () => {\n      if (collectionsList) {\n        doUpdateUrl(`/threads/${threadId}/${collectionsList[0].name}`)\n      }\n    }\n    setup()\n  }, [collectionsList, authClient])\n\n  return (\n    <>\n      {collectionsList && (\n        <BaseScreen>\n          <div className='optionsRow'>\n            {collectionsList.map((collection: any, index: number) => (\n              <a\n                key={index}\n                className='tableButton'\n                href={`/threads/${threadId}/${collection.name}`}\n              >\n                {collection.name}\n              </a>\n            ))}\n            <div className=\"inputContainer\">\n              <input className='nameInput' placeholder='table name' type='text' value={name} onChange={e => setName(e.target.value)}/>\n              <Button className='ui primary button' onClick={() => doCollectionsCreate(name)}>Create</Button>\n            </div>\n          </div>\n          <Table />\n        </BaseScreen>\n      )}\n    </>\n  )\n}\n\nexport default connect(\n  'doUpdateUrl',\n  'doThreadsCreate',\n  'doCollectionsCreate',\n  'selectCollectionsList',\n  'selectRouteParams',\n  ThreadScreen\n)\n"]},"metadata":{},"sourceType":"module"}