{"ast":null,"code":"// source: users.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.users.pb.DeleteMessageReply', null, global);\ngoog.exportSymbol('proto.users.pb.DeleteMessageRequest', null, global);\ngoog.exportSymbol('proto.users.pb.GetThreadReply', null, global);\ngoog.exportSymbol('proto.users.pb.GetThreadRequest', null, global);\ngoog.exportSymbol('proto.users.pb.ListInboxMessagesRequest', null, global);\ngoog.exportSymbol('proto.users.pb.ListInboxMessagesRequest.Status', null, global);\ngoog.exportSymbol('proto.users.pb.ListMessagesReply', null, global);\ngoog.exportSymbol('proto.users.pb.ListSentboxMessagesRequest', null, global);\ngoog.exportSymbol('proto.users.pb.ListThreadsReply', null, global);\ngoog.exportSymbol('proto.users.pb.ListThreadsRequest', null, global);\ngoog.exportSymbol('proto.users.pb.Message', null, global);\ngoog.exportSymbol('proto.users.pb.ReadInboxMessageReply', null, global);\ngoog.exportSymbol('proto.users.pb.ReadInboxMessageRequest', null, global);\ngoog.exportSymbol('proto.users.pb.SendMessageReply', null, global);\ngoog.exportSymbol('proto.users.pb.SendMessageRequest', null, global);\ngoog.exportSymbol('proto.users.pb.SetupMailboxReply', null, global);\ngoog.exportSymbol('proto.users.pb.SetupMailboxRequest', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.users.pb.ListThreadsRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.users.pb.ListThreadsRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.ListThreadsRequest.displayName = 'proto.users.pb.ListThreadsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.users.pb.ListThreadsReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.users.pb.ListThreadsReply.repeatedFields_, null);\n};\n\ngoog.inherits(proto.users.pb.ListThreadsReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.ListThreadsReply.displayName = 'proto.users.pb.ListThreadsReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.users.pb.GetThreadRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.users.pb.GetThreadRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.GetThreadRequest.displayName = 'proto.users.pb.GetThreadRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.users.pb.GetThreadReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.users.pb.GetThreadReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.GetThreadReply.displayName = 'proto.users.pb.GetThreadReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.users.pb.SetupMailboxRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.users.pb.SetupMailboxRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.SetupMailboxRequest.displayName = 'proto.users.pb.SetupMailboxRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.users.pb.SetupMailboxReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.users.pb.SetupMailboxReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.SetupMailboxReply.displayName = 'proto.users.pb.SetupMailboxReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.users.pb.Message = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.users.pb.Message, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.Message.displayName = 'proto.users.pb.Message';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.users.pb.SendMessageRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.users.pb.SendMessageRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.SendMessageRequest.displayName = 'proto.users.pb.SendMessageRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.users.pb.SendMessageReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.users.pb.SendMessageReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.SendMessageReply.displayName = 'proto.users.pb.SendMessageReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.users.pb.ListInboxMessagesRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.users.pb.ListInboxMessagesRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.ListInboxMessagesRequest.displayName = 'proto.users.pb.ListInboxMessagesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.users.pb.ListSentboxMessagesRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.users.pb.ListSentboxMessagesRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.ListSentboxMessagesRequest.displayName = 'proto.users.pb.ListSentboxMessagesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.users.pb.ListMessagesReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.users.pb.ListMessagesReply.repeatedFields_, null);\n};\n\ngoog.inherits(proto.users.pb.ListMessagesReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.ListMessagesReply.displayName = 'proto.users.pb.ListMessagesReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.users.pb.ReadInboxMessageRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.users.pb.ReadInboxMessageRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.ReadInboxMessageRequest.displayName = 'proto.users.pb.ReadInboxMessageRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.users.pb.ReadInboxMessageReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.users.pb.ReadInboxMessageReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.ReadInboxMessageReply.displayName = 'proto.users.pb.ReadInboxMessageReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.users.pb.DeleteMessageRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.users.pb.DeleteMessageRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.DeleteMessageRequest.displayName = 'proto.users.pb.DeleteMessageRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.users.pb.DeleteMessageReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.users.pb.DeleteMessageReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.DeleteMessageReply.displayName = 'proto.users.pb.DeleteMessageReply';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.users.pb.ListThreadsRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.users.pb.ListThreadsRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.users.pb.ListThreadsRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.users.pb.ListThreadsRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.ListThreadsRequest}\n */\n\n\nproto.users.pb.ListThreadsRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.ListThreadsRequest();\n  return proto.users.pb.ListThreadsRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.ListThreadsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.ListThreadsRequest}\n */\n\n\nproto.users.pb.ListThreadsRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.ListThreadsRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.ListThreadsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.ListThreadsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.users.pb.ListThreadsRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.users.pb.ListThreadsReply.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.users.pb.ListThreadsReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.users.pb.ListThreadsReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.users.pb.ListThreadsReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.users.pb.ListThreadsReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      listList: jspb.Message.toObjectList(msg.getListList(), proto.users.pb.GetThreadReply.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.ListThreadsReply}\n */\n\n\nproto.users.pb.ListThreadsReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.ListThreadsReply();\n  return proto.users.pb.ListThreadsReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.ListThreadsReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.ListThreadsReply}\n */\n\n\nproto.users.pb.ListThreadsReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.users.pb.GetThreadReply();\n        reader.readMessage(value, proto.users.pb.GetThreadReply.deserializeBinaryFromReader);\n        msg.addList(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.ListThreadsReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.ListThreadsReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.ListThreadsReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.users.pb.ListThreadsReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getListList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.users.pb.GetThreadReply.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated GetThreadReply list = 1;\n * @return {!Array<!proto.users.pb.GetThreadReply>}\n */\n\n\nproto.users.pb.ListThreadsReply.prototype.getListList = function () {\n  return (\n    /** @type{!Array<!proto.users.pb.GetThreadReply>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.users.pb.GetThreadReply, 1)\n  );\n};\n/**\n * @param {!Array<!proto.users.pb.GetThreadReply>} value\n * @return {!proto.users.pb.ListThreadsReply} returns this\n*/\n\n\nproto.users.pb.ListThreadsReply.prototype.setListList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.users.pb.GetThreadReply=} opt_value\n * @param {number=} opt_index\n * @return {!proto.users.pb.GetThreadReply}\n */\n\n\nproto.users.pb.ListThreadsReply.prototype.addList = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.users.pb.GetThreadReply, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.users.pb.ListThreadsReply} returns this\n */\n\n\nproto.users.pb.ListThreadsReply.prototype.clearListList = function () {\n  return this.setListList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.users.pb.GetThreadRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.users.pb.GetThreadRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.users.pb.GetThreadRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.users.pb.GetThreadRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      name: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.GetThreadRequest}\n */\n\n\nproto.users.pb.GetThreadRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.GetThreadRequest();\n  return proto.users.pb.GetThreadRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.GetThreadRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.GetThreadRequest}\n */\n\n\nproto.users.pb.GetThreadRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.GetThreadRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.GetThreadRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.GetThreadRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.users.pb.GetThreadRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string name = 1;\n * @return {string}\n */\n\n\nproto.users.pb.GetThreadRequest.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.users.pb.GetThreadRequest} returns this\n */\n\n\nproto.users.pb.GetThreadRequest.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.users.pb.GetThreadReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.users.pb.GetThreadReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.users.pb.GetThreadReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.users.pb.GetThreadReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: msg.getId_asB64(),\n      name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      isdb: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.GetThreadReply}\n */\n\n\nproto.users.pb.GetThreadReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.GetThreadReply();\n  return proto.users.pb.GetThreadReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.GetThreadReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.GetThreadReply}\n */\n\n\nproto.users.pb.GetThreadReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setIsdb(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.GetThreadReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.GetThreadReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.GetThreadReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.users.pb.GetThreadReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getIsdb();\n\n  if (f) {\n    writer.writeBool(3, f);\n  }\n};\n/**\n * optional bytes ID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.users.pb.GetThreadReply.prototype.getId = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes ID = 1;\n * This is a type-conversion wrapper around `getId()`\n * @return {string}\n */\n\n\nproto.users.pb.GetThreadReply.prototype.getId_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getId())\n  );\n};\n/**\n * optional bytes ID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getId()`\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.GetThreadReply.prototype.getId_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getId())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.users.pb.GetThreadReply} returns this\n */\n\n\nproto.users.pb.GetThreadReply.prototype.setId = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string name = 2;\n * @return {string}\n */\n\n\nproto.users.pb.GetThreadReply.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.users.pb.GetThreadReply} returns this\n */\n\n\nproto.users.pb.GetThreadReply.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional bool isDB = 3;\n * @return {boolean}\n */\n\n\nproto.users.pb.GetThreadReply.prototype.getIsdb = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 3, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.users.pb.GetThreadReply} returns this\n */\n\n\nproto.users.pb.GetThreadReply.prototype.setIsdb = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.users.pb.SetupMailboxRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.users.pb.SetupMailboxRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.users.pb.SetupMailboxRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.users.pb.SetupMailboxRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.SetupMailboxRequest}\n */\n\n\nproto.users.pb.SetupMailboxRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.SetupMailboxRequest();\n  return proto.users.pb.SetupMailboxRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.SetupMailboxRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.SetupMailboxRequest}\n */\n\n\nproto.users.pb.SetupMailboxRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.SetupMailboxRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.SetupMailboxRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.SetupMailboxRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.users.pb.SetupMailboxRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.users.pb.SetupMailboxReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.users.pb.SetupMailboxReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.users.pb.SetupMailboxReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.users.pb.SetupMailboxReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      mailboxid: msg.getMailboxid_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.SetupMailboxReply}\n */\n\n\nproto.users.pb.SetupMailboxReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.SetupMailboxReply();\n  return proto.users.pb.SetupMailboxReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.SetupMailboxReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.SetupMailboxReply}\n */\n\n\nproto.users.pb.SetupMailboxReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setMailboxid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.SetupMailboxReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.SetupMailboxReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.SetupMailboxReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.users.pb.SetupMailboxReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getMailboxid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n};\n/**\n * optional bytes mailboxID = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.users.pb.SetupMailboxReply.prototype.getMailboxid = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes mailboxID = 1;\n * This is a type-conversion wrapper around `getMailboxid()`\n * @return {string}\n */\n\n\nproto.users.pb.SetupMailboxReply.prototype.getMailboxid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getMailboxid())\n  );\n};\n/**\n * optional bytes mailboxID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMailboxid()`\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.SetupMailboxReply.prototype.getMailboxid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getMailboxid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.users.pb.SetupMailboxReply} returns this\n */\n\n\nproto.users.pb.SetupMailboxReply.prototype.setMailboxid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.users.pb.Message.prototype.toObject = function (opt_includeInstance) {\n    return proto.users.pb.Message.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.users.pb.Message} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.users.pb.Message.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      from: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      to: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      body: msg.getBody_asB64(),\n      signature: msg.getSignature_asB64(),\n      createdat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      readat: jspb.Message.getFieldWithDefault(msg, 7, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.Message}\n */\n\n\nproto.users.pb.Message.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.Message();\n  return proto.users.pb.Message.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.Message} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.Message}\n */\n\n\nproto.users.pb.Message.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setFrom(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTo(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setBody(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setSignature(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setCreatedat(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setReadat(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.Message.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.Message.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.Message} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.users.pb.Message.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getFrom();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getTo();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getBody_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(4, f);\n  }\n\n  f = message.getSignature_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(5, f);\n  }\n\n  f = message.getCreatedat();\n\n  if (f !== 0) {\n    writer.writeInt64(6, f);\n  }\n\n  f = message.getReadat();\n\n  if (f !== 0) {\n    writer.writeInt64(7, f);\n  }\n};\n/**\n * optional string ID = 1;\n * @return {string}\n */\n\n\nproto.users.pb.Message.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.users.pb.Message} returns this\n */\n\n\nproto.users.pb.Message.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string from = 2;\n * @return {string}\n */\n\n\nproto.users.pb.Message.prototype.getFrom = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.users.pb.Message} returns this\n */\n\n\nproto.users.pb.Message.prototype.setFrom = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string to = 3;\n * @return {string}\n */\n\n\nproto.users.pb.Message.prototype.getTo = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.users.pb.Message} returns this\n */\n\n\nproto.users.pb.Message.prototype.setTo = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional bytes body = 4;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.users.pb.Message.prototype.getBody = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * optional bytes body = 4;\n * This is a type-conversion wrapper around `getBody()`\n * @return {string}\n */\n\n\nproto.users.pb.Message.prototype.getBody_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getBody())\n  );\n};\n/**\n * optional bytes body = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBody()`\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.Message.prototype.getBody_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getBody())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.users.pb.Message} returns this\n */\n\n\nproto.users.pb.Message.prototype.setBody = function (value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n/**\n * optional bytes signature = 5;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.users.pb.Message.prototype.getSignature = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * optional bytes signature = 5;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\n\n\nproto.users.pb.Message.prototype.getSignature_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getSignature())\n  );\n};\n/**\n * optional bytes signature = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.Message.prototype.getSignature_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getSignature())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.users.pb.Message} returns this\n */\n\n\nproto.users.pb.Message.prototype.setSignature = function (value) {\n  return jspb.Message.setProto3BytesField(this, 5, value);\n};\n/**\n * optional int64 createdAt = 6;\n * @return {number}\n */\n\n\nproto.users.pb.Message.prototype.getCreatedat = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 6, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.users.pb.Message} returns this\n */\n\n\nproto.users.pb.Message.prototype.setCreatedat = function (value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n/**\n * optional int64 readAt = 7;\n * @return {number}\n */\n\n\nproto.users.pb.Message.prototype.getReadat = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 7, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.users.pb.Message} returns this\n */\n\n\nproto.users.pb.Message.prototype.setReadat = function (value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.users.pb.SendMessageRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.users.pb.SendMessageRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.users.pb.SendMessageRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.users.pb.SendMessageRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      to: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      tobody: msg.getTobody_asB64(),\n      tosignature: msg.getTosignature_asB64(),\n      frombody: msg.getFrombody_asB64(),\n      fromsignature: msg.getFromsignature_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.SendMessageRequest}\n */\n\n\nproto.users.pb.SendMessageRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.SendMessageRequest();\n  return proto.users.pb.SendMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.SendMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.SendMessageRequest}\n */\n\n\nproto.users.pb.SendMessageRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTo(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setTobody(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setTosignature(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setFrombody(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setFromsignature(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.SendMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.SendMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.users.pb.SendMessageRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTo();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getTobody_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n\n  f = message.getTosignature_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n\n  f = message.getFrombody_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(4, f);\n  }\n\n  f = message.getFromsignature_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(5, f);\n  }\n};\n/**\n * optional string to = 1;\n * @return {string}\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.getTo = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.users.pb.SendMessageRequest} returns this\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.setTo = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional bytes toBody = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.getTobody = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes toBody = 2;\n * This is a type-conversion wrapper around `getTobody()`\n * @return {string}\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.getTobody_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getTobody())\n  );\n};\n/**\n * optional bytes toBody = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTobody()`\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.getTobody_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getTobody())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.users.pb.SendMessageRequest} returns this\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.setTobody = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n/**\n * optional bytes toSignature = 3;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.getTosignature = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes toSignature = 3;\n * This is a type-conversion wrapper around `getTosignature()`\n * @return {string}\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.getTosignature_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getTosignature())\n  );\n};\n/**\n * optional bytes toSignature = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTosignature()`\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.getTosignature_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getTosignature())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.users.pb.SendMessageRequest} returns this\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.setTosignature = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n/**\n * optional bytes fromBody = 4;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.getFrombody = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * optional bytes fromBody = 4;\n * This is a type-conversion wrapper around `getFrombody()`\n * @return {string}\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.getFrombody_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getFrombody())\n  );\n};\n/**\n * optional bytes fromBody = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFrombody()`\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.getFrombody_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getFrombody())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.users.pb.SendMessageRequest} returns this\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.setFrombody = function (value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n/**\n * optional bytes fromSignature = 5;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.getFromsignature = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * optional bytes fromSignature = 5;\n * This is a type-conversion wrapper around `getFromsignature()`\n * @return {string}\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.getFromsignature_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getFromsignature())\n  );\n};\n/**\n * optional bytes fromSignature = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFromsignature()`\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.getFromsignature_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getFromsignature())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.users.pb.SendMessageRequest} returns this\n */\n\n\nproto.users.pb.SendMessageRequest.prototype.setFromsignature = function (value) {\n  return jspb.Message.setProto3BytesField(this, 5, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.users.pb.SendMessageReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.users.pb.SendMessageReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.users.pb.SendMessageReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.users.pb.SendMessageReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      createdat: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.SendMessageReply}\n */\n\n\nproto.users.pb.SendMessageReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.SendMessageReply();\n  return proto.users.pb.SendMessageReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.SendMessageReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.SendMessageReply}\n */\n\n\nproto.users.pb.SendMessageReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setCreatedat(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.SendMessageReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.SendMessageReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.SendMessageReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.users.pb.SendMessageReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getCreatedat();\n\n  if (f !== 0) {\n    writer.writeInt64(2, f);\n  }\n};\n/**\n * optional string ID = 1;\n * @return {string}\n */\n\n\nproto.users.pb.SendMessageReply.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.users.pb.SendMessageReply} returns this\n */\n\n\nproto.users.pb.SendMessageReply.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional int64 createdAt = 2;\n * @return {number}\n */\n\n\nproto.users.pb.SendMessageReply.prototype.getCreatedat = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.users.pb.SendMessageReply} returns this\n */\n\n\nproto.users.pb.SendMessageReply.prototype.setCreatedat = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.users.pb.ListInboxMessagesRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.users.pb.ListInboxMessagesRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.users.pb.ListInboxMessagesRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.users.pb.ListInboxMessagesRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      seek: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      limit: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      ascending: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n      status: jspb.Message.getFieldWithDefault(msg, 4, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.ListInboxMessagesRequest}\n */\n\n\nproto.users.pb.ListInboxMessagesRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.ListInboxMessagesRequest();\n  return proto.users.pb.ListInboxMessagesRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.ListInboxMessagesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.ListInboxMessagesRequest}\n */\n\n\nproto.users.pb.ListInboxMessagesRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSeek(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setLimit(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setAscending(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {!proto.users.pb.ListInboxMessagesRequest.Status} */\n        reader.readEnum();\n        msg.setStatus(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.ListInboxMessagesRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.ListInboxMessagesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.ListInboxMessagesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.users.pb.ListInboxMessagesRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSeek();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getLimit();\n\n  if (f !== 0) {\n    writer.writeInt64(2, f);\n  }\n\n  f = message.getAscending();\n\n  if (f) {\n    writer.writeBool(3, f);\n  }\n\n  f = message.getStatus();\n\n  if (f !== 0.0) {\n    writer.writeEnum(4, f);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.users.pb.ListInboxMessagesRequest.Status = {\n  ALL: 0,\n  READ: 1,\n  UNREAD: 2\n};\n/**\n * optional string seek = 1;\n * @return {string}\n */\n\nproto.users.pb.ListInboxMessagesRequest.prototype.getSeek = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.users.pb.ListInboxMessagesRequest} returns this\n */\n\n\nproto.users.pb.ListInboxMessagesRequest.prototype.setSeek = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional int64 limit = 2;\n * @return {number}\n */\n\n\nproto.users.pb.ListInboxMessagesRequest.prototype.getLimit = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.users.pb.ListInboxMessagesRequest} returns this\n */\n\n\nproto.users.pb.ListInboxMessagesRequest.prototype.setLimit = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional bool ascending = 3;\n * @return {boolean}\n */\n\n\nproto.users.pb.ListInboxMessagesRequest.prototype.getAscending = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 3, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.users.pb.ListInboxMessagesRequest} returns this\n */\n\n\nproto.users.pb.ListInboxMessagesRequest.prototype.setAscending = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n/**\n * optional Status status = 4;\n * @return {!proto.users.pb.ListInboxMessagesRequest.Status}\n */\n\n\nproto.users.pb.ListInboxMessagesRequest.prototype.getStatus = function () {\n  return (\n    /** @type {!proto.users.pb.ListInboxMessagesRequest.Status} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {!proto.users.pb.ListInboxMessagesRequest.Status} value\n * @return {!proto.users.pb.ListInboxMessagesRequest} returns this\n */\n\n\nproto.users.pb.ListInboxMessagesRequest.prototype.setStatus = function (value) {\n  return jspb.Message.setProto3EnumField(this, 4, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.users.pb.ListSentboxMessagesRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.users.pb.ListSentboxMessagesRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.users.pb.ListSentboxMessagesRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.users.pb.ListSentboxMessagesRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      seek: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      limit: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      ascending: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.ListSentboxMessagesRequest}\n */\n\n\nproto.users.pb.ListSentboxMessagesRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.ListSentboxMessagesRequest();\n  return proto.users.pb.ListSentboxMessagesRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.ListSentboxMessagesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.ListSentboxMessagesRequest}\n */\n\n\nproto.users.pb.ListSentboxMessagesRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSeek(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setLimit(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setAscending(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.ListSentboxMessagesRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.ListSentboxMessagesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.ListSentboxMessagesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.users.pb.ListSentboxMessagesRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSeek();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getLimit();\n\n  if (f !== 0) {\n    writer.writeInt64(2, f);\n  }\n\n  f = message.getAscending();\n\n  if (f) {\n    writer.writeBool(3, f);\n  }\n};\n/**\n * optional string seek = 1;\n * @return {string}\n */\n\n\nproto.users.pb.ListSentboxMessagesRequest.prototype.getSeek = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.users.pb.ListSentboxMessagesRequest} returns this\n */\n\n\nproto.users.pb.ListSentboxMessagesRequest.prototype.setSeek = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional int64 limit = 2;\n * @return {number}\n */\n\n\nproto.users.pb.ListSentboxMessagesRequest.prototype.getLimit = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.users.pb.ListSentboxMessagesRequest} returns this\n */\n\n\nproto.users.pb.ListSentboxMessagesRequest.prototype.setLimit = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional bool ascending = 3;\n * @return {boolean}\n */\n\n\nproto.users.pb.ListSentboxMessagesRequest.prototype.getAscending = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 3, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.users.pb.ListSentboxMessagesRequest} returns this\n */\n\n\nproto.users.pb.ListSentboxMessagesRequest.prototype.setAscending = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.users.pb.ListMessagesReply.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.users.pb.ListMessagesReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.users.pb.ListMessagesReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.users.pb.ListMessagesReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.users.pb.ListMessagesReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      messagesList: jspb.Message.toObjectList(msg.getMessagesList(), proto.users.pb.Message.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.ListMessagesReply}\n */\n\n\nproto.users.pb.ListMessagesReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.ListMessagesReply();\n  return proto.users.pb.ListMessagesReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.ListMessagesReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.ListMessagesReply}\n */\n\n\nproto.users.pb.ListMessagesReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.users.pb.Message();\n        reader.readMessage(value, proto.users.pb.Message.deserializeBinaryFromReader);\n        msg.addMessages(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.ListMessagesReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.ListMessagesReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.ListMessagesReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.users.pb.ListMessagesReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getMessagesList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.users.pb.Message.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated Message messages = 1;\n * @return {!Array<!proto.users.pb.Message>}\n */\n\n\nproto.users.pb.ListMessagesReply.prototype.getMessagesList = function () {\n  return (\n    /** @type{!Array<!proto.users.pb.Message>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.users.pb.Message, 1)\n  );\n};\n/**\n * @param {!Array<!proto.users.pb.Message>} value\n * @return {!proto.users.pb.ListMessagesReply} returns this\n*/\n\n\nproto.users.pb.ListMessagesReply.prototype.setMessagesList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.users.pb.Message=} opt_value\n * @param {number=} opt_index\n * @return {!proto.users.pb.Message}\n */\n\n\nproto.users.pb.ListMessagesReply.prototype.addMessages = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.users.pb.Message, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.users.pb.ListMessagesReply} returns this\n */\n\n\nproto.users.pb.ListMessagesReply.prototype.clearMessagesList = function () {\n  return this.setMessagesList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.users.pb.ReadInboxMessageRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.users.pb.ReadInboxMessageRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.users.pb.ReadInboxMessageRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.users.pb.ReadInboxMessageRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.ReadInboxMessageRequest}\n */\n\n\nproto.users.pb.ReadInboxMessageRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.ReadInboxMessageRequest();\n  return proto.users.pb.ReadInboxMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.ReadInboxMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.ReadInboxMessageRequest}\n */\n\n\nproto.users.pb.ReadInboxMessageRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.ReadInboxMessageRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.ReadInboxMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.ReadInboxMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.users.pb.ReadInboxMessageRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string ID = 1;\n * @return {string}\n */\n\n\nproto.users.pb.ReadInboxMessageRequest.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.users.pb.ReadInboxMessageRequest} returns this\n */\n\n\nproto.users.pb.ReadInboxMessageRequest.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.users.pb.ReadInboxMessageReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.users.pb.ReadInboxMessageReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.users.pb.ReadInboxMessageReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.users.pb.ReadInboxMessageReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      readat: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.ReadInboxMessageReply}\n */\n\n\nproto.users.pb.ReadInboxMessageReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.ReadInboxMessageReply();\n  return proto.users.pb.ReadInboxMessageReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.ReadInboxMessageReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.ReadInboxMessageReply}\n */\n\n\nproto.users.pb.ReadInboxMessageReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setReadat(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.ReadInboxMessageReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.ReadInboxMessageReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.ReadInboxMessageReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.users.pb.ReadInboxMessageReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getReadat();\n\n  if (f !== 0) {\n    writer.writeInt64(1, f);\n  }\n};\n/**\n * optional int64 readAt = 1;\n * @return {number}\n */\n\n\nproto.users.pb.ReadInboxMessageReply.prototype.getReadat = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.users.pb.ReadInboxMessageReply} returns this\n */\n\n\nproto.users.pb.ReadInboxMessageReply.prototype.setReadat = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.users.pb.DeleteMessageRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.users.pb.DeleteMessageRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.users.pb.DeleteMessageRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.users.pb.DeleteMessageRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.DeleteMessageRequest}\n */\n\n\nproto.users.pb.DeleteMessageRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.DeleteMessageRequest();\n  return proto.users.pb.DeleteMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.DeleteMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.DeleteMessageRequest}\n */\n\n\nproto.users.pb.DeleteMessageRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.DeleteMessageRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.DeleteMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.DeleteMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.users.pb.DeleteMessageRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string ID = 1;\n * @return {string}\n */\n\n\nproto.users.pb.DeleteMessageRequest.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.users.pb.DeleteMessageRequest} returns this\n */\n\n\nproto.users.pb.DeleteMessageRequest.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.users.pb.DeleteMessageReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.users.pb.DeleteMessageReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.users.pb.DeleteMessageReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.users.pb.DeleteMessageReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.DeleteMessageReply}\n */\n\n\nproto.users.pb.DeleteMessageReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.DeleteMessageReply();\n  return proto.users.pb.DeleteMessageReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.DeleteMessageReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.DeleteMessageReply}\n */\n\n\nproto.users.pb.DeleteMessageReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.users.pb.DeleteMessageReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.DeleteMessageReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.DeleteMessageReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.users.pb.DeleteMessageReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\ngoog.object.extend(exports, proto.users.pb);","map":{"version":3,"sources":["/Users/nassarhayat/apps/textiletable/js-examples/bucket-photo-gallery/node_modules/@textile/users-grpc/users_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","users","pb","ListThreadsRequest","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","ListThreadsReply","repeatedFields_","GetThreadRequest","GetThreadReply","SetupMailboxRequest","SetupMailboxReply","SendMessageRequest","SendMessageReply","ListInboxMessagesRequest","ListSentboxMessagesRequest","ListMessagesReply","ReadInboxMessageRequest","ReadInboxMessageReply","DeleteMessageRequest","DeleteMessageReply","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","listList","toObjectList","getListList","value","readMessage","addList","length","writeRepeatedMessage","getRepeatedWrapperField","setListList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearListList","name","getFieldWithDefault","readString","setName","getName","writeString","setProto3StringField","id","getId_asB64","isdb","getBooleanFieldWithDefault","readBytes","setId","readBool","setIsdb","getId_asU8","writeBytes","getIsdb","writeBool","getId","bytesAsB64","bytesAsU8","setProto3BytesField","setProto3BooleanField","mailboxid","getMailboxid_asB64","setMailboxid","getMailboxid_asU8","getMailboxid","from","to","body","getBody_asB64","signature","getSignature_asB64","createdat","readat","setFrom","setTo","setBody","setSignature","readInt64","setCreatedat","setReadat","getFrom","getTo","getBody_asU8","getSignature_asU8","getCreatedat","writeInt64","getReadat","getBody","getSignature","setProto3IntField","tobody","getTobody_asB64","tosignature","getTosignature_asB64","frombody","getFrombody_asB64","fromsignature","getFromsignature_asB64","setTobody","setTosignature","setFrombody","setFromsignature","getTobody_asU8","getTosignature_asU8","getFrombody_asU8","getFromsignature_asU8","getTobody","getTosignature","getFrombody","getFromsignature","seek","limit","ascending","status","setSeek","setLimit","setAscending","readEnum","setStatus","getSeek","getLimit","getAscending","getStatus","writeEnum","Status","ALL","READ","UNREAD","setProto3EnumField","messagesList","getMessagesList","addMessages","setMessagesList","clearMessagesList","object","extend","exports"],"mappings":"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","sourcesContent":["// source: users.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.users.pb.DeleteMessageReply', null, global);\ngoog.exportSymbol('proto.users.pb.DeleteMessageRequest', null, global);\ngoog.exportSymbol('proto.users.pb.GetThreadReply', null, global);\ngoog.exportSymbol('proto.users.pb.GetThreadRequest', null, global);\ngoog.exportSymbol('proto.users.pb.ListInboxMessagesRequest', null, global);\ngoog.exportSymbol('proto.users.pb.ListInboxMessagesRequest.Status', null, global);\ngoog.exportSymbol('proto.users.pb.ListMessagesReply', null, global);\ngoog.exportSymbol('proto.users.pb.ListSentboxMessagesRequest', null, global);\ngoog.exportSymbol('proto.users.pb.ListThreadsReply', null, global);\ngoog.exportSymbol('proto.users.pb.ListThreadsRequest', null, global);\ngoog.exportSymbol('proto.users.pb.Message', null, global);\ngoog.exportSymbol('proto.users.pb.ReadInboxMessageReply', null, global);\ngoog.exportSymbol('proto.users.pb.ReadInboxMessageRequest', null, global);\ngoog.exportSymbol('proto.users.pb.SendMessageReply', null, global);\ngoog.exportSymbol('proto.users.pb.SendMessageRequest', null, global);\ngoog.exportSymbol('proto.users.pb.SetupMailboxReply', null, global);\ngoog.exportSymbol('proto.users.pb.SetupMailboxRequest', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.users.pb.ListThreadsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.users.pb.ListThreadsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.ListThreadsRequest.displayName = 'proto.users.pb.ListThreadsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.users.pb.ListThreadsReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.users.pb.ListThreadsReply.repeatedFields_, null);\n};\ngoog.inherits(proto.users.pb.ListThreadsReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.ListThreadsReply.displayName = 'proto.users.pb.ListThreadsReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.users.pb.GetThreadRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.users.pb.GetThreadRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.GetThreadRequest.displayName = 'proto.users.pb.GetThreadRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.users.pb.GetThreadReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.users.pb.GetThreadReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.GetThreadReply.displayName = 'proto.users.pb.GetThreadReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.users.pb.SetupMailboxRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.users.pb.SetupMailboxRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.SetupMailboxRequest.displayName = 'proto.users.pb.SetupMailboxRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.users.pb.SetupMailboxReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.users.pb.SetupMailboxReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.SetupMailboxReply.displayName = 'proto.users.pb.SetupMailboxReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.users.pb.Message = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.users.pb.Message, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.Message.displayName = 'proto.users.pb.Message';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.users.pb.SendMessageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.users.pb.SendMessageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.SendMessageRequest.displayName = 'proto.users.pb.SendMessageRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.users.pb.SendMessageReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.users.pb.SendMessageReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.SendMessageReply.displayName = 'proto.users.pb.SendMessageReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.users.pb.ListInboxMessagesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.users.pb.ListInboxMessagesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.ListInboxMessagesRequest.displayName = 'proto.users.pb.ListInboxMessagesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.users.pb.ListSentboxMessagesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.users.pb.ListSentboxMessagesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.ListSentboxMessagesRequest.displayName = 'proto.users.pb.ListSentboxMessagesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.users.pb.ListMessagesReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.users.pb.ListMessagesReply.repeatedFields_, null);\n};\ngoog.inherits(proto.users.pb.ListMessagesReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.ListMessagesReply.displayName = 'proto.users.pb.ListMessagesReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.users.pb.ReadInboxMessageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.users.pb.ReadInboxMessageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.ReadInboxMessageRequest.displayName = 'proto.users.pb.ReadInboxMessageRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.users.pb.ReadInboxMessageReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.users.pb.ReadInboxMessageReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.ReadInboxMessageReply.displayName = 'proto.users.pb.ReadInboxMessageReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.users.pb.DeleteMessageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.users.pb.DeleteMessageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.DeleteMessageRequest.displayName = 'proto.users.pb.DeleteMessageRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.users.pb.DeleteMessageReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.users.pb.DeleteMessageReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.users.pb.DeleteMessageReply.displayName = 'proto.users.pb.DeleteMessageReply';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.users.pb.ListThreadsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.users.pb.ListThreadsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.users.pb.ListThreadsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.ListThreadsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.ListThreadsRequest}\n */\nproto.users.pb.ListThreadsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.ListThreadsRequest;\n  return proto.users.pb.ListThreadsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.ListThreadsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.ListThreadsRequest}\n */\nproto.users.pb.ListThreadsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.users.pb.ListThreadsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.ListThreadsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.ListThreadsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.ListThreadsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.users.pb.ListThreadsReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.users.pb.ListThreadsReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.users.pb.ListThreadsReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.users.pb.ListThreadsReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.ListThreadsReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: jspb.Message.toObjectList(msg.getListList(),\n    proto.users.pb.GetThreadReply.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.ListThreadsReply}\n */\nproto.users.pb.ListThreadsReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.ListThreadsReply;\n  return proto.users.pb.ListThreadsReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.ListThreadsReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.ListThreadsReply}\n */\nproto.users.pb.ListThreadsReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.users.pb.GetThreadReply;\n      reader.readMessage(value,proto.users.pb.GetThreadReply.deserializeBinaryFromReader);\n      msg.addList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.users.pb.ListThreadsReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.ListThreadsReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.ListThreadsReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.ListThreadsReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.users.pb.GetThreadReply.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated GetThreadReply list = 1;\n * @return {!Array<!proto.users.pb.GetThreadReply>}\n */\nproto.users.pb.ListThreadsReply.prototype.getListList = function() {\n  return /** @type{!Array<!proto.users.pb.GetThreadReply>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.users.pb.GetThreadReply, 1));\n};\n\n\n/**\n * @param {!Array<!proto.users.pb.GetThreadReply>} value\n * @return {!proto.users.pb.ListThreadsReply} returns this\n*/\nproto.users.pb.ListThreadsReply.prototype.setListList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.users.pb.GetThreadReply=} opt_value\n * @param {number=} opt_index\n * @return {!proto.users.pb.GetThreadReply}\n */\nproto.users.pb.ListThreadsReply.prototype.addList = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.users.pb.GetThreadReply, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.users.pb.ListThreadsReply} returns this\n */\nproto.users.pb.ListThreadsReply.prototype.clearListList = function() {\n  return this.setListList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.users.pb.GetThreadRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.users.pb.GetThreadRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.users.pb.GetThreadRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.GetThreadRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.GetThreadRequest}\n */\nproto.users.pb.GetThreadRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.GetThreadRequest;\n  return proto.users.pb.GetThreadRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.GetThreadRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.GetThreadRequest}\n */\nproto.users.pb.GetThreadRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.users.pb.GetThreadRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.GetThreadRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.GetThreadRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.GetThreadRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.users.pb.GetThreadRequest.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.users.pb.GetThreadRequest} returns this\n */\nproto.users.pb.GetThreadRequest.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.users.pb.GetThreadReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.users.pb.GetThreadReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.users.pb.GetThreadReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.GetThreadReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: msg.getId_asB64(),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    isdb: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.GetThreadReply}\n */\nproto.users.pb.GetThreadReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.GetThreadReply;\n  return proto.users.pb.GetThreadReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.GetThreadReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.GetThreadReply}\n */\nproto.users.pb.GetThreadReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsdb(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.users.pb.GetThreadReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.GetThreadReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.GetThreadReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.GetThreadReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getIsdb();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes ID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.users.pb.GetThreadReply.prototype.getId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes ID = 1;\n * This is a type-conversion wrapper around `getId()`\n * @return {string}\n */\nproto.users.pb.GetThreadReply.prototype.getId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getId()));\n};\n\n\n/**\n * optional bytes ID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getId()`\n * @return {!Uint8Array}\n */\nproto.users.pb.GetThreadReply.prototype.getId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.users.pb.GetThreadReply} returns this\n */\nproto.users.pb.GetThreadReply.prototype.setId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.users.pb.GetThreadReply.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.users.pb.GetThreadReply} returns this\n */\nproto.users.pb.GetThreadReply.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bool isDB = 3;\n * @return {boolean}\n */\nproto.users.pb.GetThreadReply.prototype.getIsdb = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.users.pb.GetThreadReply} returns this\n */\nproto.users.pb.GetThreadReply.prototype.setIsdb = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.users.pb.SetupMailboxRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.users.pb.SetupMailboxRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.users.pb.SetupMailboxRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.SetupMailboxRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.SetupMailboxRequest}\n */\nproto.users.pb.SetupMailboxRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.SetupMailboxRequest;\n  return proto.users.pb.SetupMailboxRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.SetupMailboxRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.SetupMailboxRequest}\n */\nproto.users.pb.SetupMailboxRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.users.pb.SetupMailboxRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.SetupMailboxRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.SetupMailboxRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.SetupMailboxRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.users.pb.SetupMailboxReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.users.pb.SetupMailboxReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.users.pb.SetupMailboxReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.SetupMailboxReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    mailboxid: msg.getMailboxid_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.SetupMailboxReply}\n */\nproto.users.pb.SetupMailboxReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.SetupMailboxReply;\n  return proto.users.pb.SetupMailboxReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.SetupMailboxReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.SetupMailboxReply}\n */\nproto.users.pb.SetupMailboxReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMailboxid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.users.pb.SetupMailboxReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.SetupMailboxReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.SetupMailboxReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.SetupMailboxReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMailboxid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes mailboxID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.users.pb.SetupMailboxReply.prototype.getMailboxid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes mailboxID = 1;\n * This is a type-conversion wrapper around `getMailboxid()`\n * @return {string}\n */\nproto.users.pb.SetupMailboxReply.prototype.getMailboxid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMailboxid()));\n};\n\n\n/**\n * optional bytes mailboxID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMailboxid()`\n * @return {!Uint8Array}\n */\nproto.users.pb.SetupMailboxReply.prototype.getMailboxid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMailboxid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.users.pb.SetupMailboxReply} returns this\n */\nproto.users.pb.SetupMailboxReply.prototype.setMailboxid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.users.pb.Message.prototype.toObject = function(opt_includeInstance) {\n  return proto.users.pb.Message.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.users.pb.Message} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.Message.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    from: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    to: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    body: msg.getBody_asB64(),\n    signature: msg.getSignature_asB64(),\n    createdat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    readat: jspb.Message.getFieldWithDefault(msg, 7, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.Message}\n */\nproto.users.pb.Message.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.Message;\n  return proto.users.pb.Message.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.Message} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.Message}\n */\nproto.users.pb.Message.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFrom(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTo(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBody(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreatedat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setReadat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.users.pb.Message.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.Message.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.Message} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.Message.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getFrom();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getTo();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getBody_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getSignature_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getCreatedat();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getReadat();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string ID = 1;\n * @return {string}\n */\nproto.users.pb.Message.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.users.pb.Message} returns this\n */\nproto.users.pb.Message.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string from = 2;\n * @return {string}\n */\nproto.users.pb.Message.prototype.getFrom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.users.pb.Message} returns this\n */\nproto.users.pb.Message.prototype.setFrom = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string to = 3;\n * @return {string}\n */\nproto.users.pb.Message.prototype.getTo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.users.pb.Message} returns this\n */\nproto.users.pb.Message.prototype.setTo = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional bytes body = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.users.pb.Message.prototype.getBody = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes body = 4;\n * This is a type-conversion wrapper around `getBody()`\n * @return {string}\n */\nproto.users.pb.Message.prototype.getBody_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBody()));\n};\n\n\n/**\n * optional bytes body = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBody()`\n * @return {!Uint8Array}\n */\nproto.users.pb.Message.prototype.getBody_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBody()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.users.pb.Message} returns this\n */\nproto.users.pb.Message.prototype.setBody = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional bytes signature = 5;\n * @return {!(string|Uint8Array)}\n */\nproto.users.pb.Message.prototype.getSignature = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes signature = 5;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.users.pb.Message.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.users.pb.Message.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.users.pb.Message} returns this\n */\nproto.users.pb.Message.prototype.setSignature = function(value) {\n  return jspb.Message.setProto3BytesField(this, 5, value);\n};\n\n\n/**\n * optional int64 createdAt = 6;\n * @return {number}\n */\nproto.users.pb.Message.prototype.getCreatedat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.users.pb.Message} returns this\n */\nproto.users.pb.Message.prototype.setCreatedat = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional int64 readAt = 7;\n * @return {number}\n */\nproto.users.pb.Message.prototype.getReadat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.users.pb.Message} returns this\n */\nproto.users.pb.Message.prototype.setReadat = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.users.pb.SendMessageRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.users.pb.SendMessageRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.users.pb.SendMessageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.SendMessageRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    to: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    tobody: msg.getTobody_asB64(),\n    tosignature: msg.getTosignature_asB64(),\n    frombody: msg.getFrombody_asB64(),\n    fromsignature: msg.getFromsignature_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.SendMessageRequest}\n */\nproto.users.pb.SendMessageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.SendMessageRequest;\n  return proto.users.pb.SendMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.SendMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.SendMessageRequest}\n */\nproto.users.pb.SendMessageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTo(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTobody(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTosignature(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFrombody(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFromsignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.users.pb.SendMessageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.SendMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.SendMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.SendMessageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTo();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getTobody_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getTosignature_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getFrombody_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getFromsignature_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string to = 1;\n * @return {string}\n */\nproto.users.pb.SendMessageRequest.prototype.getTo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.users.pb.SendMessageRequest} returns this\n */\nproto.users.pb.SendMessageRequest.prototype.setTo = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bytes toBody = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.users.pb.SendMessageRequest.prototype.getTobody = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes toBody = 2;\n * This is a type-conversion wrapper around `getTobody()`\n * @return {string}\n */\nproto.users.pb.SendMessageRequest.prototype.getTobody_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTobody()));\n};\n\n\n/**\n * optional bytes toBody = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTobody()`\n * @return {!Uint8Array}\n */\nproto.users.pb.SendMessageRequest.prototype.getTobody_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTobody()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.users.pb.SendMessageRequest} returns this\n */\nproto.users.pb.SendMessageRequest.prototype.setTobody = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes toSignature = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.users.pb.SendMessageRequest.prototype.getTosignature = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes toSignature = 3;\n * This is a type-conversion wrapper around `getTosignature()`\n * @return {string}\n */\nproto.users.pb.SendMessageRequest.prototype.getTosignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTosignature()));\n};\n\n\n/**\n * optional bytes toSignature = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTosignature()`\n * @return {!Uint8Array}\n */\nproto.users.pb.SendMessageRequest.prototype.getTosignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTosignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.users.pb.SendMessageRequest} returns this\n */\nproto.users.pb.SendMessageRequest.prototype.setTosignature = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional bytes fromBody = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.users.pb.SendMessageRequest.prototype.getFrombody = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes fromBody = 4;\n * This is a type-conversion wrapper around `getFrombody()`\n * @return {string}\n */\nproto.users.pb.SendMessageRequest.prototype.getFrombody_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFrombody()));\n};\n\n\n/**\n * optional bytes fromBody = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFrombody()`\n * @return {!Uint8Array}\n */\nproto.users.pb.SendMessageRequest.prototype.getFrombody_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFrombody()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.users.pb.SendMessageRequest} returns this\n */\nproto.users.pb.SendMessageRequest.prototype.setFrombody = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional bytes fromSignature = 5;\n * @return {!(string|Uint8Array)}\n */\nproto.users.pb.SendMessageRequest.prototype.getFromsignature = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes fromSignature = 5;\n * This is a type-conversion wrapper around `getFromsignature()`\n * @return {string}\n */\nproto.users.pb.SendMessageRequest.prototype.getFromsignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFromsignature()));\n};\n\n\n/**\n * optional bytes fromSignature = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFromsignature()`\n * @return {!Uint8Array}\n */\nproto.users.pb.SendMessageRequest.prototype.getFromsignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFromsignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.users.pb.SendMessageRequest} returns this\n */\nproto.users.pb.SendMessageRequest.prototype.setFromsignature = function(value) {\n  return jspb.Message.setProto3BytesField(this, 5, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.users.pb.SendMessageReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.users.pb.SendMessageReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.users.pb.SendMessageReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.SendMessageReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    createdat: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.SendMessageReply}\n */\nproto.users.pb.SendMessageReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.SendMessageReply;\n  return proto.users.pb.SendMessageReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.SendMessageReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.SendMessageReply}\n */\nproto.users.pb.SendMessageReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreatedat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.users.pb.SendMessageReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.SendMessageReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.SendMessageReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.SendMessageReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCreatedat();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string ID = 1;\n * @return {string}\n */\nproto.users.pb.SendMessageReply.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.users.pb.SendMessageReply} returns this\n */\nproto.users.pb.SendMessageReply.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional int64 createdAt = 2;\n * @return {number}\n */\nproto.users.pb.SendMessageReply.prototype.getCreatedat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.users.pb.SendMessageReply} returns this\n */\nproto.users.pb.SendMessageReply.prototype.setCreatedat = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.users.pb.ListInboxMessagesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.users.pb.ListInboxMessagesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.users.pb.ListInboxMessagesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.ListInboxMessagesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    seek: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    ascending: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n    status: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.ListInboxMessagesRequest}\n */\nproto.users.pb.ListInboxMessagesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.ListInboxMessagesRequest;\n  return proto.users.pb.ListInboxMessagesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.ListInboxMessagesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.ListInboxMessagesRequest}\n */\nproto.users.pb.ListInboxMessagesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSeek(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLimit(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAscending(value);\n      break;\n    case 4:\n      var value = /** @type {!proto.users.pb.ListInboxMessagesRequest.Status} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.users.pb.ListInboxMessagesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.ListInboxMessagesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.ListInboxMessagesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.ListInboxMessagesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSeek();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getAscending();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.users.pb.ListInboxMessagesRequest.Status = {\n  ALL: 0,\n  READ: 1,\n  UNREAD: 2\n};\n\n/**\n * optional string seek = 1;\n * @return {string}\n */\nproto.users.pb.ListInboxMessagesRequest.prototype.getSeek = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.users.pb.ListInboxMessagesRequest} returns this\n */\nproto.users.pb.ListInboxMessagesRequest.prototype.setSeek = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional int64 limit = 2;\n * @return {number}\n */\nproto.users.pb.ListInboxMessagesRequest.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.users.pb.ListInboxMessagesRequest} returns this\n */\nproto.users.pb.ListInboxMessagesRequest.prototype.setLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bool ascending = 3;\n * @return {boolean}\n */\nproto.users.pb.ListInboxMessagesRequest.prototype.getAscending = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.users.pb.ListInboxMessagesRequest} returns this\n */\nproto.users.pb.ListInboxMessagesRequest.prototype.setAscending = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n/**\n * optional Status status = 4;\n * @return {!proto.users.pb.ListInboxMessagesRequest.Status}\n */\nproto.users.pb.ListInboxMessagesRequest.prototype.getStatus = function() {\n  return /** @type {!proto.users.pb.ListInboxMessagesRequest.Status} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {!proto.users.pb.ListInboxMessagesRequest.Status} value\n * @return {!proto.users.pb.ListInboxMessagesRequest} returns this\n */\nproto.users.pb.ListInboxMessagesRequest.prototype.setStatus = function(value) {\n  return jspb.Message.setProto3EnumField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.users.pb.ListSentboxMessagesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.users.pb.ListSentboxMessagesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.users.pb.ListSentboxMessagesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.ListSentboxMessagesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    seek: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    ascending: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.ListSentboxMessagesRequest}\n */\nproto.users.pb.ListSentboxMessagesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.ListSentboxMessagesRequest;\n  return proto.users.pb.ListSentboxMessagesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.ListSentboxMessagesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.ListSentboxMessagesRequest}\n */\nproto.users.pb.ListSentboxMessagesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSeek(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLimit(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAscending(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.users.pb.ListSentboxMessagesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.ListSentboxMessagesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.ListSentboxMessagesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.ListSentboxMessagesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSeek();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getAscending();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string seek = 1;\n * @return {string}\n */\nproto.users.pb.ListSentboxMessagesRequest.prototype.getSeek = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.users.pb.ListSentboxMessagesRequest} returns this\n */\nproto.users.pb.ListSentboxMessagesRequest.prototype.setSeek = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional int64 limit = 2;\n * @return {number}\n */\nproto.users.pb.ListSentboxMessagesRequest.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.users.pb.ListSentboxMessagesRequest} returns this\n */\nproto.users.pb.ListSentboxMessagesRequest.prototype.setLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bool ascending = 3;\n * @return {boolean}\n */\nproto.users.pb.ListSentboxMessagesRequest.prototype.getAscending = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.users.pb.ListSentboxMessagesRequest} returns this\n */\nproto.users.pb.ListSentboxMessagesRequest.prototype.setAscending = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.users.pb.ListMessagesReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.users.pb.ListMessagesReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.users.pb.ListMessagesReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.users.pb.ListMessagesReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.ListMessagesReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),\n    proto.users.pb.Message.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.ListMessagesReply}\n */\nproto.users.pb.ListMessagesReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.ListMessagesReply;\n  return proto.users.pb.ListMessagesReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.ListMessagesReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.ListMessagesReply}\n */\nproto.users.pb.ListMessagesReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.users.pb.Message;\n      reader.readMessage(value,proto.users.pb.Message.deserializeBinaryFromReader);\n      msg.addMessages(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.users.pb.ListMessagesReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.ListMessagesReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.ListMessagesReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.ListMessagesReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMessagesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.users.pb.Message.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Message messages = 1;\n * @return {!Array<!proto.users.pb.Message>}\n */\nproto.users.pb.ListMessagesReply.prototype.getMessagesList = function() {\n  return /** @type{!Array<!proto.users.pb.Message>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.users.pb.Message, 1));\n};\n\n\n/**\n * @param {!Array<!proto.users.pb.Message>} value\n * @return {!proto.users.pb.ListMessagesReply} returns this\n*/\nproto.users.pb.ListMessagesReply.prototype.setMessagesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.users.pb.Message=} opt_value\n * @param {number=} opt_index\n * @return {!proto.users.pb.Message}\n */\nproto.users.pb.ListMessagesReply.prototype.addMessages = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.users.pb.Message, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.users.pb.ListMessagesReply} returns this\n */\nproto.users.pb.ListMessagesReply.prototype.clearMessagesList = function() {\n  return this.setMessagesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.users.pb.ReadInboxMessageRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.users.pb.ReadInboxMessageRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.users.pb.ReadInboxMessageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.ReadInboxMessageRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.ReadInboxMessageRequest}\n */\nproto.users.pb.ReadInboxMessageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.ReadInboxMessageRequest;\n  return proto.users.pb.ReadInboxMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.ReadInboxMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.ReadInboxMessageRequest}\n */\nproto.users.pb.ReadInboxMessageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.users.pb.ReadInboxMessageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.ReadInboxMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.ReadInboxMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.ReadInboxMessageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string ID = 1;\n * @return {string}\n */\nproto.users.pb.ReadInboxMessageRequest.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.users.pb.ReadInboxMessageRequest} returns this\n */\nproto.users.pb.ReadInboxMessageRequest.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.users.pb.ReadInboxMessageReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.users.pb.ReadInboxMessageReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.users.pb.ReadInboxMessageReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.ReadInboxMessageReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    readat: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.ReadInboxMessageReply}\n */\nproto.users.pb.ReadInboxMessageReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.ReadInboxMessageReply;\n  return proto.users.pb.ReadInboxMessageReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.ReadInboxMessageReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.ReadInboxMessageReply}\n */\nproto.users.pb.ReadInboxMessageReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setReadat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.users.pb.ReadInboxMessageReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.ReadInboxMessageReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.ReadInboxMessageReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.ReadInboxMessageReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getReadat();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 readAt = 1;\n * @return {number}\n */\nproto.users.pb.ReadInboxMessageReply.prototype.getReadat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.users.pb.ReadInboxMessageReply} returns this\n */\nproto.users.pb.ReadInboxMessageReply.prototype.setReadat = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.users.pb.DeleteMessageRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.users.pb.DeleteMessageRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.users.pb.DeleteMessageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.DeleteMessageRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.DeleteMessageRequest}\n */\nproto.users.pb.DeleteMessageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.DeleteMessageRequest;\n  return proto.users.pb.DeleteMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.DeleteMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.DeleteMessageRequest}\n */\nproto.users.pb.DeleteMessageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.users.pb.DeleteMessageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.DeleteMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.DeleteMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.DeleteMessageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string ID = 1;\n * @return {string}\n */\nproto.users.pb.DeleteMessageRequest.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.users.pb.DeleteMessageRequest} returns this\n */\nproto.users.pb.DeleteMessageRequest.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.users.pb.DeleteMessageReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.users.pb.DeleteMessageReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.users.pb.DeleteMessageReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.DeleteMessageReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.users.pb.DeleteMessageReply}\n */\nproto.users.pb.DeleteMessageReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.users.pb.DeleteMessageReply;\n  return proto.users.pb.DeleteMessageReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.users.pb.DeleteMessageReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.users.pb.DeleteMessageReply}\n */\nproto.users.pb.DeleteMessageReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.users.pb.DeleteMessageReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.users.pb.DeleteMessageReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.users.pb.DeleteMessageReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.users.pb.DeleteMessageReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\ngoog.object.extend(exports, proto.users.pb);\n"]},"metadata":{},"sourceType":"script"}