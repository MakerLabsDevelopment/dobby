{"ast":null,"code":"var _jsxFileName = \"/Users/nassarhayat/apps/textiletable/sushitable/src/App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Table from './Table';\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Buckets, PrivateKey, Client, ThreadID } from '@textile/hub';\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport './App.css';\n\nconst App = () => {\n  const [identity, setIdentity] = useState();\n  const [client, setClient] = useState();\n  const [threadId, setThreadId] = useState();\n  const [links, setLinks] = useState();\n  useEffect(() => {\n    const setup = async () => {\n      const keyInfo = {\n        key: 'bs3g66aciasarrm46kosxap74te'\n      };\n      const newIdentity = await getIdentity();\n      setIdentity(newIdentity);\n      const buckets = await Buckets.withKeyInfo(keyInfo);\n      await buckets.getToken(newIdentity);\n      const buck = await buckets.getOrCreate('io.textile.dropzone');\n\n      if (!buck.root) {\n        throw new Error('Failed to open bucket');\n      }\n\n      const bucketKey = buck.root.key;\n      await getBucketLinks(bucketKey, buckets);\n      const client = await Client.withKeyInfo(keyInfo);\n      await client.getToken(newIdentity);\n      const threadId = ThreadID.fromRandom();\n      await client.newDB(threadId);\n      setClient(client);\n      setThreadId(threadId);\n    };\n\n    setup();\n  }, []);\n\n  const getIdentity = async () => {\n    try {\n      var storedIdent = localStorage.getItem(\"identity\");\n\n      if (storedIdent === null) {\n        throw new Error('No identity');\n      }\n\n      const restored = PrivateKey.fromString(storedIdent);\n      return restored;\n    } catch (e) {\n      try {\n        const identity = PrivateKey.fromRandom();\n        const identityString = identity.toString();\n        localStorage.setItem(\"identity\", identityString);\n        return identity;\n      } catch (err) {\n        return err.message;\n      }\n    }\n  };\n\n  const getBucketLinks = async (bucketKey, buckets) => {\n    if (!buckets || !bucketKey) {\n      console.error('No bucket client or root key');\n      return;\n    }\n\n    const linksList = await buckets.links(bucketKey);\n    setLinks(linksList);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Segment.Group, {\n    style: {\n      height: \"100%\",\n      border: 0,\n      boxShadow: \"0px 0px 0px\",\n      borderRadius: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    clearing: true,\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    className: \"avatar\",\n    as: \"h2\",\n    floated: \"left\",\n    title: identity ? identity.toString() : 'identity',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, identity && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"|\", /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-label\": \"4.0 stars out of 5, 123 ratings\",\n    role: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"\\uD83C\\uDF63\"), \"|\", /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-label\": \"4.0 stars out of 5, 123 ratings\",\n    role: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"\\uD83C\\uDF63\"), \"|\")), links && links.url && /*#__PURE__*/React.createElement(\"a\", {\n    href: links.url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"link\",\n    floated: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"BUCKET\")), links && links.www && /*#__PURE__*/React.createElement(\"a\", {\n    href: links.www,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"link\",\n    floated: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"WWW\")), links && links.ipns && /*#__PURE__*/React.createElement(\"a\", {\n    href: links.ipns,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"link\",\n    floated: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"IPNS\"))), threadId && client && /*#__PURE__*/React.createElement(Table, {\n    threadId: threadId,\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/nassarhayat/apps/textiletable/sushitable/src/App.tsx"],"names":["React","useState","useEffect","Table","Buckets","PrivateKey","Client","ThreadID","Button","Header","Segment","App","identity","setIdentity","client","setClient","threadId","setThreadId","links","setLinks","setup","keyInfo","key","newIdentity","getIdentity","buckets","withKeyInfo","getToken","buck","getOrCreate","root","Error","bucketKey","getBucketLinks","fromRandom","newDB","storedIdent","localStorage","getItem","restored","fromString","e","identityString","toString","setItem","err","message","console","error","linksList","height","border","boxShadow","borderRadius","url","www","ipns"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Table from './Table'\n\nimport \"semantic-ui-css/semantic.min.css\"\nimport { Buckets, PrivateKey, Client, ThreadID } from '@textile/hub'\nimport { Button, Header, Segment } from \"semantic-ui-react\"\nimport './App.css'\n\nconst App = () => {\n  const [identity, setIdentity] = useState<PrivateKey>()\n  const [client, setClient] = useState<Client>()\n  const [threadId, setThreadId] = useState<ThreadID>()\n  const [links, setLinks] = useState<any>()\n\n  useEffect(() => {\n    const setup = async () => {\n      const keyInfo = { key: 'bs3g66aciasarrm46kosxap74te' }\n      const newIdentity = await getIdentity()\n      setIdentity(newIdentity)\n\n      const buckets = await Buckets.withKeyInfo(keyInfo)\n      await buckets.getToken(newIdentity)\n      const buck = await buckets.getOrCreate('io.textile.dropzone')\n      if (!buck.root) {\n        throw new Error('Failed to open bucket')\n      }\n      const bucketKey = buck.root.key\n\n      await getBucketLinks(bucketKey, buckets)\n\n      const client = await Client.withKeyInfo(keyInfo)\n      await client.getToken(newIdentity)\n      const threadId = ThreadID.fromRandom()\n      await client.newDB(threadId)\n      setClient(client)\n      setThreadId(threadId)\n    }\n    setup()\n  }, [])\n\n\n  const getIdentity = async (): Promise<PrivateKey> => {\n    try {\n      var storedIdent = localStorage.getItem(\"identity\")\n      if (storedIdent === null) {\n        throw new Error('No identity')\n      }\n      const restored = PrivateKey.fromString(storedIdent)\n      return restored\n    }\n    catch (e) {\n      try {\n        const identity = PrivateKey.fromRandom()\n        const identityString = identity.toString()\n        localStorage.setItem(\"identity\", identityString)\n        return identity\n      } catch (err) {\n        return err.message\n      }\n    }\n  }\n\n  const getBucketLinks = async (bucketKey: string, buckets: Buckets) => {\n    if (!buckets || !bucketKey) {\n      console.error('No bucket client or root key')\n      return\n    }\n    const linksList = await buckets.links(bucketKey)\n    setLinks(linksList)\n  }\n\n  return (\n    <div className=\"App\">\n      <Segment.Group style={{ height: \"100%\", border: 0, boxShadow: \"0px 0px 0px\", borderRadius: 0 }}>\n        <Segment clearing className=\"nav\">\n          <Header className=\"avatar\" as=\"h2\" floated=\"left\" title={identity ? identity.toString() : 'identity'}>\n            {identity && (\n              <div className=\"avatar\">\n                |\n                <span aria-label=\"4.0 stars out of 5, 123 ratings\" role=\"img\">🍣</span>\n                |\n                <span aria-label=\"4.0 stars out of 5, 123 ratings\" role=\"img\">🍣</span>\n                |\n              </div>\n            )}\n          </Header>\n          { links && links.url &&\n            <a href={links.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              <Button\n                className=\"link\"\n                floated=\"right\"\n              >BUCKET</Button>\n            </a>\n          }\n          { links &&  links.www &&\n            <a href={links.www} target=\"_blank\" rel=\"noopener noreferrer\">\n              <Button\n                className=\"link\"\n                floated=\"right\"\n              >WWW</Button>\n            </a>\n          }\n          { links && links.ipns &&\n            <a href={links.ipns} target=\"_blank\" rel=\"noopener noreferrer\">\n              <Button\n                className=\"link\"\n                floated=\"right\"\n              >IPNS</Button>\n            </a>\n          }\n        </Segment>\n        {threadId && client && (\n          <Table\n            threadId={threadId}\n            client={client}\n          />\n        )}\n      </Segment.Group>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}