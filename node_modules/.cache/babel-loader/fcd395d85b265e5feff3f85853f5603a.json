{"ast":null,"code":"// package: api.users.pb\n// file: users.proto\nvar users_pb = require(\"./users_pb\");\n\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar APIService = function () {\n  function APIService() {}\n\n  APIService.serviceName = \"api.users.pb.APIService\";\n  return APIService;\n}();\n\nAPIService.GetThread = {\n  methodName: \"GetThread\",\n  service: APIService,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.GetThreadRequest,\n  responseType: users_pb.GetThreadResponse\n};\nAPIService.ListThreads = {\n  methodName: \"ListThreads\",\n  service: APIService,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.ListThreadsRequest,\n  responseType: users_pb.ListThreadsResponse\n};\nAPIService.SetupMailbox = {\n  methodName: \"SetupMailbox\",\n  service: APIService,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.SetupMailboxRequest,\n  responseType: users_pb.SetupMailboxResponse\n};\nAPIService.SendMessage = {\n  methodName: \"SendMessage\",\n  service: APIService,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.SendMessageRequest,\n  responseType: users_pb.SendMessageResponse\n};\nAPIService.ListInboxMessages = {\n  methodName: \"ListInboxMessages\",\n  service: APIService,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.ListInboxMessagesRequest,\n  responseType: users_pb.ListInboxMessagesResponse\n};\nAPIService.ListSentboxMessages = {\n  methodName: \"ListSentboxMessages\",\n  service: APIService,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.ListSentboxMessagesRequest,\n  responseType: users_pb.ListSentboxMessagesResponse\n};\nAPIService.ReadInboxMessage = {\n  methodName: \"ReadInboxMessage\",\n  service: APIService,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.ReadInboxMessageRequest,\n  responseType: users_pb.ReadInboxMessageResponse\n};\nAPIService.DeleteInboxMessage = {\n  methodName: \"DeleteInboxMessage\",\n  service: APIService,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.DeleteInboxMessageRequest,\n  responseType: users_pb.DeleteInboxMessageResponse\n};\nAPIService.DeleteSentboxMessage = {\n  methodName: \"DeleteSentboxMessage\",\n  service: APIService,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.DeleteSentboxMessageRequest,\n  responseType: users_pb.DeleteSentboxMessageResponse\n};\nexports.APIService = APIService;\n\nfunction APIServiceClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nAPIServiceClient.prototype.getThread = function getThread(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(APIService.GetThread, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIServiceClient.prototype.listThreads = function listThreads(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(APIService.ListThreads, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIServiceClient.prototype.setupMailbox = function setupMailbox(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(APIService.SetupMailbox, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIServiceClient.prototype.sendMessage = function sendMessage(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(APIService.SendMessage, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIServiceClient.prototype.listInboxMessages = function listInboxMessages(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(APIService.ListInboxMessages, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIServiceClient.prototype.listSentboxMessages = function listSentboxMessages(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(APIService.ListSentboxMessages, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIServiceClient.prototype.readInboxMessage = function readInboxMessage(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(APIService.ReadInboxMessage, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIServiceClient.prototype.deleteInboxMessage = function deleteInboxMessage(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(APIService.DeleteInboxMessage, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIServiceClient.prototype.deleteSentboxMessage = function deleteSentboxMessage(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(APIService.DeleteSentboxMessage, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.APIServiceClient = APIServiceClient;","map":{"version":3,"sources":["/Users/nassarhayat/apps/textiletable/js-examples/bucket-photo-gallery/node_modules/@textile/users-grpc/users_pb_service.js"],"names":["users_pb","require","grpc","APIService","serviceName","GetThread","methodName","service","requestStream","responseStream","requestType","GetThreadRequest","responseType","GetThreadResponse","ListThreads","ListThreadsRequest","ListThreadsResponse","SetupMailbox","SetupMailboxRequest","SetupMailboxResponse","SendMessage","SendMessageRequest","SendMessageResponse","ListInboxMessages","ListInboxMessagesRequest","ListInboxMessagesResponse","ListSentboxMessages","ListSentboxMessagesRequest","ListSentboxMessagesResponse","ReadInboxMessage","ReadInboxMessageRequest","ReadInboxMessageResponse","DeleteInboxMessage","DeleteInboxMessageRequest","DeleteInboxMessageResponse","DeleteSentboxMessage","DeleteSentboxMessageRequest","DeleteSentboxMessageResponse","exports","APIServiceClient","serviceHost","options","prototype","getThread","requestMessage","metadata","callback","arguments","length","client","unary","request","host","transport","debug","onEnd","response","status","Code","OK","err","Error","statusMessage","code","trailers","message","cancel","close","listThreads","setupMailbox","sendMessage","listInboxMessages","listSentboxMessages","readInboxMessage","deleteInboxMessage","deleteSentboxMessage"],"mappings":"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","sourcesContent":["// package: api.users.pb\n// file: users.proto\n\nvar users_pb = require(\"./users_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar APIService = (function () {\n  function APIService() {}\n  APIService.serviceName = \"api.users.pb.APIService\";\n  return APIService;\n}());\n\nAPIService.GetThread = {\n  methodName: \"GetThread\",\n  service: APIService,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.GetThreadRequest,\n  responseType: users_pb.GetThreadResponse\n};\n\nAPIService.ListThreads = {\n  methodName: \"ListThreads\",\n  service: APIService,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.ListThreadsRequest,\n  responseType: users_pb.ListThreadsResponse\n};\n\nAPIService.SetupMailbox = {\n  methodName: \"SetupMailbox\",\n  service: APIService,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.SetupMailboxRequest,\n  responseType: users_pb.SetupMailboxResponse\n};\n\nAPIService.SendMessage = {\n  methodName: \"SendMessage\",\n  service: APIService,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.SendMessageRequest,\n  responseType: users_pb.SendMessageResponse\n};\n\nAPIService.ListInboxMessages = {\n  methodName: \"ListInboxMessages\",\n  service: APIService,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.ListInboxMessagesRequest,\n  responseType: users_pb.ListInboxMessagesResponse\n};\n\nAPIService.ListSentboxMessages = {\n  methodName: \"ListSentboxMessages\",\n  service: APIService,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.ListSentboxMessagesRequest,\n  responseType: users_pb.ListSentboxMessagesResponse\n};\n\nAPIService.ReadInboxMessage = {\n  methodName: \"ReadInboxMessage\",\n  service: APIService,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.ReadInboxMessageRequest,\n  responseType: users_pb.ReadInboxMessageResponse\n};\n\nAPIService.DeleteInboxMessage = {\n  methodName: \"DeleteInboxMessage\",\n  service: APIService,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.DeleteInboxMessageRequest,\n  responseType: users_pb.DeleteInboxMessageResponse\n};\n\nAPIService.DeleteSentboxMessage = {\n  methodName: \"DeleteSentboxMessage\",\n  service: APIService,\n  requestStream: false,\n  responseStream: false,\n  requestType: users_pb.DeleteSentboxMessageRequest,\n  responseType: users_pb.DeleteSentboxMessageResponse\n};\n\nexports.APIService = APIService;\n\nfunction APIServiceClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nAPIServiceClient.prototype.getThread = function getThread(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(APIService.GetThread, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIServiceClient.prototype.listThreads = function listThreads(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(APIService.ListThreads, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIServiceClient.prototype.setupMailbox = function setupMailbox(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(APIService.SetupMailbox, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIServiceClient.prototype.sendMessage = function sendMessage(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(APIService.SendMessage, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIServiceClient.prototype.listInboxMessages = function listInboxMessages(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(APIService.ListInboxMessages, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIServiceClient.prototype.listSentboxMessages = function listSentboxMessages(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(APIService.ListSentboxMessages, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIServiceClient.prototype.readInboxMessage = function readInboxMessage(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(APIService.ReadInboxMessage, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIServiceClient.prototype.deleteInboxMessage = function deleteInboxMessage(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(APIService.DeleteInboxMessage, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAPIServiceClient.prototype.deleteSentboxMessage = function deleteSentboxMessage(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(APIService.DeleteSentboxMessage, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.APIServiceClient = APIServiceClient;\n\n"]},"metadata":{},"sourceType":"script"}