{"ast":null,"code":"var _jsxFileName = \"/Users/nassarhayat/apps/textiletable/sushitable/src/App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Table from './Table';\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Buckets, PrivateKey, Client, ThreadID } from '@textile/hub';\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport './App.css';\n\nconst App = () => {\n  const [identity, setIdentity] = useState();\n  const [client, setClient] = useState();\n  const [threadId, setThreadId] = useState();\n  const [links, setLinks] = useState();\n  const [buckets, setBuckets] = useState();\n  const [bucketKey, setBucketKey] = useState();\n  useEffect(() => {\n    const setup = async () => {\n      const keyInfo = {\n        key: 'bs3g66aciasarrm46kosxap74te'\n      };\n      const newIdentity = await getIdentity();\n      setIdentity(newIdentity);\n      const buckets = await Buckets.withKeyInfo(keyInfo);\n      await buckets.getToken(newIdentity);\n      const buck = await buckets.getOrCreate('io.textile.dropzone');\n\n      if (!buck.root) {\n        throw new Error('Failed to open bucket');\n      }\n\n      const bucketKey = buck.root.key;\n      setBuckets(buckets);\n      setBucketKey(bucketKey);\n      await getBucketLinks(bucketKey, buckets);\n      const client = await Client.withKeyInfo(keyInfo);\n      await client.getToken(newIdentity);\n      const threadId = ThreadID.fromRandom();\n      await client.newDB(threadId);\n      setClient(client);\n      setThreadId(threadId);\n    };\n\n    setup();\n  }, []);\n\n  const getIdentity = async () => {\n    try {\n      var storedIdent = localStorage.getItem(\"identity\");\n\n      if (storedIdent === null) {\n        throw new Error('No identity');\n      }\n\n      const restored = PrivateKey.fromString(storedIdent);\n      return restored;\n    } catch (e) {\n      try {\n        const identity = PrivateKey.fromRandom();\n        const identityString = identity.toString();\n        localStorage.setItem(\"identity\", identityString);\n        return identity;\n      } catch (err) {\n        return err.message;\n      }\n    }\n  };\n\n  const getBucketLinks = async (bucketKey, buckets) => {\n    if (!buckets || !bucketKey) {\n      console.error('No bucket client or root key');\n      return;\n    }\n\n    const linksList = await buckets.links(bucketKey);\n    setLinks(linksList);\n  };\n\n  const onSave = () => {\n    if (buckets && bucketKey) {\n      const index = {\n        author: 'name',\n        date: new Date().getTime(),\n        paths: []\n      }; // Store the index in the Bucket (or in the Thread later)\n\n      const buf = Buffer.from(JSON.stringify(index, null, 2));\n      const path = `index.json`;\n      buckets.pushPath(bucketKey, path, buf);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Segment.Group, {\n    style: {\n      height: \"100%\",\n      border: 0,\n      boxShadow: \"0px 0px 0px\",\n      borderRadius: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    clearing: true,\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    className: \"avatar\",\n    as: \"h2\",\n    floated: \"left\",\n    title: identity ? identity.toString() : 'identity',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, identity && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, \"|\", /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-label\": \"4.0 stars out of 5, 123 ratings\",\n    role: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"\\uD83C\\uDF63\"), \"|\", /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-label\": \"4.0 stars out of 5, 123 ratings\",\n    role: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"\\uD83C\\uDF63\"), \"|\")), links && links.url && /*#__PURE__*/React.createElement(\"a\", {\n    href: links.url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"link\",\n    floated: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"BUCKET\")), links && links.www && /*#__PURE__*/React.createElement(\"a\", {\n    href: links.www,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"link\",\n    floated: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"WWW\")), links && links.ipns && /*#__PURE__*/React.createElement(\"a\", {\n    href: links.ipns,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"link\",\n    floated: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"IPNS\"))), threadId && client && /*#__PURE__*/React.createElement(Table, {\n    threadId: threadId,\n    client: client,\n    onSave: onSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/nassarhayat/apps/textiletable/sushitable/src/App.tsx"],"names":["React","useState","useEffect","Table","Buckets","PrivateKey","Client","ThreadID","Button","Header","Segment","App","identity","setIdentity","client","setClient","threadId","setThreadId","links","setLinks","buckets","setBuckets","bucketKey","setBucketKey","setup","keyInfo","key","newIdentity","getIdentity","withKeyInfo","getToken","buck","getOrCreate","root","Error","getBucketLinks","fromRandom","newDB","storedIdent","localStorage","getItem","restored","fromString","e","identityString","toString","setItem","err","message","console","error","linksList","onSave","index","author","date","Date","getTime","paths","buf","Buffer","from","JSON","stringify","path","pushPath","height","border","boxShadow","borderRadius","url","www","ipns"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Table from './Table'\n\nimport \"semantic-ui-css/semantic.min.css\"\nimport { Buckets, PrivateKey, Client, ThreadID } from '@textile/hub'\nimport { Button, Header, Segment } from \"semantic-ui-react\"\nimport './App.css'\n\nconst App = () => {\n  const [identity, setIdentity] = useState<PrivateKey>()\n  const [client, setClient] = useState<Client>()\n  const [threadId, setThreadId] = useState<ThreadID>()\n  const [links, setLinks] = useState<any>()\n  const [buckets, setBuckets] = useState<Buckets>()\n  const [bucketKey, setBucketKey] = useState<string>()\n\n  useEffect(() => {\n    const setup = async () => {\n      const keyInfo = { key: 'bs3g66aciasarrm46kosxap74te' }\n      const newIdentity = await getIdentity()\n      setIdentity(newIdentity)\n\n      const buckets = await Buckets.withKeyInfo(keyInfo)\n      await buckets.getToken(newIdentity)\n      const buck = await buckets.getOrCreate('io.textile.dropzone')\n      if (!buck.root) {\n        throw new Error('Failed to open bucket')\n      }\n      const bucketKey = buck.root.key\n      setBuckets(buckets)\n      setBucketKey(bucketKey)\n      await getBucketLinks(bucketKey, buckets)\n\n      const client = await Client.withKeyInfo(keyInfo)\n      await client.getToken(newIdentity)\n      const threadId = ThreadID.fromRandom()\n      await client.newDB(threadId)\n      setClient(client)\n      setThreadId(threadId)\n    }\n    setup()\n  }, [])\n\n\n  const getIdentity = async (): Promise<PrivateKey> => {\n    try {\n      var storedIdent = localStorage.getItem(\"identity\")\n      if (storedIdent === null) {\n        throw new Error('No identity')\n      }\n      const restored = PrivateKey.fromString(storedIdent)\n      return restored\n    }\n    catch (e) {\n      try {\n        const identity = PrivateKey.fromRandom()\n        const identityString = identity.toString()\n        localStorage.setItem(\"identity\", identityString)\n        return identity\n      } catch (err) {\n        return err.message\n      }\n    }\n  }\n\n  const getBucketLinks = async (bucketKey: string, buckets: Buckets) => {\n    if (!buckets || !bucketKey) {\n      console.error('No bucket client or root key')\n      return\n    }\n    const linksList = await buckets.links(bucketKey)\n    setLinks(linksList)\n  }\n\n  const onSave = () => {\n    if (buckets && bucketKey) {\n      const index = {\n        author: 'name',\n        date: (new Date()).getTime(),\n        paths: [],\n      }\n      // Store the index in the Bucket (or in the Thread later)\n      const buf = Buffer.from(JSON.stringify(index, null, 2))\n      const path = `index.json`\n      buckets.pushPath(bucketKey, path, buf)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Segment.Group style={{ height: \"100%\", border: 0, boxShadow: \"0px 0px 0px\", borderRadius: 0 }}>\n        <Segment clearing className=\"nav\">\n          <Header className=\"avatar\" as=\"h2\" floated=\"left\" title={identity ? identity.toString() : 'identity'}>\n            {identity && (\n              <div className=\"avatar\">\n                |\n                <span aria-label=\"4.0 stars out of 5, 123 ratings\" role=\"img\">🍣</span>\n                |\n                <span aria-label=\"4.0 stars out of 5, 123 ratings\" role=\"img\">🍣</span>\n                |\n              </div>\n            )}\n          </Header>\n          { links && links.url &&\n            <a href={links.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              <Button\n                className=\"link\"\n                floated=\"right\"\n              >BUCKET</Button>\n            </a>\n          }\n          { links &&  links.www &&\n            <a href={links.www} target=\"_blank\" rel=\"noopener noreferrer\">\n              <Button\n                className=\"link\"\n                floated=\"right\"\n              >WWW</Button>\n            </a>\n          }\n          { links && links.ipns &&\n            <a href={links.ipns} target=\"_blank\" rel=\"noopener noreferrer\">\n              <Button\n                className=\"link\"\n                floated=\"right\"\n              >IPNS</Button>\n            </a>\n          }\n        </Segment>\n        {threadId && client && (\n          <Table\n            threadId={threadId}\n            client={client}\n            onSave={onSave}\n          />\n        )}\n      </Segment.Group>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}