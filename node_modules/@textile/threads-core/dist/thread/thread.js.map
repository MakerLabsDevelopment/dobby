{"version":3,"file":"thread.js","sourceRoot":"","sources":["../../src/thread/thread.ts"],"names":[],"mappings":";;;AAMA,0BAA0B;AAC1B,MAAM,OAAO,GAAG,OAAO,CAAA;AACvB,uBAAuB;AACvB,MAAM,IAAI,GAAG,QAAQ,CAAA;AAErB;;GAEG;AACU,QAAA,cAAc,GAAG;IAC5B;;OAEG;IACH,IAAI;IACJ;;OAEG;IACH,IAAI,EAAE,GAAG;IACT;;OAEG;IACH,OAAO;IACP;;OAEG;IACH,QAAQ,EAAE,IAAI,IAAI,IAAI,OAAO,EAAE;CAChC,CAAA","sourcesContent":["import { Multiaddr } from \"@textile/multiaddr\"\nimport { PrivateKey, PublicKey } from \"@textile/threads-crypto\"\nimport { ThreadID } from \"@textile/threads-id\"\nimport { ThreadKey } from \"./key\"\nimport { LogInfo } from \"./log\"\n\n// Thread protocol version\nconst version = \"0.0.1\"\n// Thread protocol name\nconst name = \"thread\"\n\n/**\n * ThreadProtocol describes the default Threads Protocol parameters\n */\nexport const ThreadProtocol = {\n  /**\n   * Name is the protocol slug.\n   */\n  name,\n  /**\n   * Code is the protocol code.\n   */\n  code: 406,\n  /**\n   * Version is the current protocol version.\n   */\n  version,\n  /**\n   * Protocol is the threads protocol tag.\n   */\n  protocol: `/${name}/${version}`,\n}\n\n/**\n * ThreadInfo holds a thread ID associated known logs.\n */\nexport interface ThreadInfo {\n  /**\n   * Thread ID.\n   */\n  id: ThreadID\n  /**\n   * Set of log information.\n   */\n  logs?: Set<LogInfo>\n  /**\n   * Symmetric encryption keys.\n   */\n  key?: ThreadKey\n\n  /**\n   * The thread addrs.\n   */\n  addrs?: Set<Multiaddr>\n}\n\nexport interface NewThreadOptions {\n  /**\n   * Set of symmetric encryption keys.Can be generated with Key.fromRandom().\n   */\n  threadKey?: ThreadKey\n  /**\n   * Asymmetric encryption key (pair). Can be either a public or private key. If a public key is specified, this\n   * limits the types of operations the receiving Thread network can perform.\n   */\n  logKey?: PublicKey | PrivateKey\n}\n"]}